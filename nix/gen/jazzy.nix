self:
let
  sources = self.callPackage ({ fetchzip, fetchgit, substituteSource }: {
    acado_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/acado_vendor-release.git";
      rev = "d4d640fe222daa32943cda8da9e45e859c98111c";
      hash = "sha256-8gA7ZwANcFmzyoc3egAGyB3xpAQlHrs4nK6U1/KanwA=";
    };
    ackermann_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/ackermann_msgs-release.git";
      rev = "c36723cfed1874827a122ca18bb40401753b0512";
      hash = "sha256-zn0jbHQ6PrAlpzAwpr3Tu01dOE8TVcs0XYlTXL0x8wg=";
    };
    ackermann_steering_controller = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "94838d52c330cc3a1b453c2ad693eed11bd68846";
      hash = "sha256-n48D58DPQt9krj2ob3G9u6j37tRUJlbu08ZdzrjKeuY=";
    };
    action_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rcl_interfaces-release.git";
      rev = "6e0b31e86079a661e1aa4a13cab22c4c5c6a0c73";
      hash = "sha256-0XYc90JzsBo5Kqbj1YJl3q/1gyUYZI1G/kewVb/PPWs=";
    };
    action_tutorials_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "921bfebbda26dcc7087ea9ef5e7c63219860426b";
      hash = "sha256-N/IJQm5XhIM0dZIVhhYbQG2nBR2KkE6nW41RfIDIxmk=";
    };
    action_tutorials_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "9f4a74303f417ee9b148c2123a7caf06e93d84de";
      hash = "sha256-yfWyue6LUQAXqSPBfhpeFfsq5VLyCiGIRs/sHP2ados=";
    };
    action_tutorials_py = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "9fe78fa9ead21d853aa4236e31c8b2f252a370c4";
      hash = "sha256-SGXRECw8BNCknu/StKfvYKoVPdrcOOUqrQMLVD6BAmM=";
    };
    actionlib_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/common_interfaces-release.git";
      rev = "e5ca8552eb6cf8f1a9006a91eba15929fb78e5c9";
      hash = "sha256-W5qtKfERMOml/Kju3tQbLWR1kBr0jb2InsRMwMFDQwE=";
    };
    actuator_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/actuator_msgs-release.git";
      rev = "5b3260652e5c325a328b021361985c4ef8b508f8";
      hash = "sha256-euXTvPVaV7xPFXP/lH9jg2S87V9DyFmp1EwJVlF7AVs=";
    };
    adaptive_component = fetchgit {
      url = "https://github.com/ros2-gbp/adaptive_component-release.git";
      rev = "d9dd18ab639552e3a078a7ee900a99583d7368b7";
      hash = "sha256-W7/vGlSCfAW+RH7nsv4Po+MFZLDvwzuq/iSATbF9jaQ=";
    };
    admittance_controller = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "f435da8b5bd9f3d041664e10e62dacde0430a42c";
      hash = "sha256-Pwg4aWj17SHz+bEFU5fhpPZ0m/7Yubq55XGyzvTN2NE=";
    };
    ament_acceleration = fetchgit {
      url = "https://github.com/ros2-gbp/ament_acceleration-release.git";
      rev = "7e0cf4e578a5509e687bb9e0f36398e0334a0e62";
      hash = "sha256-tnkilfsTlrhC8xcFlu9E8VIt8hGsNKCcdD53KV8JRac=";
    };
    ament_black = fetchgit {
      url = "https://github.com/ros2-gbp/ament_black-release.git";
      rev = "73e6e5960fec6b5a0813c03c0409769ac414f871";
      hash = "sha256-iiaYQXm/NThNO/Whm7mnXwjMt8Tv0BadacnpthQ+t8g=";
    };
    ament_clang_format = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "108127c8819c5e591ef89309ddea19d561a93915";
      hash = "sha256-5I1qvVL1RNpJvCZa9P5A6+XVad0TvhYEHISldjxpZ2I=";
    };
    ament_clang_tidy = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "657a7ead01403d54af1ac7aae3f4fafceac09927";
      hash = "sha256-rWZZKEhMo2MePoR630azSKSYAafpV2ROQHjQD7//L1E=";
    };
    ament_cmake = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "4b7f3ca2b9f7d14c4393c82a62b0c55768e3ac01";
      hash = "sha256-gzQNWAvMJZnaye/yRxtOMu6m3v+iBzdymPJUA6gL8sc=";
    };
    ament_cmake_auto = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "7181c7fb46a89e026993ea016ab54889b3cdcc75";
      hash = "sha256-J1If3cVNRWqrWW421Z2KTDE+gW7Pv1WE7XveHX1N9XE=";
    };
    ament_cmake_black = fetchgit {
      url = "https://github.com/ros2-gbp/ament_black-release.git";
      rev = "0619d0836621763525160d811ee56d77d318642e";
      hash = "sha256-+J4lUnp6nAP4gCaqIpWUixT404dEjDK07Dw7xcjhjEo=";
    };
    ament_cmake_catch2 = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake_catch2-release.git";
      rev = "99c9bf4fa0edf16c1ea0099598cf03eeb6793d6b";
      hash = "sha256-PFP5trdCmO4MmGg8CFeK0nTgMWRn+XQN2Z92TWyddYk=";
    };
    ament_cmake_clang_format = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "860fa42aed1207f1c5555f90b3f8f8972fda89de";
      hash = "sha256-XgbrX57vRIqCL+mko/GGENqmmDq9upqlbL4SRF9DHmQ=";
    };
    ament_cmake_clang_tidy = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "562390b923d85145a6adf9531e3a9f3a9e2422a4";
      hash = "sha256-4ZgjaZqJQsEHsalfHbssmhm/5Hx+sM1L+BWEMkKOds4=";
    };
    ament_cmake_copyright = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "1b5882814156bc618855e3ea600b8956676362c9";
      hash = "sha256-t0vY5c9Qog/0tjpoeXMzi90mG3EGT93frRtS4CWiCok=";
    };
    ament_cmake_core = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "65ace2e56e472ed3b69364bd4fd7c652d752b15c";
      hash = "sha256-czHzCWezSznFjt0r10mEYbLNbFkZ1CoUf8QbjrZfsMM=";
    };
    ament_cmake_cppcheck = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "d180989000970b2979d9d6d84f76c6171ee9ab20";
      hash = "sha256-LQPg2oJF0/bIp0FvFMLWVNZfmW0Bka5DQlsufV23qJk=";
    };
    ament_cmake_cpplint = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "d2d1a8273bf0a2d803a1888153ce6bebc766162f";
      hash = "sha256-pBDS27G8OZtNMGWRys5PY5uEpQLUn8qWxAiT02sJa9Y=";
    };
    ament_cmake_export_definitions = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "d05333c9e98e9d54210b9129da24398da08b5a93";
      hash = "sha256-gjA5vE6MoQRHBoArre5vwo9dhBcSweurSOa5duKj4CM=";
    };
    ament_cmake_export_dependencies = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "41aa3c8243d4e647aa120fc636b29dcf528a5ead";
      hash = "sha256-S1tYBjIjvtfJCrfis6oUq5wEgO6kpa3y9j3GMIeLk/k=";
    };
    ament_cmake_export_include_directories = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "285da55baa18a327b0357d4c192e2ac34b1758fe";
      hash = "sha256-smMbUeou3dpMhMS5gn+ZPqsO/wWZjHj9ZnZRNi9tJOQ=";
    };
    ament_cmake_export_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "701c75f89e3ec2cc9acf0b3a5273bba9a3c398e7";
      hash = "sha256-sDA4rGTnnDRsk4XYW/+Y8jSyj2g7TYH504sBEHlP8Gc=";
    };
    ament_cmake_export_libraries = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "72f229348f16dbece6e2541f6076e74d538810be";
      hash = "sha256-hyHKyrC0qCPmU61i5XbCz/A9iZ2EcUz6pBZSxa76gio=";
    };
    ament_cmake_export_link_flags = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "b46ce25edae48db6e13008a86eda21f2765316c2";
      hash = "sha256-vpjLsmo6PirL73NMhMciK26tYWpc1YbIU/6+BnXFnVo=";
    };
    ament_cmake_export_targets = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "521a7f65f30443a6a6fd9111d5d4b248c34064a6";
      hash = "sha256-V36nAdHMYOoJg7ayBiAI9qReleGkG2O0LiTFO95nUFI=";
    };
    ament_cmake_flake8 = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "110a8ccfb5bfba1912d63c37f13c8fb0db504ccd";
      hash = "sha256-SCdCrbKNNBaJoq/MO+4HEbgR8sQXfX53Vy/VzHV1Ik0=";
    };
    ament_cmake_gen_version_h = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "a7e9cce7b0c6f8b0600d338112c98fe5cbf1da59";
      hash = "sha256-iM53Ds+Bz5kGrOaojMYc5LUlYCIwksTXl8n7BsYvaAE=";
    };
    ament_cmake_gmock = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "dcd47081d7ad3bdf2aec1c295a33529487ad49e2";
      hash = "sha256-p/ujgJpEj8qGsnCzolischryGUnC4CVUFElTuHwJsLc=";
    };
    ament_cmake_google_benchmark = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "304fb5c4cd27736a60362d7971c8c00cb9ce92a3";
      hash = "sha256-3R3pYhCRVi6AFjNR7zQupuFKUNA0p1kv6xnew6hXOtc=";
    };
    ament_cmake_gtest = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "1449389d4509d65830ab164cce5700edd6d800f4";
      hash = "sha256-YciA2zVQz/s8E5H9riC/gXb6pQGowQ9dbPIxQxhqACk=";
    };
    ament_cmake_include_directories = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "338e259eab15b52d18c2957fbdacd74df92a2e9d";
      hash = "sha256-m7C19IgcnFCEtnA/+gVZbGApP2NLZahyJsKRDopJ2RU=";
    };
    ament_cmake_libraries = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "4f19452769a2137a73e98f1af2a4da29d907fbd3";
      hash = "sha256-qPsh1jLploxTcx7YSm921jfl/hTLS7rfyYoeg8VB8g4=";
    };
    ament_cmake_lint_cmake = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "f0e89fa066b9cdf407170c6debc0f8f655dab2c6";
      hash = "sha256-sYyP+R1o6szZhGnxGRhLcJa9nD6UKY98iFHIp+1ElH4=";
    };
    ament_cmake_mypy = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "705ae426f665fa378fe2b962bf460bb85426f6d8";
      hash = "sha256-bEBmui69Fivty7/hw53LagD0lrC9qHgSMMkYZQUzKRE=";
    };
    ament_cmake_pclint = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "4598f7358b2566f461b4efa944ecdfb9c7c2c050";
      hash = "sha256-+z9pHdy7Qbg/M9gZwkH5b3ZxkoTFPhe10AO3sfjvn1I=";
    };
    ament_cmake_pep257 = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "a8ecb6e0dad421016fe3b344893d99df5b5a266a";
      hash = "sha256-KK/puCJaueNmVkNyucowZFhyXcoPwB0/qUkqDOjMygg=";
    };
    ament_cmake_pycodestyle = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "f40575f5f47905d401902fe267dd018eb3529c4b";
      hash = "sha256-NZlTgSZUwDO2wYr58UHvavY/enyZAFV6GsQjKSmgqg8=";
    };
    ament_cmake_pyflakes = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "d6c4463ac1ae85b3a4ec01f4fc1dcc28ae68cbbe";
      hash = "sha256-/QXs6c3/sXVRznCZn4kS971pF5f53YHe1YXy8NqjY3Y=";
    };
    ament_cmake_pytest = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "fc58ed5a63f318a04230054b00827529e7bd2666";
      hash = "sha256-EvqH8/HvE1+IJq3aMPtqxAAhZ2i80nVL92brdBZ9OlA=";
    };
    ament_cmake_python = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "3af1fe8eeb1cd05a19e9d35d2356247b3277c576";
      hash = "sha256-pBQquv6pNDPWHZ5Bd454RyTXLa1f+h81olEcIzDZeWM=";
    };
    ament_cmake_ros = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake_ros-release.git";
      rev = "3e2e92d82c1ae9b9a284684ae48601bfa3ca32fe";
      hash = "sha256-tT6X6MXP8iTsdlyNk33jdPbZZT+sWXvuIn8cTnvTYyw=";
    };
    ament_cmake_target_dependencies = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "20e71e7c06a7595eccc6abacae9aff75dcf0ce6b";
      hash = "sha256-c+d56mCQKkjI9H5j8MPgUKeP1SUkn1HGUo/sIGYd5gQ=";
    };
    ament_cmake_test = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "4a2003a2e58c6c07a8c787f049431907f2c95d5d";
      hash = "sha256-RKywy1QY2j4gqIjiM79unPTrERgcjW3AdJihPKnwYpk=";
    };
    ament_cmake_uncrustify = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "6296ed02fa5fa9a16d242bb7bdc750ab964031e8";
      hash = "sha256-GG2ciHIKYUTdWdMbrZrc0wGNOCd5BuePogbKcQPF7Og=";
    };
    ament_cmake_vendor_package = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "97482c1209ed7cf762456a67198edcbfe360e6ea";
      hash = "sha256-KkTE1QQazWtE0GfTss356rNFZaYbrqRkSkq8CMhAeU8=";
    };
    ament_cmake_version = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake-release.git";
      rev = "32420daf26d8fad29ef3e22789b21693b90d0cfb";
      hash = "sha256-BVd7jyhX4TNgCF1a1mrSGI9AfEqbvfezA+3m6IrykIA=";
    };
    ament_cmake_xmllint = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "8013b5d9a21161b181346c568df60d37d7aac2fd";
      hash = "sha256-3B93teFzxO0437/wDohxprbq6i18PRBswRfYFL4fBQc=";
    };
    ament_copyright = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "f654101da3cf1def189f0c17a520ae92f28798bd";
      hash = "sha256-LVeMfca8EQ5mvYuUo13PqnkllrAvlbUo0VOev/twp4k=";
    };
    ament_cppcheck = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "4865eb9b002730f58409ab27dabc50c3efed6cd3";
      hash = "sha256-rtc/wzp1wQPM+3yI94fIAuVRFAfAjqXMWBcyjktb09Q=";
    };
    ament_cpplint = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "11877123f5f285c0dbdd8a5aa4ae6bea6d238cf6";
      hash = "sha256-13KjfdbDXUhNFxtNJI4LCKRBjlVB1sw/ZlnAOK4FJ9c=";
    };
    ament_download = fetchgit {
      url = "https://github.com/ros2-gbp/ament_download-release.git";
      rev = "6ce6469292c63e6bc20f3e38a9062b0a027f92e4";
      hash = "sha256-6V9DhJraMIbNz3xeSeczpOFyaWgBqKsz2vQV4jFl6qk=";
    };
    ament_flake8 = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "14de142529f6aec081b365637f2683109321440d";
      hash = "sha256-0sUE60ee36OXnMpBjLcxwpNlozQqWJUTo5BI9/c2Wfo=";
    };
    ament_index_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/ament_index-release.git";
      rev = "3c5dd9ddaad1ddb13eb85b7daa7c117fc8b5bf87";
      hash = "sha256-ytQU6fmD13UGKlhbYq0WhC1KBdHZXHsuK7M+iNihXkk=";
    };
    ament_index_python = fetchgit {
      url = "https://github.com/ros2-gbp/ament_index-release.git";
      rev = "86457bacaeec03825e194c05e908a6fb2f9a6061";
      hash = "sha256-7lIMorXGjQYthb0K4PtdrLSyjiRuLQ9ixmanpMqP83Y=";
    };
    ament_lint = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "743e72f2a5a406d647dceeeaec8e201cceebe378";
      hash = "sha256-dEz6J1YJhhpuCG2qc+Su536EpeXGuwXmQ4E86mfZfzE=";
    };
    ament_lint_auto = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "9dfbe5dc5dc7367e57c8df22283e0a2d9c674511";
      hash = "sha256-cTEKLki3mpr0mnz11IYBahCl0Pn7oWCg5BfIwzUCvU4=";
    };
    ament_lint_cmake = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "3fc981134ac46aeb042d8b45314d95125f9c21ca";
      hash = "sha256-cWsd6T6EZHCvf1Sq4AKa4T06mJtVRx4JmC0SjOXzd3Q=";
    };
    ament_lint_common = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "607c45944545b8bfa53eac102eaaa82108f8ea27";
      hash = "sha256-y1nInGXgD+QW8FS3gjyXLux8o14wuUPgSjxWuTYjWjk=";
    };
    ament_mypy = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "ee3cc105753726632d19cc5772a9ad3ca859010b";
      hash = "sha256-hM3pes968NZW++cG6X/0jH3kUejkInacRxaXCI3p994=";
    };
    ament_nodl = fetchgit {
      url = "https://github.com/ros2-gbp/ament_nodl-release.git";
      rev = "87296f88baceaac5b561ecdd0e95240673ea8044";
      hash = "sha256-9azhFZrnSaHJiIRFdPiDTiDO3j2v3eKxQBNdAEFwd5A=";
    };
    ament_package = fetchgit {
      url = "https://github.com/ros2-gbp/ament_package-release.git";
      rev = "70ffe60211c4feae5e780e5bc95e169d2f79e7ec";
      hash = "sha256-UQTsrOgp2aSxuorO8p8yEInpzIOb5c6+s5Jp1F/FD9c=";
    };
    ament_pclint = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "725f2afddf9bf67ccb21defb0b368e4810f3c381";
      hash = "sha256-mzVi+tRmtmtS69433ykdGKWc7EHM0VAGC9f6zdo4teQ=";
    };
    ament_pep257 = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "0bb71d571b221aeb287068c94187568fd9056cda";
      hash = "sha256-AeV5aRu0D5pK6O5Ywq4FIEho2kkeDb++umzFTgOkrAQ=";
    };
    ament_pycodestyle = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "6bef8f6c1ad417071b10bf2c6204134822cc74dc";
      hash = "sha256-zY+5b5O+jZjQSE7zTWrWth8dDUlmpeCRiCBSCFR1Xbg=";
    };
    ament_pyflakes = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "1862376009b02b5088acb8ac300da55e65394d8a";
      hash = "sha256-KMHU5aqi9tt95GgtqbB7obYtSAUxzWzR/UFQhILKkdk=";
    };
    ament_uncrustify = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "4b95da7542ecd4e0178956e8067b78be8c9588b8";
      hash = "sha256-zLma8lPxGUpuHaQSfwEtRY4npt/4bNCOHQbjmYWevgQ=";
    };
    ament_vitis = fetchgit {
      url = "https://github.com/ros2-gbp/ament_vitis-release.git";
      rev = "270441817e4e65c986495b325a82f04e7e51c926";
      hash = "sha256-Na2vZDmx1yo4NFMDS9mmn1De1NRtjjs953gSAHRCxtc=";
    };
    ament_xmllint = fetchgit {
      url = "https://github.com/ros2-gbp/ament_lint-release.git";
      rev = "e9ba8180050ef6c9cc988053dc002c12a649d3f9";
      hash = "sha256-hEPWBk0jFXWmN31PEl3WknzxY1V5ToOead2AJ1xNJUA=";
    };
    angles = fetchgit {
      url = "https://github.com/ros2-gbp/angles-release.git";
      rev = "9192c8b6ce21463dcfb1afdb7312257603f34d11";
      hash = "sha256-l4xIXnIMoWmTEkIubTtt1g/NZdI+H9zvYXd0izyPAKw=";
    };
    apex_test_tools = fetchgit {
      url = "https://github.com/ros2-gbp/apex_test_tools-release.git";
      rev = "1de070b1ce7d0efb9a77e69eac2e17a3f1f3d212";
      hash = "sha256-vrX5LngYVt0Fxd0td4idUCVPg+j96W7S07zUG/lM8W4=";
    };
    apriltag = fetchgit {
      url = "https://github.com/ros2-gbp/apriltag-release.git";
      rev = "630ac8b64c23ee222b1ccc070efe20af30497908";
      hash = "sha256-gh98hPfxaAHqN4iEbnlYrBGpiD9urWJSo4Qg5OZgfgE=";
    };
    apriltag_detector = fetchgit {
      url = "https://github.com/ros2-gbp/apriltag_detector-release.git";
      rev = "4793979b66ea90f82cabfea99db22a25a732e435";
      hash = "sha256-jOHnmzOSEBudRKyE4FGX5VDw7JIfjVJ2gcmiwcNz4jQ=";
    };
    apriltag_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/apriltag_msgs-release.git";
      rev = "c9eedd48ea144914fc93feeb56812322635a8782";
      hash = "sha256-8gmaJqHmANuH5XDGCZ8C29KjCY7QKQ8r2DSpl1jxp20=";
    };
    apriltag_ros = fetchgit {
      url = "https://github.com/ros2-gbp/apriltag_ros-release.git";
      rev = "1f0ff6ec7df749994976a6c7df51b3bfdf954763";
      hash = "sha256-1BAPfaLgYZ+JV3LFidzL5IOnM4wd7fvcXNRkAzCyZU4=";
    };
    aruco = fetchgit {
      url = "https://github.com/pal-gbp/aruco_ros-release.git";
      rev = "1420fb9dbc4427826b9ba9b29c78d8a9905d0397";
      hash = "sha256-3Foblmp2VasqOKhDmgA7heDxnleqT6Pqnk7dXajdiE4=";
    };
    aruco_msgs = fetchgit {
      url = "https://github.com/pal-gbp/aruco_ros-release.git";
      rev = "dd365b8b0a63b154ef602fb3405829342398996f";
      hash = "sha256-EUZsF13naoL/xNnzsHHJmDuodN/Bb15EI1Pc+ZV2bHk=";
    };
    aruco_opencv = fetchgit {
      url = "https://github.com/ros2-gbp/aruco_opencv-release.git";
      rev = "2627ed963f4a6e887754f8e910c15689f0b5c89f";
      hash = "sha256-SidyRIeaYeAZTr6h04wPmYBWhR8Z1YIGnV35sjdHmGY=";
    };
    aruco_opencv_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/aruco_opencv-release.git";
      rev = "c4ff2411a22a0916f08ff933eb620d58beecf73b";
      hash = "sha256-dP2eRoPV3R8Okt63Wb5WW9MsbCpOeZ/3ti0YVxYtkKU=";
    };
    aruco_ros = fetchgit {
      url = "https://github.com/pal-gbp/aruco_ros-release.git";
      rev = "6a254acadd05ba78a14ddb800009dd556ab09508";
      hash = "sha256-LIF5MiASkw9eXs5hNg5L1VAmICC588FpCYYSOHAjZjU=";
    };
    asio_cmake_module = fetchgit {
      url = "https://github.com/ros2-gbp/transport_drivers-release.git";
      rev = "2b840fd6e7471e2732d02884a3711aacb9e3be80";
      hash = "sha256-S4As/gOIQQTIqYgblUDPs2pjBDmLPz4Ii2/CTMHhRUs=";
    };
    async_web_server_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/async_web_server_cpp-release.git";
      rev = "82946dd9a58d8c6a924ae3464004272d467e5f63";
      hash = "sha256-bz0je03yD60CjR08T++F1rGD5GhfXZJWAbL6L5rINbo=";
    };
    automotive_autonomy_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/automotive_autonomy_msgs-release.git";
      rev = "34fc7813acfef2ff1efba213b734f4fb35656208";
      hash = "sha256-R/GduU+VD3B9INpzOpa84Bl42xFAtGthn8PEt8iYmpw=";
    };
    automotive_navigation_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/automotive_autonomy_msgs-release.git";
      rev = "a7a4af96be7bcd5fb697f17127c2e7b3364b993b";
      hash = "sha256-N+QDJUyFWyIto9hqSOYNMPTrVLJR+tIO2J4ExUZ27+0=";
    };
    automotive_platform_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/automotive_autonomy_msgs-release.git";
      rev = "52a0f24bbcbe3b2a5f503ada8e224014cab98b6c";
      hash = "sha256-HMhXhLS41h9P1STIbuEdhOgxNORj/YJrfDldGKeMKfA=";
    };
    autoware_adapi_v1_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_adapi_msgs-release.git";
      rev = "5b4fd78663bd8c77f2a944341b129ebbc0de4beb";
      hash = "sha256-5jgqVvAOI02ArN1EDxTdvc/F1f4E/LDkN9nPbnHYSQI=";
    };
    autoware_adapi_version_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_adapi_msgs-release.git";
      rev = "45b258f83827ee2dcad818ee64b51391e2e5cdaf";
      hash = "sha256-NgmJaOTPpTaLzuKySD64mVynkUKIS1hPwtV4ebCPdfs=";
    };
    autoware_auto_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_auto_msgs-release.git";
      rev = "f0718df1847edd2e93373607df31b52a675a0f31";
      hash = "sha256-sPwNe2uGjV3WHz+htqZrzm5dUO1JvGJC9xQcn2d+LU0=";
    };
    autoware_cmake = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_cmake-release.git";
      rev = "f180036d1d4661a5758129e22e5c74375308e6d8";
      hash = "sha256-uNWJEFHdKrWaAM3S5MTv2SI5xia8uBU4BdoPu0+jjpc=";
    };
    autoware_common_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_msgs-release.git";
      rev = "da07e4e34ce21e48c33fdf6aa9dc4f7bad5c9974";
      hash = "sha256-9HmKkjfm27Mi06V1q6+JfI9LuRj87TRy0KzuiE8XYZc=";
    };
    autoware_control_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_msgs-release.git";
      rev = "fb102e6b49e433607a29d0ad67525c0fec73b2a8";
      hash = "sha256-ka1LsUG3V5LgaUP4rD7F+n5yk79a9XGUiwqOsERHQO4=";
    };
    autoware_internal_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_internal_msgs-release.git";
      rev = "f74baae445e0a1ec57de8d08ba468540b3f02002";
      hash = "sha256-DqEUabWDDD8N8YSpZyB/5hJgvPbmkMCKoY9SJgfh/Q4=";
    };
    autoware_lanelet2_extension = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_lanelet2_extension-release.git";
      rev = "4952a5748e785ee484927679b14438b9c189628c";
      hash = "sha256-FFcXqCj03T/NFLGwGGby2tN9kbPuMqJAor1gEKCxDfA=";
    };
    autoware_lanelet2_extension_python = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_lanelet2_extension-release.git";
      rev = "63754a5a2bc6f3fe21c458867ca7a5f1b238c8c1";
      hash = "sha256-eZTubJSRZSC6f6OUDOrrU2+cBxk8gEF9gHa/1Yj0I/8=";
    };
    autoware_lint_common = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_cmake-release.git";
      rev = "18799aeb6914ff30a282d4d668329f5a20c18ead";
      hash = "sha256-fS+Hicd3o8vyffKxyp4X3iosj9vznc4UJIbAH8Kp5BU=";
    };
    autoware_localization_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_msgs-release.git";
      rev = "ce12d777a3fad93b30d1504a2bdc5bdbd0f65da0";
      hash = "sha256-pQqQiBLgVz+rPRabcqtXKDN+BhpqNvBvlqLiSM4bv+w=";
    };
    autoware_map_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_msgs-release.git";
      rev = "c59a0b6649ecee23ccbbb767e47738d49a589152";
      hash = "sha256-tw7A6h4GJrNAeyyGfNJWeFjBubw4RNlELVvShpA64yM=";
    };
    autoware_perception_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_msgs-release.git";
      rev = "07956c1a8bd43649a234761161e53d1d49a5dc79";
      hash = "sha256-xuyU9wSxb+THVuMVNB6e5X873sqw8K+veaG3XhEccRY=";
    };
    autoware_planning_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_msgs-release.git";
      rev = "b4f96f6e29387ed979065537dea862cc25a59fab";
      hash = "sha256-BrRhj72+4kvRvHLaCv9roAUChrtG4jbulSwy8eF02VY=";
    };
    autoware_sensing_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_msgs-release.git";
      rev = "e98f5ddafae33a61b45c6bf7c70122c1d3454ac3";
      hash = "sha256-tnSGZtUUErZDyMsltqWrm00QGikUuXEXi1SxlOzRXWY=";
    };
    autoware_system_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_msgs-release.git";
      rev = "96963a77d17c584973cd52f3e86f4b2c21b3272c";
      hash = "sha256-hbYa4pl/hLWUDxk+gN234i8Vz2MlS3Jfi1xp8aHXvqY=";
    };
    autoware_utils = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_utils-release.git";
      rev = "4d582d3100af60a9be279e0a93bf70672ba9ab70";
      hash = "sha256-64bVDZx6Rh0NjYj7GrBjcZrD9RGeONzy0Gzq5qQ+1XU=";
    };
    autoware_vehicle_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/autoware_msgs-release.git";
      rev = "3acd63a48e658a68324868bddf4d761634286be3";
      hash = "sha256-6aO0NolqbPRlwrCNG4AgviUdoV/VJBIl8qrwZw9uYfw=";
    };
    avt_vimba_camera = fetchgit {
      url = "https://github.com/ros2-gbp/avt_vimba_camera-release.git";
      rev = "b9560dba83cf75fde6656e573957548ef314dec6";
      hash = "sha256-b1YFGg6j0b9K0ewtxAKbcnT1um/8yTIj7XIIbEChDbY=";
    };
    aws_sdk_cpp_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/aws_sdk_cpp_vendor-release.git";
      rev = "41c63dd8468ba63aab2d7669694a8f32637fa771";
      hash = "sha256-y9V12GcuRTRxl5BbMVNzmPIoC3qIhoGQhgK3kjmd1xs=";
    };
    azure_iot_sdk_c = fetchgit {
      url = "https://github.com/ros2-gbp/azure_iot_sdk_c-release.git";
      rev = "e676a419f238786718cf3966015a0e9682777440";
      hash = "sha256-QE6hU1HXCVU54bLQQ0XHXStpb3FWGJjupGq7NFIh43A=";
    };
    backward_ros = fetchgit {
      url = "https://github.com/ros2-gbp/backward_ros-release.git";
      rev = "5a2e2816c743af43c84af47fbb3062add53e9a38";
      hash = "sha256-bWsmqFK/qWWpbhuWLQpYSQyNWcbHbMKq/ACVsHa/Vf0=";
    };
    bag2_to_image = fetchgit {
      url = "https://github.com/ros2-gbp/bag2_to_image-release.git";
      rev = "3297bdaf4e1c18b523774df23c0da5d666acca50";
      hash = "sha256-D602KBwsYPh+wbNrK2y25DZk1/wPPc2PlZj4ktvPhqI=";
    };
    behaviortree_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/behaviortree_cpp_v4-release.git";
      rev = "12f5df55f5eb54f2893771d9f4e1942ae420768d";
      hash = "sha256-/wi43gC6qhFEXVP2DkkASIWNXY1t6kLMoiG+KaDm7DY=";
    };
    behaviortree_cpp_v3 = fetchgit {
      url = "https://github.com/ros2-gbp/behaviortree_cpp-release.git";
      rev = "0b5edf037bf08f1401392b7914a0d6add7789360";
      hash = "sha256-mNfg3QRd1f1UOvmGK4o+bj8+rt+2/pir2Z6H+vRmxDE=";
    };
    beluga = fetchgit {
      url = "https://github.com/ros2-gbp/beluga-release.git";
      rev = "5a4b604ada6fee862adc8b71acd5e7a8b76ad2bd";
      hash = "sha256-z5Drm8uEZ590QUMtDES+CD3DJd7gm0OYs542R0quhY8=";
    };
    beluga_amcl = fetchgit {
      url = "https://github.com/ros2-gbp/beluga-release.git";
      rev = "0a28678898be6587e8ef29c6a5d96109761837b1";
      hash = "sha256-o5w8tS4fYcmaf9rRYPabtPGEs27Xf50+6nRPhhPN7B8=";
    };
    beluga_ros = fetchgit {
      url = "https://github.com/ros2-gbp/beluga-release.git";
      rev = "2ce8e69bfddd01c5c394c9b23c499a4a6f18ce55";
      hash = "sha256-4RnTLzRcla3M7v/bkXIxVunsAemyZVO4lcW3K5gSeUA=";
    };
    bicycle_steering_controller = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "92aa4c3d106f9e5a1dc44fc4538c99a19619bb02";
      hash = "sha256-iCypBzLbQ+bJ+Md+x4FE6k/Vw18yzKIwqaaGsKIp2Oc=";
    };
    bno055 = fetchgit {
      url = "https://github.com/ros2-gbp/bno055-release.git";
      rev = "49988d444537b50ab1266226e494e3b7253d64d7";
      hash = "sha256-C8wFVPMD9UXtgtXX3T4ERtwtrr1IKIwYwiGzp1XWbS4=";
    };
    bond = fetchgit {
      url = "https://github.com/ros2-gbp/bond_core-release.git";
      rev = "ef14f8df594843cad635278c35a496bc76cf3e06";
      hash = "sha256-HumzPokICAnb7HyYW4rIhMDSZ8ZnZ+tzQ6LqYn9/dDU=";
    };
    bond_core = fetchgit {
      url = "https://github.com/ros2-gbp/bond_core-release.git";
      rev = "37dcfcd24735776aa874b749575f1c6ebd5787ff";
      hash = "sha256-pieGbpeYdGAOAULspCbQLtOYRAMogAi8zxZoMZkCNJI=";
    };
    bondcpp = fetchgit {
      url = "https://github.com/ros2-gbp/bond_core-release.git";
      rev = "5d1cd97ca5849587ac2763330b3841445d886e87";
      hash = "sha256-fbNSgNmnnRCTFEsui9H+C9BJOcZyqF8Cv6sZjP+89qo=";
    };
    bondpy = fetchgit {
      url = "https://github.com/ros2-gbp/bond_core-release.git";
      rev = "7c82a2866dd3a0416dd370b7163b3384ae48635b";
      hash = "sha256-qBFpCzvtA7/Vghb+QkbCL8TBZoc5Kdhp+q876UZqVhM=";
    };
    boost_geometry_util = fetchgit {
      url = "https://github.com/ros2-gbp/boost_geometry_util-release.git";
      rev = "e62a890a7f907b19266df8846abc46b3e92e291f";
      hash = "sha256-5P2YMX4buwUYt7NAF7FiWJguryH/I8GC2y+vIK5KI0w=";
    };
    builtin_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/rcl_interfaces-release.git";
      rev = "77d0c5db6fc502b0d44926e2a852b8149eebe704";
      hash = "sha256-4Sz8x27mOS78Aif3y3nIoUnZ7MZNlGI2m1qqluPKoG8=";
    };
    camera_aravis2 = fetchgit {
      url = "https://github.com/ros2-gbp/camera_aravis2-release.git";
      rev = "5f3e3d8ced22c864b03026f8804b1a5b45aa0648";
      hash = "sha256-5Ah7DOmJ1tb7bQ9XttTlDnsH6igmEM8S5i3sZm4pWZc=";
    };
    camera_aravis2_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/camera_aravis2-release.git";
      rev = "779f712fb162187e4c606b1dc4f533d39939481c";
      hash = "sha256-uJNlVnQ0C6eoW8P7lIvVPeQwCegOvlodYxLCKO6fv1Q=";
    };
    camera_calibration = fetchgit {
      url = "https://github.com/ros2-gbp/image_pipeline-release.git";
      rev = "9f12a0ceb1addfe5ced8b8efe83f6584bdcf90a3";
      hash = "sha256-gYw01Vh+2YET8QinxXKbAhVQLIUvmBIs9UFYB5v7L54=";
    };
    camera_calibration_parsers = fetchgit {
      url = "https://github.com/ros2-gbp/image_common-release.git";
      rev = "07de0f00f55464e3c3ddbb662d24eed0e6b29281";
      hash = "sha256-wKn7KsxZviY/E9GTcDyMdCTVi7lAfKUWho7uaTIbx40=";
    };
    camera_info_manager = fetchgit {
      url = "https://github.com/ros2-gbp/image_common-release.git";
      rev = "0b086b5ef41dc07dc764a3fad18f09cd87471ddb";
      hash = "sha256-YJtJO7eYICc27OtvRhSpPS9mad8FOcRp97czmEdAzjY=";
    };
    can_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/ros_canopen-release.git";
      rev = "68c38f7cdd398daa84e83a808f8a7da772f6d71e";
      hash = "sha256-9K7mCEEppzWP9ITzFZlJje6JHNIFoBxJ/FXPs+NoX4M=";
    };
    canopen = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_canopen-release.git";
      rev = "f7ef32f1dd37b628c0f9fc1dc09a07d0367a0a2f";
      hash = "sha256-piA4LMW+Rk9PuHBjbD9oATPlP3AXOEIdCD5BxTH7jEo=";
    };
    canopen_402_driver = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_canopen-release.git";
      rev = "101f303cc30684d76e09bbfbfb90a6cdcebc361b";
      hash = "sha256-jzPNcmFGqFCQ+Iu0skkeiXVNfNC1s6nZO6zBvTw+p7o=";
    };
    canopen_base_driver = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_canopen-release.git";
      rev = "ef623be7c9fcfa9e325e4a05fcdb0cfda9904565";
      hash = "sha256-okKOznu5KCRhv5byFy36jawqcLh98ZQB/VR7Jjkf8gw=";
    };
    canopen_core = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_canopen-release.git";
      rev = "4121a85cba89840b28dfa6a7a0737946e3418555";
      hash = "sha256-FGvB62WkL47PY/x3FNDlblrjJJWiKutqhX/flTV/z9Q=";
    };
    canopen_fake_slaves = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_canopen-release.git";
      rev = "19e6ce4bc36465f2bbd2b6a8c359391d8cd8d166";
      hash = "sha256-3/FPYI561bff5nqES47wLASGbBezxQt3pcmShGE1WOM=";
    };
    canopen_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_canopen-release.git";
      rev = "45c79d4c66a246d9b5b6f71e9c79865e1be15b27";
      hash = "sha256-b4Art6VZ5FZEibqz5dLOW4lYb2loGS/4m9HV9+jWrS4=";
    };
    canopen_master_driver = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_canopen-release.git";
      rev = "f879ab2ee6a9a8d8fa4f75531daaff0d1f07375e";
      hash = "sha256-xzkjzzOaEItvb16SVik9+qsQVSauWVtMX/phwDXKdDk=";
    };
    canopen_proxy_driver = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_canopen-release.git";
      rev = "d5c0e9c04f634b1cada8a043355ee09a13fd294e";
      hash = "sha256-QwLvJwY8xrI+FKlIKORTwDnTRlrWA8r1hx7IQbDoTmA=";
    };
    canopen_ros2_control = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_canopen-release.git";
      rev = "522659d64c9f9607958b6d52d4ea7da431e48a05";
      hash = "sha256-NGL7U94YdUR2F84u0e/YXtn2NfkFbgya9dhhCSTcpYQ=";
    };
    canopen_ros2_controllers = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_canopen-release.git";
      rev = "c38699e89e1eab1a0d1984daf277c82f7e7a0a12";
      hash = "sha256-koxHonzCdViHXf1kTwf19nMEa8F/YF+ILwVF5p+Muhw=";
    };
    canopen_tests = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_canopen-release.git";
      rev = "245f785040107d7d95abbf1f3939c2638ec8024e";
      hash = "sha256-lDdU44SmHu7qBWcilveZZLNdZmMRX/PIjsuqOfDy0V8=";
    };
    canopen_utils = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_canopen-release.git";
      rev = "181beef157c2ca0a620517759160ed38a96b752b";
      hash = "sha256-6Wm4mQlXmkNgHkDqu2NDjeeA/4QXqqxc0vWdyftHwgc=";
    };
    cartographer = fetchgit {
      url = "https://github.com/ros2-gbp/cartographer-release.git";
      rev = "9985ea5634e38f87cd15a64c35a15f34616d8e10";
      hash = "sha256-++Ii26FmyqOYF3zYOPtQ+2ZqNUMomOanyu7Z5uYyu/Y=";
    };
    cartographer_ros = fetchgit {
      url = "https://github.com/ros2-gbp/cartographer_ros-release.git";
      rev = "220cc62d9b410d777c4bd483e9e4861e1a3325d7";
      hash = "sha256-VvGxCdcHPGbZC+Mp6BMa4qpdJ2eoz0PuoBvhe/6gtCE=";
    };
    cartographer_ros_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/cartographer_ros-release.git";
      rev = "9a63c21a390bff45650200ccf82af75957ba8dec";
      hash = "sha256-POmR42dN/mrsnISU7egd4dQ/y+W+VWvPUwQK+JlLCeU=";
    };
    cartographer_rviz = fetchgit {
      url = "https://github.com/ros2-gbp/cartographer_ros-release.git";
      rev = "c0528e46728174c2c4893a6bbf43fe87ba86f2e5";
      hash = "sha256-HBhTH+7iZCDSV9zi8Okp+MFALOAAQc3TV+szBXmIvPU=";
    };
    cascade_lifecycle_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/cascade_lifecycle-release.git";
      rev = "545036c9a46bd1a542280f389d8a1e904cd219fa";
      hash = "sha256-vr1h9TdjCkXvrxYIYrmyyXpL/IO9M0hByXfdsHA2FO4=";
    };
    catch_ros2 = fetchgit {
      url = "https://github.com/ros2-gbp/catch_ros2-release.git";
      rev = "f16df2c7b6a00e3836e2546f9b66bf3b447cbe42";
      hash = "sha256-8+FIcqzIHZrfEeATgko1oxSpJA3YY5lis1+sEd2Y/Rk=";
    };
    chomp_motion_planner = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "8d2072a1cdb79eae16ddf9a6a52a91049fce8851";
      hash = "sha256-FHnAXCg4I5muP7vFkWMolNmTjY7+CfmJyqH38+qBOFg=";
    };
    class_loader = fetchgit {
      url = "https://github.com/ros2-gbp/class_loader-release.git";
      rev = "769259c0b275d43eccf56c3ad2c5a0b7f9bfe0f1";
      hash = "sha256-VkYLe2iawf0S5dULWUBCq93K3PyWEyiwiARhE8Y5cMM=";
    };
    classic_bags = fetchgit {
      url = "https://github.com/ros2-gbp/classic_bags-release.git";
      rev = "fa40e137b62cdb218282b15b08ae42359462390d";
      hash = "sha256-ZJSMrs9eRmeojheIs6GQcdz6FbdvasObPF8AjZg6XQM=";
    };
    cmake_generate_parameter_module_example = fetchgit {
      url = "https://github.com/ros2-gbp/generate_parameter_library-release.git";
      rev = "98db3ef1d11ed8145e5643b2ce060fd0e274db90";
      hash = "sha256-fv1GUmHiJR1Zj2CI0CdtNFcUIVXuykeEmbSN9ib0fRw=";
    };
    color_names = fetchgit {
      url = "https://github.com/ros2-gbp/color_names-release.git";
      rev = "e0678b4bf68ce7ce8cf1ec15ada29300e365ca06";
      hash = "sha256-956LQvQPv4QtQBKeDL62YimdLDh1yLGsi9AYgWiBh/k=";
    };
    color_util = fetchgit {
      url = "https://github.com/ros2-gbp/color_util-release.git";
      rev = "231c6ee5d3a4330fa1d39e1085f260961d1acaf9";
      hash = "sha256-vHOcY7emyuuqZ06vo77SGvGnnV/T+wv1Va/tHUIGXIs=";
    };
    common_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/common_interfaces-release.git";
      rev = "d3cd7bc2ac70c1f793bb486b8890a3e705d51955";
      hash = "sha256-wxRD1b3gGcPbjpovwadMlw+A3m7bfdNsaOyxgcA/lSI=";
    };
    composition = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "deb73b233cbb746b766ab0c88cca5a9dfcffb3a1";
      hash = "sha256-khIarBBRLvdJsk/Our7rIOAIXGYcHOiIrufnZNQ1b/s=";
    };
    composition_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/rcl_interfaces-release.git";
      rev = "7c7e9ce9c33e3d9920ce099ede290d836642e111";
      hash = "sha256-YTmCcgVPa5sosZzoRmcBvPGUebFIGOCK8SjI0aGXMRU=";
    };
    compressed_depth_image_transport = fetchgit {
      url = "https://github.com/ros2-gbp/image_transport_plugins-release.git";
      rev = "91b4470b88b9cf5e5c03fef655621dd5258477a6";
      hash = "sha256-kpp3wHHQZkLto7sfY8eZlB/NZH7UMhemr7H2DGQfSgA=";
    };
    compressed_image_transport = fetchgit {
      url = "https://github.com/ros2-gbp/image_transport_plugins-release.git";
      rev = "449c64364b22de9b8e4cd4232c8b99d55b545586";
      hash = "sha256-LImoXUW1Wa2lVaSpwFoBuSMk83yHi40nWrPITzg27SY=";
    };
    console_bridge_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/console_bridge_vendor-release.git";
      rev = "bb994f26fbd204276c099c630b9ee07e48e70026";
      hash = "sha256-+m52Ig9uULM+20Ouz1g69az+DbquL6j4S81kz7VOxD4=";
    };
    control_box_rst = fetchgit {
      url = "https://github.com/ros2-gbp/control_box_rst-release.git";
      rev = "d516096763524853e8317020610ec07aac7b0da4";
      hash = "sha256-HEG9kwIr6mxkYCMU0hJzDgZZOsx5NgqjKf0y6BkwcbA=";
    };
    control_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/control_msgs-release.git";
      rev = "5dbea9d4a6f9d131e7449cd67483fc2d4e69c6f4";
      hash = "sha256-URQCB0GxwGeBx7qDLvfeBxUHDgifVGWnImV68kDRCws=";
    };
    control_toolbox = fetchgit {
      url = "https://github.com/ros2-gbp/control_toolbox-release.git";
      rev = "a7a4962446f6437bd7342af6510361947f880ef3";
      hash = "sha256-8k2Jlg4wFOuHFj1R/mlh8NMvgEGijDRy6kme0opUgm4=";
    };
    controller_interface = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_control-release.git";
      rev = "551c36d01d3109cf09ef83cc62bee0725e02083e";
      hash = "sha256-DD+ZC+ffEdKqWXdewxfCYNVDbbWdpJmkyNvoxAdrd3M=";
    };
    controller_manager = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_control-release.git";
      rev = "8ceb3ef980c270bfd502796409aa8c83d3b5932a";
      hash = "sha256-r6TOFJKrX+giJnjqOqrxL9CNgTgx34WWAchkFQLYY/s=";
    };
    controller_manager_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_control-release.git";
      rev = "598adc4d0c4144a5d23d95c9040161035107c28b";
      hash = "sha256-N6lj4zNLvHSBKi4ltZ/QAvlLtWiIMadHclkDYUOzGnI=";
    };
    costmap_queue = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "1f791537476975e56df5859d08dc3cdf58cb8ab8";
      hash = "sha256-6lIFNLqzNSGnQ/hnp6EG6mF7N4vBO88qTmMeIh2PE1M=";
    };
    cudnn_cmake_module = fetchgit {
      url = "https://github.com/ros2-gbp/cudnn_cmake_module-release.git";
      rev = "de4d4f9f0b0abe550eb0594bb9cea11ceeb536e7";
      hash = "sha256-J6BqQzZzZMC0MVQ5oJCXgXu5fzoPlV+JErISeIuss6I=";
    };
    cv_bridge = fetchgit {
      url = "https://github.com/ros2-gbp/vision_opencv-release.git";
      rev = "d30ec40f8ebf943aaa16b860166e53a49a6f6174";
      hash = "sha256-2p4HVqVl4NRdIrRsJnGkfOapNAmOhKZN1R2KMmpxG/w=";
    };
    cyclonedds = fetchgit {
      url = "https://github.com/ros2-gbp/cyclonedds-release.git";
      rev = "73713526652778f6d7b1cea5a4aa9e27c52f8fb3";
      hash = "sha256-JFn8HlIahFX99o5SBpVkhfap+EIKfLy3mZICNlZNh0o=";
    };
    data_tamer_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/data_tamer-release.git";
      rev = "5274316290956c5257fb416f790585cc9aa31cd6";
      hash = "sha256-2AzGQXKFYJAAluNZytnO9/Or37ZYidTyDew6IkPUyos=";
    };
    data_tamer_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/data_tamer-release.git";
      rev = "38fab093efa7d483c5039f181a3a0254bdf6184a";
      hash = "sha256-NxB4rc0pONAAz2IJs4m7OQeB4K5aF+RNCRjmwkRbjLc=";
    };
    delphi_esr_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/astuff_sensor_msgs-release.git";
      rev = "1472f4d0624f3eb26fbc4f16588cb8361f059807";
      hash = "sha256-K7D4wHGenbiq35o06s88bjoKOUdZl3oqIoSabiYN24o=";
    };
    delphi_mrr_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/astuff_sensor_msgs-release.git";
      rev = "80133cae1505fb482f79e8d2465c8f28d0685ddf";
      hash = "sha256-wRjHKzZNBmMaEJPFEgEysXQ+9dMe3vyzYyFO3V+cuEs=";
    };
    delphi_srr_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/astuff_sensor_msgs-release.git";
      rev = "884b29c9fe2ee84935864b270cff7751791ecf3f";
      hash = "sha256-Vu/trELYAZeFsNU7L9/L1c/gwv48ZdARSjJ1HkujJaU=";
    };
    demo_nodes_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "bd715f2561120dca20102b8364013325adfc80d3";
      hash = "sha256-pSrlqygi3kMfiMtOngfgsOyV8AIgis5TnO4/7lIdr78=";
    };
    demo_nodes_cpp_native = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "9e72479129ef53e4e5f013d5943795c8fe21311e";
      hash = "sha256-6OGfQUe3IK7NAwCmoNS77930g1kvWGnlNhOfnGDEnMM=";
    };
    demo_nodes_py = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "4c25959b5066daab3e037533b7dfc380dda62a25";
      hash = "sha256-+2ZZpQnOChaRARja3aOfvZjGKyzbKjSDB1OasCrEWyo=";
    };
    depth_image_proc = fetchgit {
      url = "https://github.com/ros2-gbp/image_pipeline-release.git";
      rev = "3d76f9cda42bac566b4aacef07f7a77e700aca08";
      hash = "sha256-xpPLIbhWWfwimaFe1Kbjvy+rPLPdtoCGjXXiPOkiQgg=";
    };
    depthai = fetchgit {
      url = "https://github.com/luxonis/depthai-core-release.git";
      rev = "307f6308a2c46452fd4fac00c94591e6064dfdb7";
      hash = "sha256-ZlZa5BCuio603aG8TEheR/fHVoz4ugUeX7kXi2FK6Qk=";
    };
    depthimage_to_laserscan = fetchgit {
      url = "https://github.com/ros2-gbp/depthimage_to_laserscan-release.git";
      rev = "519824930e5f9133698b8b7f683157a064c30d14";
      hash = "sha256-QU8tJNEPEB6X439eDP+kDXczR29OQNtKRX1uXKDqgDo=";
    };
    derived_object_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/astuff_sensor_msgs-release.git";
      rev = "cd2176913fed3e36da3aa4941492f377c3ff662f";
      hash = "sha256-gHKh+ix0fZzuNvAtc/i+u0v6YLY+jUfqW9BPaLgC0/U=";
    };
    desktop = fetchgit {
      url = "https://github.com/ros2-gbp/variants-release.git";
      rev = "32f68b6baa355c7a47de783407f272843654644e";
      hash = "sha256-SDdRl/0AhXOo1iKjZqc+XABRaWTXxOE0fiLzJVFnvDY=";
    };
    desktop_full = fetchgit {
      url = "https://github.com/ros2-gbp/variants-release.git";
      rev = "3bdd312d71e66a970a9491a2beb2e6ee4a82e417";
      hash = "sha256-Ym/P4L92jCLQbe2hhq+3I5CLtJE59ya1csIFnutZlBE=";
    };
    diagnostic_aggregator = fetchgit {
      url = "https://github.com/ros2-gbp/diagnostics-release.git";
      rev = "9fb5a7bf655628227d67fbaec5f0e42800132505";
      hash = "sha256-2W4QEYOvHVJwi09yulXBdREOzE7fnU+RJjjHqP9HS+0=";
    };
    diagnostic_common_diagnostics = fetchgit {
      url = "https://github.com/ros2-gbp/diagnostics-release.git";
      rev = "7c16ee5cb6bf54093e2d76a5a0732b679fa431fd";
      hash = "sha256-YubkpkA5p0I1W1I8ZPJtW5wN/Q29la2EZJjctI4OLRE=";
    };
    diagnostic_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/common_interfaces-release.git";
      rev = "2acf941fd8d1ca0aa5e22de6dbaee01208471ecb";
      hash = "sha256-VaNM6gL1W9xv0Z4CsOxSt4rBRHODNb3jf8pvyhdfjI8=";
    };
    diagnostic_updater = fetchgit {
      url = "https://github.com/ros2-gbp/diagnostics-release.git";
      rev = "af4c66e5425273589528e80b64e97999ebbbed80";
      hash = "sha256-9nevOyNOLICz9s9bNDBxtbISwlJl+SOpyJ9uff0iK6U=";
    };
    diagnostics = fetchgit {
      url = "https://github.com/ros2-gbp/diagnostics-release.git";
      rev = "f440ce580a9b0e829fbac478c0a4b90ea9a309a2";
      hash = "sha256-A9E6zOlkU7uEtUuRNxsC6kfiKASxXMlvLNQnXvhAvbI=";
    };
    diff_drive_controller = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "a8488a00460c1eb5190d1234693347682a10331d";
      hash = "sha256-Y6gcnsaCjrdRPgcwLKHbuXuPbfLWNqiEC9Y0/N+1vI0=";
    };
    dolly = fetchgit {
      url = "https://github.com/ros2-gbp/dolly-release.git";
      rev = "5d847c8aa319f738c369490da961e87b5e408508";
      hash = "sha256-1ugxemjgNM3QtSsQ64TCZHu8J9gYPS5Qh2s6VRBTiFA=";
    };
    dolly_follow = fetchgit {
      url = "https://github.com/ros2-gbp/dolly-release.git";
      rev = "47cbab8d3916e099b2487642be419d68f98efa7f";
      hash = "sha256-Udj2U+dWE5+JIz9GOSB6X4C9y3g/g30Jp3+BTuiiRX0=";
    };
    dolly_gazebo = fetchgit {
      url = "https://github.com/ros2-gbp/dolly-release.git";
      rev = "0bde960b5ce53fba85a03fa3f289a6f4a2ca1286";
      hash = "sha256-sLCbhJjIRzZvq15SlStZjonIvhpPw57fK5vRlQ3689A=";
    };
    dolly_ignition = fetchgit {
      url = "https://github.com/ros2-gbp/dolly-release.git";
      rev = "30e66cc18f165d39df07f385651aa269dd5cb9f3";
      hash = "sha256-BGdsjbemIWS94BjSHjDClK1ui6sM17J0lJlrhfhj/Vg=";
    };
    domain_bridge = fetchgit {
      url = "https://github.com/ros2-gbp/domain_bridge-release.git";
      rev = "23216d613ab4e031c139bbcf42e6306f907b0d13";
      hash = "sha256-eajUFSE7L+45VSlUvbXcvd6RjjdERKimvpFjuXVbCO8=";
    };
    domain_coordinator = fetchgit {
      url = "https://github.com/ros2-gbp/ament_cmake_ros-release.git";
      rev = "5e3d0a038b3fb9faa3533271fcecc7c606ad15e5";
      hash = "sha256-pOFTQT4CPWn2FDFTi9cNv54NZ97CMjH/7pOV24uR6Zo=";
    };
    draco_point_cloud_transport = fetchgit {
      url = "https://github.com/ros2-gbp/point_cloud_transport_plugins-release.git";
      rev = "70cf5bd849fe6d94cb212c5c35e45a364be2ab97";
      hash = "sha256-6rpH1H2TMVBOm3m7lPgGWKjs4XsovibiazY5qClpMAA=";
    };
    dual_arm_panda_moveit_config = fetchgit {
      url = "https://github.com/ros2-gbp/moveit_resources-release.git";
      rev = "33a3867196bbccfc7bc2b335b9a67e1452701bed";
      hash = "sha256-V71OPHp++p3BjHIOsZaorfCVHJWME4JIA7kB869Ruk0=";
    };
    dummy_map_server = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "f8815b91ab5967a8d0c1ee7a981b54ca3104000c";
      hash = "sha256-SnBrRYUgjHWEpniJMfpF3pQ+9D2yZ5wEvV5uvkw5hus=";
    };
    dummy_robot_bringup = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "c8e83973d30a27ee3ffc9fbce7d4b91ec346459b";
      hash = "sha256-SPZM3ZERTqe7Yr82lZTi9cID5qKsNtPP4o88bcEtvoA=";
    };
    dummy_sensors = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "7e3e27660fd19a184efb4e59881b2a7bc8dd57a7";
      hash = "sha256-cKpsUvA8UZzh02/237Xr4txRbltPht7AUTvn+cJruPg=";
    };
    dwb_core = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "3b7115c77ba40cf49486b72cbe5758a34650d915";
      hash = "sha256-2R+xjO19EMMv5DrSNdzw+UMv1uyYYYJcolX/DRKkfgM=";
    };
    dwb_critics = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "a5eff0a8a61615ba0495c1a1334f2dcc369889a2";
      hash = "sha256-wf3WuqY+07bgqWT0P9DWlH9EZK5nkOVsWNXb5i/j+84=";
    };
    dwb_msgs = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "60b144db7804f985ad1d060b80f6e0ba7199e8b1";
      hash = "sha256-95/XZWlJACz0Y4hy1HVEhleHpQ0iFQPTU7KmByY3IBY=";
    };
    dwb_plugins = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "00c0130b490628983cf57d9b08fee4d3347630a2";
      hash = "sha256-DtmHY0SViAnvfz/MA9j4UOQ5bKI8JaRPmy4Ur2BDwi4=";
    };
    dynamic_edt_3d = fetchgit {
      url = "https://github.com/ros2-gbp/octomap-release.git";
      rev = "0915c4cff28e454f7fe2ac3338d5550f466cbcfb";
      hash = "sha256-w1VOjU0mpO24Z2FAcdzCrmrRF6p7q2M/GbXhGlh3K0w=";
    };
    dynamixel_hardware = fetchgit {
      url = "https://github.com/ros2-gbp/dynamixel_hardware-release.git";
      rev = "9e93cb35756ed7c16e03ad98297796433a909558";
      hash = "sha256-deu91vC3s0Ae1J44bHU0xIFpjV6bJ0q40HfourfwdvQ=";
    };
    dynamixel_sdk = fetchgit {
      url = "https://github.com/ros2-gbp/dynamixel_sdk-release.git";
      rev = "9ed7cf8e3a010569e4964bd0d3767b2cf30d6f64";
      hash = "sha256-oqGB9nx57Y1CMx1pbn81xSZbN9xXdKhJmj0SvIXyaNY=";
    };
    dynamixel_sdk_custom_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/dynamixel_sdk-release.git";
      rev = "85f07909dd34b31e3e7f105b1ae99b47c3e8810b";
      hash = "sha256-pWGzlnONW1lXGAui57EHtKsqI3VguxYMeL+ytq6dgec=";
    };
    dynamixel_sdk_examples = fetchgit {
      url = "https://github.com/ros2-gbp/dynamixel_sdk-release.git";
      rev = "35ae7e09eb0d2d3a39c518764c296ea3d1aef187";
      hash = "sha256-TRPWVWEEJtx/attfpSr6SATpy7YhzqP9x8ef/IVsULA=";
    };
    dynamixel_workbench = fetchgit {
      url = "https://github.com/ros2-gbp/dynamixel_workbench-release.git";
      rev = "f24e76f99e4784119d6923e895da3e3c2770b4f8";
      hash = "sha256-iA1/c6eRcHNi0wnJhwog1K7jH1fKwsqIvSfgCZivKrc=";
    };
    dynamixel_workbench_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/dynamixel_workbench_msgs-release.git";
      rev = "dc300702741bf35a25967aba0a7465a453890fca";
      hash = "sha256-NMrVMFxbUmSDCdSRTO6gRJtKsmEeqY4Q5FqkBQCeY3I=";
    };
    dynamixel_workbench_toolbox = fetchgit {
      url = "https://github.com/ros2-gbp/dynamixel_workbench-release.git";
      rev = "8cc15eb3375e6ff7c40998b8d799bb0942d979d6";
      hash = "sha256-nOIZ6YHjctUbm0SxTewtbsAXlfG10kknrKhpsVPGR5k=";
    };
    ecl_build = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_tools-release.git";
      rev = "d6b76b771a66754d6a4b03c493decf0a0b33c207";
      hash = "sha256-ttmcSFmWhB7bERQkup3ucja+EU9tIc4Sb4cVetuSS00=";
    };
    ecl_command_line = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "f9f941661ee74e5aea6ea8015798ca4f7a7f6fbd";
      hash = "sha256-0rOoPXNkY6U26dMB39t2IjB44typZqO4T5rW2jrEOl8=";
    };
    ecl_concepts = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "a0348c6d3a69b498f2e10dc009637ae7751e6329";
      hash = "sha256-hH2MIha8e5l0G1CqvBSjisV52RKAkaE0J9ZtGpxM9EM=";
    };
    ecl_config = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_lite-release.git";
      rev = "19f1dae955c6a2accdf1e788f69880c70658033c";
      hash = "sha256-eH0ytH9tso+gcYGQSXy83dIPeklxY5K+/Jo0cV9qAxI=";
    };
    ecl_console = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_lite-release.git";
      rev = "8ae020da4280c2a5035e07302d4bb15e2e59a78b";
      hash = "sha256-w1XZlDsjZDQ0MPDG+dhU0mD3KZjRt4yslxJCP5RHeTE=";
    };
    ecl_containers = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "b06753c443575d5f82ed4a98aa1933c674737437";
      hash = "sha256-943O8bp1zs58toB05o+e+e5rOiiB7i0OAWEjrbjQ7Ng=";
    };
    ecl_converters = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "2afba0633775bff93778d25664c02fdb1b7f82c5";
      hash = "sha256-hZthKv3t/fhEc7ubch+5EneflAc54IyTtCuBW4vzaF0=";
    };
    ecl_converters_lite = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_lite-release.git";
      rev = "11f9c0317747fc6f91194c2cc986acb51c53eb7c";
      hash = "sha256-a8sm73bxxx6IYDP6tv76IbjyUHSAzx6QreCCBMQUePE=";
    };
    ecl_core = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "46da871000a3a83679269de8f8c116e49f5403a0";
      hash = "sha256-/qmRsU0lb8R70sW/g5572zrbdGlRSBu3BL+GhX77UII=";
    };
    ecl_core_apps = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "ba34ad25a3cf2830523653dfcf6428cc69b26adb";
      hash = "sha256-s2Ebyn5n1kiUIFSZ3pa4Ycrcv+Zxp6fh/XBk2xxjWbI=";
    };
    ecl_devices = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "1ad2716be394bc1c710c0983d14843e7c1edcc76";
      hash = "sha256-fdhKBuF9q7x8XDG5ld90RQRXHhZf4I6pJGU5KK6EOeI=";
    };
    ecl_eigen = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "208e5f42160f4e760287d44b5c5cd0ede3331972";
      hash = "sha256-tkEm2XgT3kJqdj/+L317KVB0SOyCjRKuLqsOWToPxbo=";
    };
    ecl_errors = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_lite-release.git";
      rev = "22b35c290286e16af8fc32b17a30d92f0dbc0f16";
      hash = "sha256-tMZvRB3bre8Dk+0YS+OqnkCGKff09J6PKWHytWxelmk=";
    };
    ecl_exceptions = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "be56e8dab26536c5577b5810ea4272f1a4542070";
      hash = "sha256-vSUx0IaohNthgxC/EHPPCyDY6YrVAcZUT4u5L099eA4=";
    };
    ecl_filesystem = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "f05b4974145c3bf020724e07908c1d00e621c44c";
      hash = "sha256-b9AmUCVBFQ84JFx0ER/eD+2NF6JP/zybtNFnzKAI+dg=";
    };
    ecl_formatters = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "33a563df933bc760b7baaafd8fd17f0b8267f278";
      hash = "sha256-KJ9Xhcl2ACKk7qJz2OTu+dVkgzMcvIBEwmXdl0NaiKg=";
    };
    ecl_geometry = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "88fb603dc11bb212904342a75158fdbad487a916";
      hash = "sha256-XXr9pl1hLn7gS04rAzdTRXa+Fe0p4Mn7sC0scLWC2Zc=";
    };
    ecl_io = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_lite-release.git";
      rev = "42299c5544a59b82a57735e51e4a761e53f41952";
      hash = "sha256-I434FhFkRvH1CxPDYASTtfmyT/mK0OLoVA+VPEiSa24=";
    };
    ecl_ipc = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "591c2d181016f5c4ea267c904d7da916fd09074a";
      hash = "sha256-VScic0GudpLDyw3R7bdxdgKjaPeyx0ynFGMpfB66eRo=";
    };
    ecl_license = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_tools-release.git";
      rev = "6cac334990aa3f48432e60c033a56aa590a79261";
      hash = "sha256-7IkZyQJw9go1s2je+YLPGemSTMtC8PNA66qCC6akU6w=";
    };
    ecl_linear_algebra = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "67190a8dea831f2c6b0ebf36d232d4bf5b9b58c0";
      hash = "sha256-2Mofxug8ckLfTnStaTQtx69z6SvToiY8incBV3OMXJo=";
    };
    ecl_lite = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_lite-release.git";
      rev = "b21a43e7be198acd2a02ba5e51ee340d19675952";
      hash = "sha256-pfGGGa3tTMW+9VEsHT0ofv7mnz478eGmJA10PjrEvJI=";
    };
    ecl_manipulators = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "918c1d66427daaa5f9454b3fc53b1e5125c80a22";
      hash = "sha256-O2B7UtubuHvctssWyG6E5OwnApjjdWF+m62+6Da9Qy4=";
    };
    ecl_math = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "8c03abd2b51a5c4517c465743b82c07def3571a2";
      hash = "sha256-FJevrMf2MxF+heenjke0paV5yAvePcxmHcEW7Is+Pmc=";
    };
    ecl_mobile_robot = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "a9c1743d3485af826a0cfa4f960ec5af94841de6";
      hash = "sha256-NQJy3LdrqwiDAynl1fLCbDJz/A4qCxq6VpeaO+fr/4Y=";
    };
    ecl_mpl = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "dbcec2bc48eba197df4b3795e1fce8bb119b96ff";
      hash = "sha256-b7VJovFqbuLBco3qEl5r57uuO7wTyZrjQSNR6hNX00k=";
    };
    ecl_sigslots = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "3538d06591cc853d4e0cdef4e822477bd8125aac";
      hash = "sha256-c5lvTwI1CTmfeMKJsCuyr/ilN2KWeABt+RYdAxB9cdI=";
    };
    ecl_sigslots_lite = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_lite-release.git";
      rev = "5ef1635c1eef70e7fa3bb94f07a43adf19806042";
      hash = "sha256-nGYQQNr6VnsCIPQoCQfLmIxpw1uEBrqSu1PjF4XPSxk=";
    };
    ecl_statistics = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "78080a935dfbc52cb865bfcf0c688bfcd3447b8f";
      hash = "sha256-znVdvA/1rSX25k4ZeeWg3ageP91ua9cDRosJ2FCTUyo=";
    };
    ecl_streams = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "73bdd35f128030911ff03e6720e4a5178d89a226";
      hash = "sha256-IpgY894/j+PnAx+KIYX8Wvb7yve2eAvnuYrKq0ZgX0s=";
    };
    ecl_threads = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "9c8d0fd7fa1235ba4439c41fbfc2ec61bfb2d349";
      hash = "sha256-4lhOg9DicobrUw8Xel3vSP7jrgFI9obXn6dYbQEyFHA=";
    };
    ecl_time = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "737c5377306d2ab352553b7abac2e223d197c918";
      hash = "sha256-SC1B6uuNMjWdHD10L5nXdVvgkguZSiwRc1i/zONxu5E=";
    };
    ecl_time_lite = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_lite-release.git";
      rev = "e01d6ea66feaa66afcb6351f65934b129fd692fb";
      hash = "sha256-xUWy6QEatAillIK/EUqV549irG+mWxeknSHHCLIkMT0=";
    };
    ecl_tools = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_tools-release.git";
      rev = "edfc0a38f86fa95d0d26a7c5f051a2bc7642399d";
      hash = "sha256-z/lKRKqVLxiSJ9nSnQyQh/Dsk/+USiDw68+Nfg9Fc0U=";
    };
    ecl_type_traits = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "9344fa6b5e1d35e90a1cd7c040e3d153a8c90a47";
      hash = "sha256-s8Qksqd5xzvMghgqo0aQ6r0Oyou3x5hgXLB5t3MvZVk=";
    };
    ecl_utilities = fetchgit {
      url = "https://github.com/ros2-gbp/ecl_core-release.git";
      rev = "b5d6924f855d8ab70a7d59415fbed2d89ed6cd38";
      hash = "sha256-lr/gRtkjgtYbXIMwa5OUbaSehxs5kKRTATWgZooFnRA=";
    };
    effort_controllers = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "2e1d5b469e065bb330410861e73edde882d3165d";
      hash = "sha256-2XEaxdC7bg3Awq4LJyjZNOt99I+mBKZxbRZc4fyneEc=";
    };
    eigen3_cmake_module = fetchgit {
      url = "https://github.com/ros2-gbp/eigen3_cmake_module-release.git";
      rev = "558850a9bed7e064e1dd11c03f5c43eaeaa8f656";
      hash = "sha256-k2+KI5dgNItTq+Q9z/ORtjXBmyG29cWrs8Hwqk6lw5k=";
    };
    eigen_stl_containers = fetchgit {
      url = "https://github.com/ros2-gbp/eigen_stl_containers-release.git";
      rev = "764dd93e29b143630f05b7e6396789c2967395f3";
      hash = "sha256-Zjjaom5lCGLMKC33kq6er1Ji54XUj/3hkSIWcBnXI+E=";
    };
    eigenpy = fetchgit {
      url = "https://github.com/ros2-gbp/eigenpy-release.git";
      rev = "59964cc674d0c3424f6db5978a4dc0cdaba49839";
      hash = "sha256-MZ1G6CeMAyd4QNxOthd+LfXnpGHVqb9yi1wUbSJFhTU=";
    };
    etsi_its_cam_coding = fetchgit {
      url = "https://github.com/ros2-gbp/etsi_its_messages-release.git";
      rev = "0dfdf3d0b2d89fb37606d5cdd32c0644610be157";
      hash = "sha256-MBdNUO/7UUJeXjiN2HpcjYAzpz2eRTyhAYiUNtL/290=";
    };
    etsi_its_cam_conversion = fetchgit {
      url = "https://github.com/ros2-gbp/etsi_its_messages-release.git";
      rev = "dab80d981b95506fbb70ea27e2dba3e8af0f2dd2";
      hash = "sha256-CPG0HgksGTM/4VEC8ighY4WwpeMQ+K4LIbAwrXVT3/w=";
    };
    etsi_its_cam_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/etsi_its_messages-release.git";
      rev = "d8833970f254290ac7dd6087fa8c59cff403329b";
      hash = "sha256-B6xUyvR76DXE9wvfDmLqiKoKwpxJPQznFOWsx++zsy4=";
    };
    etsi_its_coding = fetchgit {
      url = "https://github.com/ros2-gbp/etsi_its_messages-release.git";
      rev = "bc262343a3da294068e583898d76f2aa530157be";
      hash = "sha256-eti3UXMRo8kB8d7220k76NMh7expbPy9wTQhLixs+Ns=";
    };
    etsi_its_conversion = fetchgit {
      url = "https://github.com/ros2-gbp/etsi_its_messages-release.git";
      rev = "45510801d34cb5d51cf74eb913e16ba30524ae40";
      hash = "sha256-MBEhBnT0hAAzo0EV0KYDwrDstorBUwn4mDAn4QvS2+Y=";
    };
    etsi_its_cpm_ts_coding = fetchgit {
      url = "https://github.com/ros2-gbp/etsi_its_messages-release.git";
      rev = "9a7a07f4ee5da96505c8166e1c8b8ab66d46caa6";
      hash = "sha256-U8YPlm3lx1Zbc+3gNzkpcqIOQ0j+7xdUNg+FYadaju0=";
    };
    etsi_its_cpm_ts_conversion = fetchgit {
      url = "https://github.com/ros2-gbp/etsi_its_messages-release.git";
      rev = "75c9cd873cc277eba18cf60adadcd04cd7985194";
      hash = "sha256-DtP4wXEfBTOMExhvQeWP/gssi9W68GaT68OxmikCDnw=";
    };
    etsi_its_cpm_ts_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/etsi_its_messages-release.git";
      rev = "3d7a6664e1d4662aea3e70b41d22f7edbce68a74";
      hash = "sha256-3JZVsypNPSG0n17RRCQonKJY0B9qA9QGdIv/+Wfver4=";
    };
    etsi_its_denm_coding = fetchgit {
      url = "https://github.com/ros2-gbp/etsi_its_messages-release.git";
      rev = "87be8a1ba261b0ad79dde6200626028b7a25a637";
      hash = "sha256-iKSjDsvV3E5zW0KBCaMOZCW0xp7aZR+Bk+uLLakc9/o=";
    };
    etsi_its_denm_conversion = fetchgit {
      url = "https://github.com/ros2-gbp/etsi_its_messages-release.git";
      rev = "39b46eee5be59c1aa86c3b262a956c0e5f209c6a";
      hash = "sha256-jkd+LAZaK8dTeAn02UWxXv/b1kYpfufdK1HZ1vEWXrs=";
    };
    etsi_its_denm_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/etsi_its_messages-release.git";
      rev = "c74ac34c87421b954708ab5451961eed59154591";
      hash = "sha256-G/rxxmq3lo5lK5uLrMV6aclSgJEwYOkhXEKL26b+1+Y=";
    };
    etsi_its_messages = fetchgit {
      url = "https://github.com/ros2-gbp/etsi_its_messages-release.git";
      rev = "883389d7b7fd880d385691e3ab5c6b506d52da52";
      hash = "sha256-ZBp4f8/h56SMqL6vo6lnyiTdZbwNQiqeP87fssDgu3Y=";
    };
    etsi_its_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/etsi_its_messages-release.git";
      rev = "bed3d9c8f4dedbfdcb361bc2ffd0ea6dd508e7ff";
      hash = "sha256-UW8EkvwgvINCJDAu0PFK4MR4kG+jQhXbzjHaS08v0Ow=";
    };
    etsi_its_msgs_utils = fetchgit {
      url = "https://github.com/ros2-gbp/etsi_its_messages-release.git";
      rev = "395df982bb7f8bad7382c77b88fdfee7c14d421f";
      hash = "sha256-4aDY4/kiRglU+Vn07pCBl34agEH58IDMKD4O6QkmbSI=";
    };
    etsi_its_primitives_conversion = fetchgit {
      url = "https://github.com/ros2-gbp/etsi_its_messages-release.git";
      rev = "bf0e13553051bc71b00adbabc2e1f5a9a890ce7e";
      hash = "sha256-fDodZMw/+4FboUqp+yCnAAnf/IaaFTeKaoac7ToXkJg=";
    };
    etsi_its_rviz_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/etsi_its_messages-release.git";
      rev = "7aeded837d90d1931c925cba0f348d91a757c816";
      hash = "sha256-2ZgoUCSSadHTnk+zAUNHl5/nZmvqj9EPB2eaLwZenNM=";
    };
    event_camera_codecs = fetchgit {
      url = "https://github.com/ros2-gbp/event_camera_codecs-release.git";
      rev = "885550d7f26f6df532e74cf11839590c5c8f5564";
      hash = "sha256-Okh/tAcO2MFOTeIVFOE8a+B/bDwyTZeOP6AinyAHjsk=";
    };
    event_camera_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/event_camera_msgs-release.git";
      rev = "91ad63afda709d4e566d992476ed002309af2f20";
      hash = "sha256-1ZtF5SndbEknqRZ9evnMI25GzONA2ezHKphMlwhsk0g=";
    };
    event_camera_py = fetchgit {
      url = "https://github.com/ros2-gbp/event_camera_py-release.git";
      rev = "c24a962f62635b52f9c51cdb33b2cbb1feee5daa";
      hash = "sha256-uthadX9Wphw+c1YYKt/PywG59JLnXNya4kfxTW+VVyY=";
    };
    event_camera_renderer = fetchgit {
      url = "https://github.com/ros2-gbp/event_camera_renderer-release.git";
      rev = "224dfb7f7b9201a58a0bdba4eb8bb69deb44f3b0";
      hash = "sha256-WnRWflQ+N8Urzm077M3kQCQ5qXRvnyKtXlxE2ITfAiY=";
    };
    example_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/example_interfaces-release.git";
      rev = "7b504cc01ddad6288771bb716451c6f4f7f6c51d";
      hash = "sha256-mRegvkQKSsJH6SsUNhDlJidkIxKojf6U4GltTKF0oAY=";
    };
    examples_rclcpp_async_client = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "8a61aae631e4a7b75eaec9385bf64d272e487dc3";
      hash = "sha256-0iq4XGvRdCCPBT06auHiCmfr+gES26/yu36Ccrfp6Xs=";
    };
    examples_rclcpp_cbg_executor = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "59a1ddcd3150eb580a593adb64d43f384191df5a";
      hash = "sha256-f/zcFuUwgYeNFnSm15GE7RBebIioaCa8/9yyIWYd6sY=";
    };
    examples_rclcpp_minimal_action_client = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "fddd31813cf15e39e787379c6669bd5f36a984f3";
      hash = "sha256-44QoVGXKolZcxjZVubSNcgfDnEtRK2G4agpjaDy4x1M=";
    };
    examples_rclcpp_minimal_action_server = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "afc6fa81d44132e10e507fb1ced443ff8a6b9eea";
      hash = "sha256-qYAaj/GLdsU+3e4ZBiLXB151Kt2aFEEsuurI/4I4msU=";
    };
    examples_rclcpp_minimal_client = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "ec48e85fd9500302ef911a6c8e8083aea9134d67";
      hash = "sha256-wPicBMGjRRmUPFCsxsE4DsIXPtB3+Qqm+QRtLbhkDc4=";
    };
    examples_rclcpp_minimal_composition = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "403504eef1104799cb560b86188f34d8b70a46d9";
      hash = "sha256-dPfMx29eNlCzMVbVDpm3hllPIEIen7qj4TVdvzxzxws=";
    };
    examples_rclcpp_minimal_publisher = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "2efab9be76af3b788ee8f06a3f43fdf36bc71461";
      hash = "sha256-9fjvWKgKmVm0aaJXMzewXL5UMuZ3AboylZsjXk3BN4o=";
    };
    examples_rclcpp_minimal_service = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "7608f6207925ceaec3e0ad3a65d7e1a5cbbd663f";
      hash = "sha256-TK40aRRYWs3kQbrTRrkP0Hpjoez1wQ+pxCXkq44ckFE=";
    };
    examples_rclcpp_minimal_subscriber = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "51085a7cdc7e60d40c5f523e193748e79d1b9dba";
      hash = "sha256-tu9OkbPYxmWgDYDJhYrmvkDUtuBr4uK5El2ZvTgnb8k=";
    };
    examples_rclcpp_minimal_timer = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "8ccfde6efcf379fe568a24dfd552ad2eef07003f";
      hash = "sha256-uXaIMpc0z/lqqhOahATIjbp47EVX2QjQNIJPYEDWCuA=";
    };
    examples_rclcpp_multithreaded_executor = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "198bc59389c12b3dcd106d51cacdc722d6afb5d2";
      hash = "sha256-U2cq59Pmhxel0vHc1C8RuXzQJTZ5k/qKW1Hi9lVIauc=";
    };
    examples_rclcpp_wait_set = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "07cecbcdc765f817583332f6cd674f5dc462b940";
      hash = "sha256-bcYdoXpGb2pdK56zFdit4yfNtigRFiQbZP3GfWVr9JQ=";
    };
    examples_rclpy_executors = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "3cd171437d698a92f9e5a2dae9b1ea9514e156f0";
      hash = "sha256-D2/VFcVtE/o7xbLmqJSRM8BZhaHWvJWpYRoUTnimDR4=";
    };
    examples_rclpy_guard_conditions = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "8e9f8d35826ef49362df7a763dd229f27d3b651a";
      hash = "sha256-XuoPymroDyoXWYabkwprlEVdOyalu5DjW759xyQjsPs=";
    };
    examples_rclpy_minimal_action_client = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "3c333603cacbdde270f94bd36697211e18f9e635";
      hash = "sha256-vIQff2y6l1Jq5uMtp2HaEQut9x/n0LaWMp9RrMx5ACE=";
    };
    examples_rclpy_minimal_action_server = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "0bfaa358a63b8bc1f7ecfa7f1db366afe7eb7639";
      hash = "sha256-KYqLXOVHuLvkJFzeJoe7P3ZmBDjckZ6v5358ljw2bt4=";
    };
    examples_rclpy_minimal_client = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "d149821ca87d6608df40eb67fc9625e567a5d1a4";
      hash = "sha256-ArQUsjRTLQk95bcoXaFC1l3execpR74HzzFrOyYJpAk=";
    };
    examples_rclpy_minimal_publisher = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "46e87448dadb5671d4688a05ecf121c0c03abab9";
      hash = "sha256-VysiiWLtXoquWvhGtov2Uj90jvJ+GFRDkAGu9KUIMjg=";
    };
    examples_rclpy_minimal_service = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "974f22c135ba13dab49c95d5268e06ecd6d46805";
      hash = "sha256-jrpXqNzN9kxaRAjcxrJQvNyjOtifMEcr+3dqMovB9zY=";
    };
    examples_rclpy_minimal_subscriber = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "7d29ff785559ea11d79ae4e58b24a0d995e96166";
      hash = "sha256-nuGs5Mzwj75ogKk/ZYVbwRHETmQJujeuUm+LaiLV/rc=";
    };
    examples_rclpy_pointcloud_publisher = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "2d3126625922b57bdf5e07a97d251ce3678a6377";
      hash = "sha256-0coxblLLRw5cUv8P6h3qr0L6z2LaGp5ZC5YN35q2kVg=";
    };
    examples_tf2_py = fetchgit {
      url = "https://github.com/ros2-gbp/geometry2-release.git";
      rev = "684c650fa72d57a815634547d67d85bd5d7cd8c5";
      hash = "sha256-pMk7tDj+6IB2MqJ4DuR77oWQ/ZJG+SL3qQNsviDWwYA=";
    };
    executive_smach = fetchgit {
      url = "https://github.com/ros2-gbp/executive_smach-release.git";
      rev = "01a5cca0e387bee47acbf617134ea0e851c7d993";
      hash = "sha256-68w8XZNadjLJdkgr+OVVW8Stg9rqS5wqQgYUxlZtOo0=";
    };
    fastcdr = fetchgit {
      url = "https://github.com/ros2-gbp/fastcdr-release.git";
      rev = "88698600fccc8bee85c04825020673097f7a6422";
      hash = "sha256-/KJcVY0p1qX56K44c6u5ZwcgzQHKUcHmqTeBWyZTyes=";
    };
    fastrtps = fetchgit {
      url = "https://github.com/ros2-gbp/fastrtps-release.git";
      rev = "2ed4a01f31f5e04860e4e24fedc8a4a1012a282f";
      hash = "sha256-wECFJjYb5fz4u/B375jBBUkB8xQ1njY3pIcc8pixN9g=";
    };
    fastrtps_cmake_module = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl_typesupport_fastrtps-release.git";
      rev = "d3265cdbcaad3096098474edb966fd17eb5a977f";
      hash = "sha256-CMvgUlOB5CpgyTkKXPsg5gTBnHHJWz1DLOwjQRe/UDs=";
    };
    ffmpeg_image_transport = fetchgit {
      url = "https://github.com/ros2-gbp/ffmpeg_image_transport-release.git";
      rev = "a1a0e2db2352c98dda15d1f0faa9c7d5945306a5";
      hash = "sha256-NNfHNOjQyl6FVnmws3dcgDvUuE+EkIy2CyhFkCqoDNM=";
    };
    ffmpeg_image_transport_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/ffmpeg_image_transport_msgs-release.git";
      rev = "27fad7bbaba75016c36e07b12364819edd074066";
      hash = "sha256-pqSfqQqwy2iI4Z76hMWtAkpmjCYHy0xa0SBqsE+X/dQ=";
    };
    ffmpeg_image_transport_tools = fetchgit {
      url = "https://github.com/ros2-gbp/ffmpeg_image_transport_tools-release.git";
      rev = "108a05c70fd25d0549623c09a2986e6a37578700";
      hash = "sha256-swXtnWDcYMHi4NZTdTTgmdmj5yWFc7cyTm/393iJ1aA=";
    };
    fields2cover = fetchgit {
      url = "https://github.com/ros2-gbp/fields2cover-release.git";
      rev = "e8bc661c50b9b50ee18959d72574c639ef3ce675";
      hash = "sha256-M6nTrgKOJ8WBcqrcY99OK9HEHW3JqWnKANPdzd/r1cQ=";
    };
    filters = fetchgit {
      url = "https://github.com/ros2-gbp/filters-release.git";
      rev = "4453644af7cf5338d89bb7df64174695674d45c8";
      hash = "sha256-hz/dFfNO4Dl2v0luZbIJQrfAimC4iBuF7HtT0XInGgk=";
    };
    find_object_2d = fetchgit {
      url = "https://github.com/ros2-gbp/find_object_2d-release.git";
      rev = "553813fa3500a31f95f437e0767c7a30b927630e";
      hash = "sha256-njkQr+O+9huFcwwGGOLQgumrN8K4RuGpTCjeMdVtuhA=";
    };
    flex_sync = fetchgit {
      url = "https://github.com/ros2-gbp/flex_sync-release.git";
      rev = "96e1e5af12f61327a7453551c34e6ecc2d6fb750";
      hash = "sha256-DRj8hRb5f02ZdXinTOUCOnVQRMHJS/Es67wgVFdZmUs=";
    };
    flexbe_behavior_engine = fetchgit {
      url = "https://github.com/ros2-gbp/flexbe_behavior_engine-release.git";
      rev = "7bba4017945659d7c661bf76c3e165c9219678e4";
      hash = "sha256-l9yTnBvmIxQL5DNjo75+SegiknEw20p8+lO43JC6KaA=";
    };
    flexbe_core = fetchgit {
      url = "https://github.com/ros2-gbp/flexbe_behavior_engine-release.git";
      rev = "237e2098a1e767209cf6aa0806947e9d68ae024c";
      hash = "sha256-H4Wrtmbl6nwhcBJBbA+XtOkHJnDhvtGLfec0Qz0K99g=";
    };
    flexbe_input = fetchgit {
      url = "https://github.com/ros2-gbp/flexbe_behavior_engine-release.git";
      rev = "15e469e007b5664e9321f2a291e2a952409147b5";
      hash = "sha256-zcBWjs46lO3Mn9pE3mtDK1mqO1tF+F2iToPqTvFECY4=";
    };
    flexbe_mirror = fetchgit {
      url = "https://github.com/ros2-gbp/flexbe_behavior_engine-release.git";
      rev = "2d45bf836c525403e10f6fc2caedd98e0da9a926";
      hash = "sha256-SSn47+ekb/7OgTTqqklfqRhzbO2J+7heIZotvzRPa9c=";
    };
    flexbe_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/flexbe_behavior_engine-release.git";
      rev = "a5d7f9f1c81ae33f3c3c2fb01e0721bb2bdd926a";
      hash = "sha256-uBMqKj7xP+bWHd1rLyL8C2Tx+/vWfPi7wrtzjqmywGM=";
    };
    flexbe_onboard = fetchgit {
      url = "https://github.com/ros2-gbp/flexbe_behavior_engine-release.git";
      rev = "62eef8ad46fa86a61d4e4dce3c42aa1feb201993";
      hash = "sha256-EbO7yBYjwzsyok21wnRFK+vFSQE/2Pf3K63lSfzHNSk=";
    };
    flexbe_states = fetchgit {
      url = "https://github.com/ros2-gbp/flexbe_behavior_engine-release.git";
      rev = "bf1958c7b02732f3092c6c868df978a05622c2c5";
      hash = "sha256-9nCf5YRLrdFBBRGVTkMGtiBfcHoiWNVdCLwqKnaSv3k=";
    };
    flexbe_testing = fetchgit {
      url = "https://github.com/ros2-gbp/flexbe_behavior_engine-release.git";
      rev = "7cbe302c79f606b5f242338a4d8fdfc0c1cd7e94";
      hash = "sha256-Z8v7JR6IuSmak5toK1AzflLXgHOoa40m9WxX883LZ7w=";
    };
    flexbe_widget = fetchgit {
      url = "https://github.com/ros2-gbp/flexbe_behavior_engine-release.git";
      rev = "ce31f66657d5a4e49e0842f6915ae5a51baca4d5";
      hash = "sha256-JDdAs26UU39Hp/4i314mPuzJ2ZT957pRGJ/i8u9zW6I=";
    };
    flir_camera_description = fetchgit {
      url = "https://github.com/ros2-gbp/flir_camera_driver-release.git";
      rev = "8f67b40ac16a50c4a57a54b1839ca12b61bff0bf";
      hash = "sha256-BW9xfT7JS4SQrUug5BG2EQ0c49xUa1glCNWO0Wpwk2g=";
    };
    flir_camera_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/flir_camera_driver-release.git";
      rev = "1c637058a2939d3672eacbad70310a1138c922f6";
      hash = "sha256-jlKxZPXxL4UTWrIgsk4bOYU9oeyoW9deS08ci3Uh2GI=";
    };
    fluent_rviz = fetchgit {
      url = "https://github.com/ros2-gbp/fluent_rviz-release.git";
      rev = "e271cd3172ef0ebd5a1c682f0443b893ee909caa";
      hash = "sha256-/LmzIiGEHhv+jlon28dyJAjyB233kvyupBzUS01rdjA=";
    };
    fmi_adapter = fetchgit {
      url = "https://github.com/ros2-gbp/fmi_adapter-release.git";
      rev = "7cd1b63789fc2756d115d493ec4d79add7e8edc7";
      hash = "sha256-bdDksqaZAqG/5URM3Ifb8DOvHvjwqqadN4eguWTN3Vk=";
    };
    fmi_adapter_examples = fetchgit {
      url = "https://github.com/ros2-gbp/fmi_adapter-release.git";
      rev = "d784763bdaa87a53b3bed241dc18f46bc3fc6d1e";
      hash = "sha256-FNLnKvCy1QMsMlkdwfiwnupdtP9U06oTSPaQTkp7XOA=";
    };
    fmilibrary_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/fmilibrary_vendor-release.git";
      rev = "a2c5aea2e1092520a763dfba27fd2621d761a9ab";
      hash = "sha256-RwFS1j6Bue1ac96cXWL4i1A+KcMFWctqGRc0ZGeTR70=";
    };
    foonathan_memory_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/foonathan_memory_vendor-release.git";
      rev = "446ac182791f3c0ab3817f3b503c38954e6a0133";
      hash = "sha256-LmTgr8JI5jo23rCSvEeq6WSeCvLx/dmYpqtNx0hZ7lE=";
    };
    force_torque_sensor_broadcaster = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "9fa6b1f84b8b1c2134423be2811f165fe3a4f1dd";
      hash = "sha256-4ozNz5hb8Yccyn0ejYoOGx/GO6serQSmvgiVnsVACOs=";
    };
    forward_command_controller = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "cd2f9ac86d1e0f8d330d5cc2e8ab722a87e54697";
      hash = "sha256-EO3YTb2/DOUT0MboWiVxg1BMx2KWt/HZ78Np7E2RFD8=";
    };
    four_wheel_steering_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/four_wheel_steering_msgs-release.git";
      rev = "cf71cef5c668cd51e53724dc48c8d7201221e3de";
      hash = "sha256-lESkZ6d2jUSfCCCB5KsV8gJwBTO0EG7O4/LInYggSzc=";
    };
    foxglove_bridge = fetchgit {
      url = "https://github.com/ros2-gbp/foxglove_bridge-release.git";
      rev = "6a8294e77154d98d2aee502774b8b72a7b5e94b9";
      hash = "sha256-MjOXLClsNRb5QZn6Q30YfkDoypt+7GWgv93kci4BlVs=";
    };
    foxglove_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/ros_foxglove_msgs-release.git";
      rev = "1643daf92cf16b9a75cc2e3e184c7077de87db2a";
      hash = "sha256-M7/eEP7tPukgpkdDKo93zEfydXTiLUzUaeR6h4c6lxM=";
    };
    fuse = fetchgit {
      url = "https://github.com/ros2-gbp/fuse-release.git";
      rev = "146b505aa3208d25a2e7c1b5d170efc44094bc45";
      hash = "sha256-L7mooOifcCJDLiXwk0are7MS7SnxR8s1MrIPCwexfD4=";
    };
    fuse_constraints = fetchgit {
      url = "https://github.com/ros2-gbp/fuse-release.git";
      rev = "1200006240989303f086811f226ab7a841a124d6";
      hash = "sha256-c62NE6NrO6Amg2XxYP/AdRC42P1WIxHe7O6ypp7gOvE=";
    };
    fuse_core = fetchgit {
      url = "https://github.com/ros2-gbp/fuse-release.git";
      rev = "b3b1cb3f75ff1d3fa4e45646dbdbf24f5497857b";
      hash = "sha256-Ge1xbnN6OG5f2HhwAR/cxfzZv6PBB4W7N18Zhhi0RL0=";
    };
    fuse_doc = fetchgit {
      url = "https://github.com/ros2-gbp/fuse-release.git";
      rev = "24121e81f24f166c52c66267ea0be8332a1446a5";
      hash = "sha256-uY1vnIJQ0LsiGyvvSWFiqNVyu1/Ag328pzFCn2jhhsQ=";
    };
    fuse_graphs = fetchgit {
      url = "https://github.com/ros2-gbp/fuse-release.git";
      rev = "d0b61c3be9af005a8bc82a956e46093c53dab16d";
      hash = "sha256-AusfOIWBhrljSrjmV1TdhWQl0a1eq5cjsk1nCwPdOe0=";
    };
    fuse_loss = fetchgit {
      url = "https://github.com/ros2-gbp/fuse-release.git";
      rev = "0f73e371eac052747faaa867ca413ef08c36d9a4";
      hash = "sha256-euEBZo32VlyBPb2xMuQ1jUISg2Z8v9ftPmATkr1iHOY=";
    };
    fuse_models = fetchgit {
      url = "https://github.com/ros2-gbp/fuse-release.git";
      rev = "4b3d2a3c62eda494d2a2dc9feb8d8bb73406c7f1";
      hash = "sha256-N2bDbs4TD0BkUWc4ewNT2KRCMSvN4FvVzTyzBpyOHI4=";
    };
    fuse_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/fuse-release.git";
      rev = "9abf81408525991f00ffa99f9b9d52f2143819ef";
      hash = "sha256-K5wgOTOOHaXlC+cqCiC5b5HYQcs38mxUs99d3/wYe44=";
    };
    fuse_optimizers = fetchgit {
      url = "https://github.com/ros2-gbp/fuse-release.git";
      rev = "cfabad7a430ea1c75b98f294edddf5dd4679e1c6";
      hash = "sha256-dabQsl6P+3hhZYHysGHSSw3bSnbLe+0tgaMNcYyu6kY=";
    };
    fuse_publishers = fetchgit {
      url = "https://github.com/ros2-gbp/fuse-release.git";
      rev = "e42da48d8d0c58cb5bff839478ed8e423e959f74";
      hash = "sha256-tI9Xxj7PiAdTcEHsNLiz1j74FStbd7vEnIFopSJRkPU=";
    };
    fuse_tutorials = fetchgit {
      url = "https://github.com/ros2-gbp/fuse-release.git";
      rev = "f232a1b1da77324067d9d5fa4433af543fd2f9bc";
      hash = "sha256-jix3x/BhHI2P7id3wpsr2TRpqn3Mp/Q+ppU0oZwwSBU=";
    };
    fuse_variables = fetchgit {
      url = "https://github.com/ros2-gbp/fuse-release.git";
      rev = "145adf8242958fb6fcd560f0dd2290831f56b5c3";
      hash = "sha256-AMhieBzcBZ3yM1FzMq5T4FSo0yIRC4CmcOU3jOloF0Q=";
    };
    fuse_viz = fetchgit {
      url = "https://github.com/ros2-gbp/fuse-release.git";
      rev = "1368b1b48e2bbd395801fa762ba6b607f9c81054";
      hash = "sha256-lnugFK/IinY63VpqqOFq53NwuUHa/hYedDm1S0QM30E=";
    };
    game_controller_spl = fetchgit {
      url = "https://github.com/ros2-gbp/game_controller_spl-release.git";
      rev = "722cad901ad97f959b0fca1199076f464f8479e7";
      hash = "sha256-FvjsH3PKrQtxsZS4hXMelGbnTjvs6W2JjiYn6WevoWA=";
    };
    game_controller_spl_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/game_controller_spl-release.git";
      rev = "64bc955029e0e7ed74ef442b0ab000b9f8c19963";
      hash = "sha256-uB8HT6Qzj0QLcmO0XYv5Lw6PpjmowbR2sz0FywtT/6U=";
    };
    gazebo_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/gazebo_ros_pkgs-release.git";
      rev = "a376d73c2086fdfe468d6ad4b6a6464797a6588b";
      hash = "sha256-sTnxrWA90gEXxma5YwKDCuk5gkRgjnFuZK9xRQes9cQ=";
    };
    gc_spl = fetchgit {
      url = "https://github.com/ros2-gbp/game_controller_spl-release.git";
      rev = "348df86f0c57eea9c7b2f5f7d9f9dc381beb9efa";
      hash = "sha256-kZmdkalxnRdGGdrKhvxICSX3XNubLGW9lgzSf1zTjys=";
    };
    gc_spl_2022 = fetchgit {
      url = "https://github.com/ros2-gbp/game_controller_spl-release.git";
      rev = "614c89da758766a75b5428d8572d113dab487143";
      hash = "sha256-TfjfnmIcrHDLljR0mc7TbRI7pB8FeP3JFv1Jf6C9zpM=";
    };
    gc_spl_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/game_controller_spl-release.git";
      rev = "8a8f52cc53fe2489e2143ad6d9c8bbdd1ed6e6a3";
      hash = "sha256-zib/AEpu2CDmpEXFyiedKxZD52Ub6+OPzPJpw/a2jqE=";
    };
    generate_parameter_library = fetchgit {
      url = "https://github.com/ros2-gbp/generate_parameter_library-release.git";
      rev = "9b3b5eadcc4de586ae0880f33293fc9d64022fea";
      hash = "sha256-3/xDuucYQUArz1x/C9LSjpYpCEX8i3QuApT+wUhylr0=";
    };
    generate_parameter_library_example = fetchgit {
      url = "https://github.com/ros2-gbp/generate_parameter_library-release.git";
      rev = "e2a76fd024efeaea79c11eaff89b60753bee9981";
      hash = "sha256-d0nHulgcdsijc/fqux0zSYWVUPWx2mS9mWEa+PpXhtM=";
    };
    generate_parameter_library_py = fetchgit {
      url = "https://github.com/ros2-gbp/generate_parameter_library-release.git";
      rev = "96e638716be38fa957ab8646224c4b643b1d2b1b";
      hash = "sha256-YBWzYIIwR1Lla1+nuymfR73est+/pRbnkswPjPA5iOM=";
    };
    generate_parameter_module_example = fetchgit {
      url = "https://github.com/ros2-gbp/generate_parameter_library-release.git";
      rev = "0bf2b4606ea98146fa03404cf91e490ae37666ee";
      hash = "sha256-HkXslneaMtWnT7O2G7ZfzPxK8AtAzT0SzjoJ5rVxha0=";
    };
    geodesy = fetchgit {
      url = "https://github.com/ros2-gbp/geographic_info-release.git";
      rev = "babebedcfcb762f050b6dc334b93f4c55acb2714";
      hash = "sha256-+iSI/nF1U9zJNt1tRwph3J72AI6GDwamBRol2QrwTUY=";
    };
    geographic_info = fetchgit {
      url = "https://github.com/ros2-gbp/geographic_info-release.git";
      rev = "95889c879210cdd9d936dce1750a8cdac4036071";
      hash = "sha256-9v0PhFwY4GRy9FH7XCYu+48GcNisf9Hg2093eaFWEKU=";
    };
    geographic_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/geographic_info-release.git";
      rev = "caa6354cd98e112a31d8f26ab3168880bb3d327e";
      hash = "sha256-nhS4kFuDj1V2F56pjP2GmIYfCB+bVsr1RI3DzbZVfsI=";
    };
    geometric_shapes = fetchgit {
      url = "https://github.com/ros2-gbp/geometric_shapes-release.git";
      rev = "96327540c29c53b84b4d769295d2d3bfabb46144";
      hash = "sha256-o2Eck5v0SgZlsbOmbpf5qikEjkjDqv/wJ2kTdTiq2RQ=";
    };
    geometry2 = fetchgit {
      url = "https://github.com/ros2-gbp/geometry2-release.git";
      rev = "a73891fc89f22c33e4539248a070d00c04a46613";
      hash = "sha256-bq87Ix4oVIJlfSkUAXp5kkyZasX2MR56w98E16EisOo=";
    };
    geometry_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/common_interfaces-release.git";
      rev = "9b595e5a5c793cc02c430a4fcc8c4cda4eef3725";
      hash = "sha256-tnsz8Gchh0hrKtLOTi//KLdKxmJrnhMGrJRz1PbBvxw=";
    };
    geometry_tutorials = fetchgit {
      url = "https://github.com/ros2-gbp/geometry_tutorials-release.git";
      rev = "41254d9691294b2097eb42a77f57209cf3b0329a";
      hash = "sha256-hUMh0tFMH1FtZeYHlz7Wkncd8L1/y8oODx+QYd54pls=";
    };
    gmock_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/googletest-release.git";
      rev = "969537cdd819e38a3448dedc902a148616965a9f";
      hash = "sha256-oqAqYShfUP95H55v5CayrGi0vMXgdbUdwKWq7xnKEjI=";
    };
    google_benchmark_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/google_benchmark_vendor-release.git";
      rev = "2da4208dbfcb32f943585ece1d9ff3e51cb916c6";
      hash = "sha256-YHQEziwNPQzFfRVEHovMpimPk2aOqLC0khzmZStlr8Y=";
    };
    gps_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/gps_umd-release.git";
      rev = "f572d023b466c3b5960fd5629951424b5344b677";
      hash = "sha256-1RkI1XM2+N+2B6AXCDVx6WfEhwXaU/PIHvKOB0B9q1Y=";
    };
    gps_tools = fetchgit {
      url = "https://github.com/ros2-gbp/gps_umd-release.git";
      rev = "04f6468301ac6916a9c164f10dfc565e495cb679";
      hash = "sha256-QlW/IzkRFxYsEks3A9lEuQANpxUCf0RKCDA/PSsqzyg=";
    };
    gps_umd = fetchgit {
      url = "https://github.com/ros2-gbp/gps_umd-release.git";
      rev = "ff0f9cdec7713df9990a4d9ed38373f80998f00e";
      hash = "sha256-vIL98+Jzy8M+CuClxVCxEEDOOgpD+n26au28onECvQ0=";
    };
    gpsd_client = fetchgit {
      url = "https://github.com/ros2-gbp/gps_umd-release.git";
      rev = "16e02a0573ebaf6c2fe0b131285c43ccccfb49d4";
      hash = "sha256-5UEXqwcIMfl3tStPrZyLbVOdaoRcW2YuUtkSzCQZhmo=";
    };
    graph_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/graph_msgs-release.git";
      rev = "cb9838e309f09242d2ccef5878756aa50588a063";
      hash = "sha256-Zs/vEflqm3Ft6PVC5rmE7JAj2pPFja8QAhBxSsH93dg=";
    };
    grbl_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/grbl_msgs-release.git";
      rev = "b34c59b7115f76da24c00f80b924d9514b88c7ea";
      hash = "sha256-cjvc4arr+Z92IcwzqZryuU4FC2MY+FNpA+6JBe0dhiE=";
    };
    grbl_ros = fetchgit {
      url = "https://github.com/ros2-gbp/grbl_ros-release.git";
      rev = "5799fb212d9171d9944488a5c871f2574b7d5ffb";
      hash = "sha256-F1t2vcBH6JU+xByKp5lu3SCks+qWKp4ztQ5WkL6N+rI=";
    };
    gripper_controllers = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "7e5e24e6a771c71c286cb6e82dcd5d1055d7b2be";
      hash = "sha256-maLFSqpkWZp9qZnUOeGM0xLlg16RSbo49IoXNK2sgEs=";
    };
    gscam = fetchgit {
      url = "https://github.com/ros2-gbp/gscam-release.git";
      rev = "9de9e1c8a5353dc48666256b4fbdb77f6cbcfc66";
      hash = "sha256-CKQzdZxZ6OZeWkirhmcrfJhb0hNN0vSimKIRHSUDT3k=";
    };
    gtest_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/googletest-release.git";
      rev = "949478db25504854988f1510571c5b93a67f9c4b";
      hash = "sha256-hfNPBuRwt4tacGQDjHj0OfgABSsSMXo2L8rlGApqxBc=";
    };
    gtsam = fetchgit {
      url = "https://github.com/ros2-gbp/gtsam-release.git";
      rev = "b3a199bd675027475f53cd0cf40d48c0825e3ade";
      hash = "sha256-pB7YNdBRIvvJ21JFD/rNx7KcYzVzXMLJcyUyVg6w8Zk=";
    };
    gz_cmake_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/gz_cmake_vendor-release.git";
      rev = "f20c7fd5e142e2fabd75b12ae3576fd7c6a1bc7d";
      hash = "sha256-mh1shfa2X3rE8xoqZP26ifszBx1NDE+RqsWMx6QZjj0=";
    };
    gz_common_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/gz_common_vendor-release.git";
      rev = "606480b4a9cf124661f7bbac4cb4266a1d6ce469";
      hash = "sha256-b0cdJW+5zN26CtaBvrWtXcrrE9ZbarEjoLEIWrud7VY=";
    };
    gz_dartsim_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/gz_dartsim_vendor-release.git";
      rev = "38bdb4c6948952978b640c95beb7b4e8aaea61f3";
      hash = "sha256-M1p+knNPSpbfQpQATwwHo5EqtCKx0Fn9S7rZLTTWICY=";
    };
    gz_fuel_tools_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/gz_fuel_tools_vendor-release.git";
      rev = "a6b7c9bf7a38d5a0b61aa587f65a26343ca33e02";
      hash = "sha256-9wmnd/zEBngrDu5RyeLJZY+a4N2JRmFnKEyzeTkokUc=";
    };
    gz_gui_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/gz_gui_vendor-release.git";
      rev = "4c659061263669413bb9e9eccbd9cf78c5ec4b23";
      hash = "sha256-RYzhgBv6G6dkS2Fi72k1rHH0HrgKc7MQy6MaVF9+2qg=";
    };
    gz_launch_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/gz_launch_vendor-release.git";
      rev = "63ebf9304161d4f6e825f4c7f187d1aa3faad325";
      hash = "sha256-VSb5c56y1Qh6bWn2Xg1tr6Fcslrr56pPN5k01OFxHe8=";
    };
    gz_math_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/gz_math_vendor-release.git";
      rev = "9ee0d2c6b471b903146be7edba1daa76ac173e72";
      hash = "sha256-aeSRxO6Ulxx8Jun8wEcDM9GzDbK2GuJ+r57mJMJGTEk=";
    };
    gz_msgs_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/gz_msgs_vendor-release.git";
      rev = "25905a007be43a355645730c7be99fad30cc7636";
      hash = "sha256-0geXZdTt4n0yj0TwzXFxblk35LrxZePiOVTUBPLkwH4=";
    };
    gz_ogre_next_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/gz_ogre_next_vendor-release.git";
      rev = "72fb805e4715ba139c8104c830c31a0e3b71c957";
      hash = "sha256-4kfeqp5NoagMC+EqNw8tl7dtjCFunMNruZhuWfzyVow=";
    };
    gz_physics_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/gz_physics_vendor-release.git";
      rev = "53288c00b4ac180945be5466ce87a9e1b1f32366";
      hash = "sha256-iDCkqgePD0uE6dcCI23Zq502xOXwGQ9b0iyMmHs94lk=";
    };
    gz_plugin_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/gz_plugin_vendor-release.git";
      rev = "51389742f66ee9612a68092bfb2ca2a02d63e623";
      hash = "sha256-/y43QtJVsVEotHcmAu+Ttyji97D5EFXJIH1HzVkePAM=";
    };
    gz_rendering_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/gz_rendering_vendor-release.git";
      rev = "0311a31fd962c26af668bc0d1cc83e9aa3d32417";
      hash = "sha256-HfhzPI6ahnABY8PpXwl6szZ4P7VGjjGp1X2+KkbdTEc=";
    };
    gz_ros2_control = fetchgit {
      url = "https://github.com/ros2-gbp/ign_ros2_control-release.git";
      rev = "1d4fc973066931d688c884bf09b4373b9d6d4251";
      hash = "sha256-Pfj1JO01R7npeYvrR80NdSPpr0+gLNv7X+QH3bXyBiY=";
    };
    gz_ros2_control_demos = fetchgit {
      url = "https://github.com/ros2-gbp/ign_ros2_control-release.git";
      rev = "9622cea9f4dfe4b100e47791c0400115dddd631a";
      hash = "sha256-RFYi4eiedc9weHugvn9R7A+Kr6jhGfDTMzmI/hTbVSQ=";
    };
    gz_sensors_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/gz_sensors_vendor-release.git";
      rev = "085d65b284ef6a7536ff40f18e64e298e56f0ec0";
      hash = "sha256-lIlYTD+b6EjuknN8kJlsw7yW6ti8Nu+XTiF1pyKE5EU=";
    };
    gz_sim_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/gz_sim_vendor-release.git";
      rev = "96222f93afc8895ec6279c5b74ac0fdc12e8505a";
      hash = "sha256-j10yg8iJVjPWKJmXLqwchqQUBazmTc3ry7SBonSnhgQ=";
    };
    gz_tools_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/gz_tools_vendor-release.git";
      rev = "3a0a7ca81753ff2b366fee977f7bdc4ce3e4ecb5";
      hash = "sha256-Ha0HMQgXsfsWhwB1+MDCeeqbDMl+52CXQr+dJ15EL+I=";
    };
    gz_transport_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/gz_transport_vendor-release.git";
      rev = "507e93357bfe90f8a3a4c11a3e09fbbd3fa501fc";
      hash = "sha256-LJR/bu6SYZ/U+NsUqQuHEVALhkJyStdp7Tb8Fi1TZ5s=";
    };
    gz_utils_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/gz_utils_vendor-release.git";
      rev = "af727228ba30b99fb6e8186ea25a5e86ffcecbb8";
      hash = "sha256-XSES/VOnowqLB7zTSz3NcKXmrOKHsGkNwLQ93IsX9JI=";
    };
    hardware_interface = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_control-release.git";
      rev = "392a4cd39918aa15fbe8473ff17168018210c5e2";
      hash = "sha256-6e5T7iyS5zvHTyVmTvr0U8veXNN7+Ti0b9zYAjfNQ/8=";
    };
    hardware_interface_testing = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_control-release.git";
      rev = "292cdb3fd87637bbd8d2717687dd7d806dd86a0b";
      hash = "sha256-clsTtkGbDo5fdUIYRMd3dBm54yseXRizv6SYPfXAKW8=";
    };
    hash_library_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/hash_library_vendor-release.git";
      rev = "cd243a064b6da2fcbd714575e2dd3d6158af7901";
      hash = "sha256-/aXRAfmumq2WRfhcS24fzeg13YY+hDi9NQYpVUQNR6w=";
    };
    heaphook = fetchgit {
      url = "https://github.com/ros2-gbp/heaphook-release.git";
      rev = "3b17a1da870178e805963b7092d2cdad36d6e4be";
      hash = "sha256-muNY40LV1Jqtg043Lo1oCWIqz93a3zVaQ23jgFaEOPE=";
    };
    hls_lfcd_lds_driver = fetchgit {
      url = "https://github.com/ros2-gbp/hls_lfcd_lds_driver-release.git";
      rev = "43116c85f64ac8288dd6fb013e81b3fcf98d9bad";
      hash = "sha256-gFslT2HGpW6SzRM8frU8D/gistcJDw02YkcZTXZcfa8=";
    };
    hpp-fcl = fetchgit {
      url = "https://github.com/ros2-gbp/hpp_fcl-release.git";
      rev = "6415f979ff1acda170dc3c0aed0ecb604f3889d4";
      hash = "sha256-4a0Cw1cMtwXrxbPK3vFuzojHRF99b1r0HYEid8ElLgg=";
    };
    ibeo_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/astuff_sensor_msgs-release.git";
      rev = "6aed5d661ed5b628fb845ca1200801935771735d";
      hash = "sha256-RLaDU8WKC534uEb0HZcS/iP0//JhyyaFVG8osixglEY=";
    };
    iceoryx_binding_c = fetchgit {
      url = "https://github.com/ros2-gbp/iceoryx-release.git";
      rev = "cd93f6a8b8a0aba7828db592fca2a61065227605";
      hash = "sha256-MK/r8dSrJHO5SjuOTcRVaAOT5E8CXs0vOCivgRvoAbA=";
    };
    iceoryx_hoofs = fetchgit {
      url = "https://github.com/ros2-gbp/iceoryx-release.git";
      rev = "2f62692079fe655eb34a51b2c22c2a8555b2a132";
      hash = "sha256-C57YmMV/QQbRaySst8JrcobpnMXYdJ0EFLLY/Zi72ak=";
    };
    iceoryx_introspection = fetchgit {
      url = "https://github.com/ros2-gbp/iceoryx-release.git";
      rev = "8fb32f968a3828199e8fbe8086d9eea445d3942a";
      hash = "sha256-CQJ3hBCcrotZK6RXc42VUx+ZWcAJfXVoSQDC3eKzLi4=";
    };
    iceoryx_posh = fetchgit {
      url = "https://github.com/ros2-gbp/iceoryx-release.git";
      rev = "0bdf67fa301f17d3d141f07f6a038018ace95953";
      hash = "sha256-6VuZh+ArFljLw8Bw7qp7V7J5VAGvxF2WtzfcaOeFIfQ=";
    };
    ifm3d_core = fetchgit {
      url = "https://github.com/ros2-gbp/ifm3d-release.git";
      rev = "a24997b1557ad4919fe504bf6ac3580cac5f6e46";
      hash = "sha256-uR93fGa2he8/x1p8bZM2xobrFhbm7cnUGAw341qYlOE=";
    };
    image_common = fetchgit {
      url = "https://github.com/ros2-gbp/image_common-release.git";
      rev = "acc5e443a8ef4111b48a5adf86e358873e77eba0";
      hash = "sha256-zEuvWBkITR9VlL546Qsx9vSbwzkK+uzb4FZwz78NPtQ=";
    };
    image_geometry = fetchgit {
      url = "https://github.com/ros2-gbp/vision_opencv-release.git";
      rev = "f5ea0ce5972556558784659e5a6c45b27176d2a0";
      hash = "sha256-y4DJ9zOSPtaMJqyHbcxWEc8zhZkKGJwDlT8xyVy114A=";
    };
    image_pipeline = fetchgit {
      url = "https://github.com/ros2-gbp/image_pipeline-release.git";
      rev = "4771e574c1ddc6a6005187153b6aae739fbd6c3c";
      hash = "sha256-D697uLPH8lvTIwljeKXHl1bqZUch0BE+dvFlAFPJWLw=";
    };
    image_proc = fetchgit {
      url = "https://github.com/ros2-gbp/image_pipeline-release.git";
      rev = "8f312a11961d568b3d933b386160cf4b5dfce1da";
      hash = "sha256-gZY+HunlcCcdo+m+UefP0rtmJPFeySK/4rAPyMqmAIE=";
    };
    image_publisher = fetchgit {
      url = "https://github.com/ros2-gbp/image_pipeline-release.git";
      rev = "d2632f2af485f23c69adf09202a7ef46ebf00002";
      hash = "sha256-ZVT22JkY6IgnMzsaCyUxcCJDvGTG2SZIxZFQoVgbz/A=";
    };
    image_rotate = fetchgit {
      url = "https://github.com/ros2-gbp/image_pipeline-release.git";
      rev = "77b928b4f3eefd14f294543daa5b38cad9f4e14a";
      hash = "sha256-kizgB3shSjfUSlcZKen+xlM9EmSsBEdt4k+Ed1HJs+k=";
    };
    image_tools = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "0cc974002837ffb97c76514086a711fca8f9600d";
      hash = "sha256-fh6FijVZUH/JQJpq8qmDGzh10rT8u54uwAydwFUNeaw=";
    };
    image_transport = fetchgit {
      url = "https://github.com/ros2-gbp/image_common-release.git";
      rev = "d1ebdfe1ed0dc2c90d16fa624fc21fe23bce6122";
      hash = "sha256-01/wzTSHt4s99cW7SmDH6W+kpY4ehCc4WbIcsq8Uws8=";
    };
    image_transport_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/image_transport_plugins-release.git";
      rev = "5f3a1b389f115af354440dbf73f95758c406a365";
      hash = "sha256-YClB7oI9s8BJqKh1h9ZF6aw3uOgKo/ju81jmapjSYUc=";
    };
    image_view = fetchgit {
      url = "https://github.com/ros2-gbp/image_pipeline-release.git";
      rev = "1f945a0be9b988cf6ca06c9d128df99d8a841dfd";
      hash = "sha256-ulHGxM2i12UWWm2AH7pYo3RlCMOLjrYlc8+yQu3UZ4U=";
    };
    imu_complementary_filter = fetchgit {
      url = "https://github.com/ros2-gbp/imu_tools-release.git";
      rev = "e14b791b4d7933504d13ecb0cb24587b78688f31";
      hash = "sha256-wuAsf255PYh35JCpP4czKRL9rKu2pxO/i4NOMSETePc=";
    };
    imu_filter_madgwick = fetchgit {
      url = "https://github.com/ros2-gbp/imu_tools-release.git";
      rev = "59e949934d499233cb04ebd9050138423fae2962";
      hash = "sha256-w1yVzPSVadsRmFRs1oZ8HEZ6DXYiezID3dunE9J6VUY=";
    };
    imu_pipeline = fetchgit {
      url = "https://github.com/ros2-gbp/imu_pipeline-release.git";
      rev = "97bb02692bfea574dd283391bd56ec611cd8fd70";
      hash = "sha256-dJGjG62iCrupov3xWznx6yfooP5Q5w6rg7pfsX1P9x0=";
    };
    imu_processors = fetchgit {
      url = "https://github.com/ros2-gbp/imu_pipeline-release.git";
      rev = "438faa657139abc7315d8d38d35b125c385e812c";
      hash = "sha256-ShCwGu82++kzA8jDNQZHJIG8R7Av04iVDxp8sMYze2g=";
    };
    imu_sensor_broadcaster = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "d6b7a933db9982f46fa4b6d3001bd87aba0fd565";
      hash = "sha256-FtXFTBFVxBmfyUDX/5BLbdn1LcfDjuT+7lzne0IWoaE=";
    };
    imu_tools = fetchgit {
      url = "https://github.com/ros2-gbp/imu_tools-release.git";
      rev = "df19112520926bebd06030f598ac67b9e1c7b9fb";
      hash = "sha256-+i6Cvdit5GQDlcCdOUAFdg6ESROTgWjJQ1IqxGC94Ug=";
    };
    imu_transformer = fetchgit {
      url = "https://github.com/ros2-gbp/imu_pipeline-release.git";
      rev = "fa9d7c47c35a05548c3db37bfa58ba7d99d7ff61";
      hash = "sha256-lcQiOtqXK/0Dj9s+hSjZPSC6ypDEmOUVpRrIqNzO+Qw=";
    };
    interactive_marker_twist_server = fetchgit {
      url = "https://github.com/ros2-gbp/interactive_marker_twist_server-release.git";
      rev = "ebbcfde78840e10069a8c7d8c7c8255dcd8668a7";
      hash = "sha256-FvPQhN5z6jkYZtScraxOUe3bjI3cA495ni/sp/Hh7uk=";
    };
    interactive_markers = fetchgit {
      url = "https://github.com/ros2-gbp/interactive_markers-release.git";
      rev = "0e209ec4bf7d7ab5eaf38ebe8d9375a04cf49eb0";
      hash = "sha256-AnynI7NBpQeYuWFq0tNqFBkjlyKyY5BekFPSGeZbmrs=";
    };
    intra_process_demo = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "7565142ae5a7bdefda6b4e5021d621674da42ca0";
      hash = "sha256-cNMpagAnT23gRDMluJf+ysU2kuWRjIn37p/UHtLVZmc=";
    };
    io_context = fetchgit {
      url = "https://github.com/ros2-gbp/transport_drivers-release.git";
      rev = "3a6f852f38351b39895ea0189258a87938b80de6";
      hash = "sha256-RINF/bmOZEexBa8eMAkn2J1r1NOrze8SI3fx1t/ywak=";
    };
    irobot_create_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/irobot_create_msgs-release.git";
      rev = "d6ad51b50f113a00229ac22ef07831ed3d086002";
      hash = "sha256-N1qIlklUPDvElU+dpUZJGeSzsiBeFmgh0kyqT+KM2fs=";
    };
    joint_limits = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_control-release.git";
      rev = "5e1ce3ebe27743d31e4f13fce250c937aa5fd9f3";
      hash = "sha256-IEjVZUCapCZQHjb+ZLBsKHxiBuOAsqpi80lCg9oCa0U=";
    };
    joint_state_broadcaster = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "a231fc409448499973590c2709570b323fcafe7a";
      hash = "sha256-ImuUMULPidCUJxxBVUv/BFmqOD6CqX4snOtYhWkqYDg=";
    };
    joint_state_publisher = fetchgit {
      url = "https://github.com/ros2-gbp/joint_state_publisher-release.git";
      rev = "ccdbff6f0f4072ff38800b8cd98649b9403ebc93";
      hash = "sha256-Nw7THKbjIvXASwE8//Ta0Z1Q5BPXlK5VafC2jZvMs4E=";
    };
    joint_state_publisher_gui = fetchgit {
      url = "https://github.com/ros2-gbp/joint_state_publisher-release.git";
      rev = "21816fed55bedeedc28f78d7a028f6bc75729f01";
      hash = "sha256-ZumKM1KrbYTFo3f4tigUBtyVcxNOVbG2+FR7x85ZLhM=";
    };
    joint_trajectory_controller = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "3f7cc1d6cb6cceb37ad9b12b941abb41dbb1d2ed";
      hash = "sha256-6b6S/+ejXPH2iCTSVHW+SHgJfwmLgmu1XtRj5E7piOk=";
    };
    joy = fetchgit {
      url = "https://github.com/ros2-gbp/joystick_drivers-release.git";
      rev = "67a9a49bc8f5af4f3bb4631169fb4364ec3bbb42";
      hash = "sha256-D1K9/q5C0I7lztfZMomXMVDmBUV0UKvl2iNljHx2pPY=";
    };
    joy_linux = fetchgit {
      url = "https://github.com/ros2-gbp/joystick_drivers-release.git";
      rev = "fd06a72f341af1e90fad0c24ff51ffa212ca38c9";
      hash = "sha256-MCxXwhqUhQHqDvJeyzEVpjLjHtbbIKly+aduefEBefM=";
    };
    joy_teleop = fetchgit {
      url = "https://github.com/ros2-gbp/teleop_tools-release.git";
      rev = "1b823b4602932f6352a53fdff8378aa2ca62d4f7";
      hash = "sha256-VhLfbJ1z++s5bQPQospx/fGaVJbwS6BuLHFiFyn45bk=";
    };
    joy_tester = fetchgit {
      url = "https://github.com/ros2-gbp/joy_tester-release.git";
      rev = "7287ff765bbd548f037e3d25bea88aeaca17a6f2";
      hash = "sha256-4aFhMjPuS3BCh6fHb0WNYkfy1WWLeNrxlXiK8vs/zGI=";
    };
    kartech_linear_actuator_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/astuff_sensor_msgs-release.git";
      rev = "ff9619e827b54c47fa7510043858db7b8a01d211";
      hash = "sha256-Xad77u1Iv7LJdsdK8vW1H475ls/kjnSvZbln4wUXpmQ=";
    };
    kdl_parser = fetchgit {
      url = "https://github.com/ros2-gbp/kdl_parser-release.git";
      rev = "62e426bc35f02277867bdb8204444c055c6d0d85";
      hash = "sha256-0pqo6+kDyd4jq/rIh9aXBLrvipyDVHZKbj2VAlBvZ/g=";
    };
    key_teleop = fetchgit {
      url = "https://github.com/ros2-gbp/teleop_tools-release.git";
      rev = "75b8ae3e866881d89ad71775e85739d70c0b349a";
      hash = "sha256-P0O7MXzaLKeuYvu6YMXX96VVA/7xslaPVosdEfWAtMU=";
    };
    keyboard_handler = fetchgit {
      url = "https://github.com/ros2-gbp/keyboard_handler-release.git";
      rev = "69c6f6299fa48d6a45e44fbdb040e4dc0fae1423";
      hash = "sha256-MrlcTu+x6mBfTXFBvem82OYZkmwmdCO51eLno3SvoY8=";
    };
    kinematics_interface = fetchgit {
      url = "https://github.com/ros2-gbp/kinematics_interface-release.git";
      rev = "abc2ffaf360bde2bca52225ba766fdb598b1af71";
      hash = "sha256-NIcnxxLBdixzZQeXN0f2g03lIQQMoKqYrwTiwVagNSE=";
    };
    kinematics_interface_kdl = fetchgit {
      url = "https://github.com/ros2-gbp/kinematics_interface-release.git";
      rev = "355ba76f768e7c64e57c086fba538d5a7d36cb30";
      hash = "sha256-HTVJf1HOvp/ulI4ThFx2Zk1xyznJeK3pe76vV5sQU8E=";
    };
    kitti_metrics_eval = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "f4edfe4d5203859cc517e8780bab42ca4e9185e2";
      hash = "sha256-Yawv8N6uShKzEr+S/EdzFcQ/y5+4CW07tYSLKrqFKl0=";
    };
    kobuki_core = fetchgit {
      url = "https://github.com/ros2-gbp/kobuki_core-release.git";
      rev = "00876e81a32953ec6b09b474c2f8e82289245f75";
      hash = "sha256-Bq/+5lnLAiJ2HQtIr0h6wB08J7OxRxT4YhcLHIrCUwI=";
    };
    kobuki_ros_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/kobuki_ros_interfaces-release.git";
      rev = "205640a951da2a7d5fa47e3518b32d6df046829d";
      hash = "sha256-svbQG6e1o4u1HncdcNcx55XoYK99I02G7CxL2jvBZhs=";
    };
    kobuki_velocity_smoother = fetchgit {
      url = "https://github.com/ros2-gbp/kobuki_velocity_smoother-release.git";
      rev = "7851383e06b59c96286db423f2e4db9287693ba9";
      hash = "sha256-kZmyem+NJit8xtwuRz5Zx8AkdojVm7/pxgSOR63CkcM=";
    };
    lanelet2 = fetchgit {
      url = "https://github.com/ros2-gbp/lanelet2-release.git";
      rev = "35568a79dd5ce9e1e1d0aa22e4e06903d4a23915";
      hash = "sha256-AzSwj7wfb5mwc935jTjea1QB6+8BRLtOJyhJlWiBoLM=";
    };
    lanelet2_core = fetchgit {
      url = "https://github.com/ros2-gbp/lanelet2-release.git";
      rev = "5630708c5df854376fa1a16947d6172dc6468b1f";
      hash = "sha256-Nz/Uglhw2hDL1gfYqEdDLJHWEOErA4wg5rDzu3S1wik=";
    };
    lanelet2_examples = fetchgit {
      url = "https://github.com/ros2-gbp/lanelet2-release.git";
      rev = "e82ea17278cb8ee2b78d0a81a2b1e265f12f601c";
      hash = "sha256-jbMdHabSoOnjj7zKI54sz2P3Nrq8NRpYCHYb7pekzX0=";
    };
    lanelet2_io = fetchgit {
      url = "https://github.com/ros2-gbp/lanelet2-release.git";
      rev = "3a62e4d061574a0d62757874c354ffaf6e3a4128";
      hash = "sha256-B0AHMNYejPsaUhx0+RpURz56wZfnlpEXWZ/KnhdUuOQ=";
    };
    lanelet2_maps = fetchgit {
      url = "https://github.com/ros2-gbp/lanelet2-release.git";
      rev = "7704cae374e41e84d1549947a4c06afe5d55f061";
      hash = "sha256-neyAYG4BaHOn/2vqAXGTk6mFwmVeutNUc/jdcl7B1HY=";
    };
    lanelet2_matching = fetchgit {
      url = "https://github.com/ros2-gbp/lanelet2-release.git";
      rev = "e120080f9db30d7662445e1114d585757305a81f";
      hash = "sha256-umrqsdgMBtb04ryHzY6h/Yb+wrZUXVnyvb+0AeF2ebI=";
    };
    lanelet2_projection = fetchgit {
      url = "https://github.com/ros2-gbp/lanelet2-release.git";
      rev = "52590ef39bce10c356693a799124c8a09637168b";
      hash = "sha256-o4Gx/d7ijKvebHUq8BO78HeTfCKTIkE1raVOjESdhR4=";
    };
    lanelet2_python = fetchgit {
      url = "https://github.com/ros2-gbp/lanelet2-release.git";
      rev = "4cfdc2c64a26f91af854d2bc8a035f2a2562e7eb";
      hash = "sha256-ShlQQ/+8TBL3/8PE/BeVaLtJW5l2B8FQO8eY06yg5Lc=";
    };
    lanelet2_routing = fetchgit {
      url = "https://github.com/ros2-gbp/lanelet2-release.git";
      rev = "dbd7e7453edcca24e6a8face2b3b64f538039d84";
      hash = "sha256-nGVDdE1W8o7u9mMs1LHE5cT4A9mFdBo3NEHLB0QeZqE=";
    };
    lanelet2_traffic_rules = fetchgit {
      url = "https://github.com/ros2-gbp/lanelet2-release.git";
      rev = "cab3d2d9315ab49c368620eae99f38e406d1463c";
      hash = "sha256-4z23mvgIB58yuFaSmCW3z5im50f74rrIYVTXxo8XYRA=";
    };
    lanelet2_validation = fetchgit {
      url = "https://github.com/ros2-gbp/lanelet2-release.git";
      rev = "87bf0325bf0bae457a4dd104d10554118276f260";
      hash = "sha256-tAvB7lkQDSwBBpXUvHkuAzwo2zlSEbMsZr1Gy8AElXI=";
    };
    laser_filters = fetchgit {
      url = "https://github.com/ros2-gbp/laser_filters-release.git";
      rev = "4171b198fc1a21628180da5964eb289b35a3d934";
      hash = "sha256-ruSsWz10XSElakzxzN1wQp+rS0CVAcaNHQpoVnP0f3k=";
    };
    laser_geometry = fetchgit {
      url = "https://github.com/ros2-gbp/laser_geometry-release.git";
      rev = "37dcc4181306237a30f6d7139d4ba9a148b2e592";
      hash = "sha256-GSBMpUJXRXQebdpMp9Ph7mOwyPP7lg6YbgBTc6bXrXg=";
    };
    laser_proc = fetchgit {
      url = "https://github.com/ros2-gbp/laser_proc-release.git";
      rev = "089952614224b15fcc4e69539094e10a651c626e";
      hash = "sha256-h2lPjaJimCF/20eVEH3+ZS7CDqoML9voXq2B0x32NSY=";
    };
    launch = fetchgit {
      url = "https://github.com/ros2-gbp/launch-release.git";
      rev = "196ad94e0bdbb2865e27b660917f7d4a2e15cf72";
      hash = "sha256-4r3hs/NhnD3VtuC0Io5xDtYqSnhHjRcfJf8xpbEJKWk=";
    };
    launch_param_builder = fetchgit {
      url = "https://github.com/ros2-gbp/launch_param_builder-release.git";
      rev = "2280989be87fab08084bbe03dc0680c190b698d9";
      hash = "sha256-5wzPO7Vg6sA7heEmRxiLcDbilS5YyieLi8fBrtcJe/g=";
    };
    launch_pytest = fetchgit {
      url = "https://github.com/ros2-gbp/launch-release.git";
      rev = "c7496b91e9a9fa581eb4108a4d6f13a377df745b";
      hash = "sha256-pS4hgFpqm9iWHZj/NbsFhtlXbgFKyElxwA5ormakf+Q=";
    };
    launch_ros = fetchgit {
      url = "https://github.com/ros2-gbp/launch_ros-release.git";
      rev = "614dac856387c97632678b01252b0de112f1a346";
      hash = "sha256-cV925fWAMrUPzECwVRsuI+lqITsE2hoUUK+5X0gGpik=";
    };
    launch_system_modes = fetchgit {
      url = "https://github.com/ros2-gbp/system_modes-release.git";
      rev = "a08a9c8c80eee8713a7f490c95cd4db75d3f1805";
      hash = "sha256-igv7EQutLOf+qcExGB554hDDTuFxB1P9COvQUY2izGA=";
    };
    launch_testing = fetchgit {
      url = "https://github.com/ros2-gbp/launch-release.git";
      rev = "b79367de3cd844ef48059d8e4b91ebe48ec9535d";
      hash = "sha256-e6Zfr3gooc/K16iYNLOe8NrtH2ikKvKRBQGka3T0Jm8=";
    };
    launch_testing_ament_cmake = fetchgit {
      url = "https://github.com/ros2-gbp/launch-release.git";
      rev = "afe506445d42429c57e0486867d866ab7054a8a0";
      hash = "sha256-5+zwcqUD4kG22oYJie85A8Wl3jxRdcPmkUcQu/nGCFI=";
    };
    launch_testing_examples = fetchgit {
      url = "https://github.com/ros2-gbp/examples-release.git";
      rev = "c2236ee11ef8f07bccd6904e0db1d6579fd030d4";
      hash = "sha256-AnGtfmc/Fo5R0zEcot5yB6C+xgFOA31yvAnV9fQRBK0=";
    };
    launch_testing_ros = fetchgit {
      url = "https://github.com/ros2-gbp/launch_ros-release.git";
      rev = "8e943047d58bff614e8f7dd35c0c809bf58a1f12";
      hash = "sha256-EaW2/JmgZXRjYiG0YFcWQA2jQNQVAnPudqOLe3J7/kA=";
    };
    launch_xml = fetchgit {
      url = "https://github.com/ros2-gbp/launch-release.git";
      rev = "d38b5e1dff58ba58a94a822846318b0840786023";
      hash = "sha256-Qqc/i5ghzglsx794HAP6CBwuymTldnwQzcBT/psyhw0=";
    };
    launch_yaml = fetchgit {
      url = "https://github.com/ros2-gbp/launch-release.git";
      rev = "9ec1892e132a4c5eafda96bbdd987781d98551e6";
      hash = "sha256-iTmdj7Xmv7WasHOQRLTCptwQoYDOht8pT+KWtklLPxI=";
    };
    lely_core_libraries = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_canopen-release.git";
      rev = "a2c52c6ab8e6405d6c61adb8ba3633c923bd4dd5";
      hash = "sha256-XbLd6G2IQP4m5Fdi/04Xg1Og2BUFtPxMfonMm+uCI9g=";
    };
    leo = fetchgit {
      url = "https://github.com/ros2-gbp/leo_common-release.git";
      rev = "096460a339bcbe739b5becd7655b304416b02fc4";
      hash = "sha256-qRmRxzhzTgwKSELlVR4rhl4PT3KhP04L3wJCEVsnpSI=";
    };
    leo_bringup = fetchgit {
      url = "https://github.com/ros2-gbp/leo_robot-release.git";
      rev = "73eab93f993751eacc4c6948077b6de916f7ff57";
      hash = "sha256-L+gWo7c5nMDO1ro4o4wCIQuFWuJzcQOQKBKcJOdViwI=";
    };
    leo_description = fetchgit {
      url = "https://github.com/ros2-gbp/leo_common-release.git";
      rev = "e6e0ce195979662d770a228c6d72aa71f83abc07";
      hash = "sha256-Yi8hUp1UDui0Zdzwx6JhxHXBD4N3/L36/mN0dwOHufY=";
    };
    leo_desktop = fetchgit {
      url = "https://github.com/ros2-gbp/leo_desktop-release.git";
      rev = "c1a54f9b40ddbf3bc97fee01d5c59273e6dde297";
      hash = "sha256-6KTjQDWAPViQZPNJ0TvIOpgM0ZK6q5bDKX6joQDuOnw=";
    };
    leo_fw = fetchgit {
      url = "https://github.com/ros2-gbp/leo_robot-release.git";
      rev = "179cae449589d487d8f40044e75526ebe38c5150";
      hash = "sha256-P9NJHS6QNdT2tsdtQVCLg4+fd0xJYQZJS3dOrTRDWUk=";
    };
    leo_gz_bringup = fetchgit {
      url = "https://github.com/ros2-gbp/leo_simulator-release.git";
      rev = "09ae0956938149841ea2ec9ad8ce738aec9beec6";
      hash = "sha256-0y/ePaYkD004cZ1wt5INnVSgdpRwZiQHUTGqphJgZoI=";
    };
    leo_gz_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/leo_simulator-release.git";
      rev = "f8a8026d4d76621ccf33b1f573f1de3e16dac872";
      hash = "sha256-ga6r0cJy5q52i+zHX5Xo5GGXCKsEWC34Gu3hMMr29FU=";
    };
    leo_gz_worlds = fetchgit {
      url = "https://github.com/ros2-gbp/leo_simulator-release.git";
      rev = "0b56515cc9fcb0a59080c1f37dbfaa6e9a46cbf7";
      hash = "sha256-EK1pczV1p2fHTbGPgwjCdNvPHbNkIXiSHcLDo6OfCGQ=";
    };
    leo_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/leo_common-release.git";
      rev = "df72fc935fb95c27b2a368f080d9164e2de212ca";
      hash = "sha256-sXiMSsfTjgdxjO/akTTMgVO9nP50z0mfvcJP242J2tk=";
    };
    leo_robot = fetchgit {
      url = "https://github.com/ros2-gbp/leo_robot-release.git";
      rev = "5fc7b4aebe09394d8bc1b59b969563f7a8dad1f4";
      hash = "sha256-0LFVi2DALRU231BQNWmUX5ZbnWkeGbjwQ7+D8HUZ5Rw=";
    };
    leo_simulator = fetchgit {
      url = "https://github.com/ros2-gbp/leo_simulator-release.git";
      rev = "2eb3d91a1f287e2f534b9c7385b44b4b05bb07a9";
      hash = "sha256-9NYk63AFSej3cyv3E/oe0Je7ctEdJ/3W2HmArd4XKp0=";
    };
    leo_teleop = fetchgit {
      url = "https://github.com/ros2-gbp/leo_common-release.git";
      rev = "8f00e8b87e7197ac928ad1c538d672ca6ae5b152";
      hash = "sha256-JeNimAF404UWrQOSZAjVQxl5ntBZtCKMBiq6oUssPTo=";
    };
    leo_viz = fetchgit {
      url = "https://github.com/ros2-gbp/leo_desktop-release.git";
      rev = "8a2ac2489016316dbf3b188848e424ab9c664891";
      hash = "sha256-JrS6oiobEEu7mNXfAH7Ayk6hIbPY0ldoaaA3B4v78iI=";
    };
    lgsvl_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/lgsvl_msgs-release.git";
      rev = "df62ae3eea8caa26f3b54f6c394ca369ddfa63be";
      hash = "sha256-Pd5TP0wLuUr0/m+WvLpkvURpB0d0hbik3SOPkifg8YU=";
    };
    libcaer = fetchgit {
      url = "https://github.com/ros2-gbp/libcaer-release.git";
      rev = "3606412f5d392f2c3103b6d09d5f8d2b146dbcb2";
      hash = "sha256-dwttE1L2vvosLFP5cMWaZTptd7PcE7Cb6Znyo9FB22o=";
    };
    libcaer_driver = fetchgit {
      url = "https://github.com/ros2-gbp/libcaer_driver-release.git";
      rev = "98c5d05aae3f8ae95769dfb0b4342036a1f7c7e3";
      hash = "sha256-2CCXUtNReP9e8B8KI4rXba1zz2y08JMikrKRtzV0+fI=";
    };
    libcaer_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/libcaer_vendor-release.git";
      rev = "0424ca45235d713578a786c73480717ad9b316d6";
      hash = "sha256-qbXJBtbU/GC6K5vEd6Dt1V5gnwyiWAhWD/mya3K/z40=";
    };
    libcamera = fetchgit {
      url = "https://github.com/ros2-gbp/libcamera-release.git";
      rev = "8722fe191723f74cd203b007bc4e228ccd8de4d6";
      hash = "sha256-JmZ0j75Bh3/iVK8U2l/7P3kF9nswD54/DEQBvhfeCV8=";
    };
    libcurl_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/resource_retriever-release.git";
      rev = "e223cb19353802a673a50fa06be2b1cf48452255";
      hash = "sha256-v0iNPURg6MEcVD010bSbeJ81E/2SNv2HQ97U/fcjz1A=";
    };
    libg2o = fetchgit {
      url = "https://github.com/ros2-gbp/libg2o-release.git";
      rev = "00c43ed56545d657e65c2d9df7aae526f9624e13";
      hash = "sha256-AzJrNRj+c+u/OLswKvFbPe9agz7fRITYCGNA6rW8/SY=";
    };
    liblz4_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "24a4a9d4e509be6f2345787f490c3111e74c82e7";
      hash = "sha256-7qUW2AEwVXQRPc8y3Kz3ZmAPEtKj3pR8brDzXbZjVYc=";
    };
    libmavconn = fetchgit {
      url = "https://github.com/ros2-gbp/mavros-release.git";
      rev = "1ad9db29a5ebe61ce571344e569fd3a92235953e";
      hash = "sha256-QBritO4WHraRumwSo3Zp7pZ16Sj5xlwZNFNpMxUNM3M=";
    };
    libnabo = fetchgit {
      url = "https://github.com/ros2-gbp/libnabo-release.git";
      rev = "160592c7ea514f53d953d86d718910a908cbfd21";
      hash = "sha256-v97tjlJi2QXQYpa3qut6ICB4FlDDEz6GBYMY9ParEWw=";
    };
    libphidget22 = fetchgit {
      url = "https://github.com/ros2-gbp/phidgets_drivers-release.git";
      rev = "f325a1971b200ca0531ddcbdc51241c1e6a2d3e5";
      hash = "sha256-6qmEwpvLQ3uNtKDMaZipmO91nKI98FLjFSl0zWR+tCk=";
    };
    libpointmatcher = fetchgit {
      url = "https://github.com/ros2-gbp/libpointmatcher-release.git";
      rev = "42d41781f7dcc4dc8151c3985cb5825bdeaf8978";
      hash = "sha256-Dc7s28fmp2qhKe+0NG+8xjM0KMSvt8o6mGF2liWpEB4=";
    };
    librealsense2 = fetchgit {
      url = "https://github.com/IntelRealSense/librealsense2-release.git";
      rev = "9b999a96567dc0721be20811b3f715c0c33227d1";
      hash = "sha256-tI3pz5+/WaOQ2PifY/4auyUraj3cReWbBOFBn7k6Hok=";
    };
    libstatistics_collector = fetchgit {
      url = "https://github.com/ros2-gbp/libstatistics_collector-release.git";
      rev = "19d619f753118a3cae6e41d2f9974d9a37fea539";
      hash = "sha256-cvI6rweNMAPnISrPDjCi0dRMq6O79AA7JWqrBt01vEA=";
    };
    libyaml_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/libyaml_vendor-release.git";
      rev = "6716b363b25f6dd62d1d1673537ea10bc9f9c3d8";
      hash = "sha256-B4KqEW6DWzKfnmVCRwlG37WRdC5jasM41pTz21e1of0=";
    };
    lifecycle = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "8a97eee798f6d52494e3b2ca858f1b9c5ffb609c";
      hash = "sha256-GWbDRSuuSH51jk1Ag2+oCnn/IXk4Z/RKe27IgZoUEXY=";
    };
    lifecycle_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rcl_interfaces-release.git";
      rev = "30b6f421c32024a0d90ba0d026c41a3d4214181a";
      hash = "sha256-nPm3livoSK0Z2bpSS4SLfqqc0ya2k0zP9IdIfR94V1E=";
    };
    lifecycle_py = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "94f453f81ef00cf3b7eb677fc52ab7a39b4fb4a1";
      hash = "sha256-G2SQPzmMZnrFR7ETFon/1Nj1gKgoJxZGMGsV5Ng12Fc=";
    };
    linux_isolate_process = fetchgit {
      url = "https://github.com/ros2-gbp/linux_isolate_process-release.git";
      rev = "adcde99dc53e5480e71a4533a5e438325f72a216";
      hash = "sha256-1MOoCotNkz3eD3lwztz0QfmCyDxEk36KY1YmdCQIjK4=";
    };
    logging_demo = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "b9f19e69f1e8607359091485e1a21b78d379acf1";
      hash = "sha256-nJDlVxMHpHwjrytNjksUmppri/YZudnpxyZaemNzaJM=";
    };
    lttngpy = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_tracing-release.git";
      rev = "1d2a357d75de1e5d115ceb0b5e3d17d18b8f123f";
      hash = "sha256-mo3tqXxJdLniu+FxFGa58ZhnR8/dFAV8o2+BrXActq8=";
    };
    magic_enum = fetchgit {
      url = "https://github.com/ros2-gbp/magic_enum-release.git";
      rev = "795fc2fd62c047e4282c49aa9a55d20fdab4eed7";
      hash = "sha256-UM1GrwIoe4ScsiC1IhCSqgRqsh3PwDk62bt78smr1rs=";
    };
    map_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/navigation_msgs-release.git";
      rev = "4675ed3bf06517781914cb22ee88628485cf7b78";
      hash = "sha256-M1If3wiTKnM4fAey6QfTAMmUHRGIf83bzE1VuxSlGvw=";
    };
    mapviz = fetchgit {
      url = "https://github.com/ros2-gbp/mapviz-release.git";
      rev = "4530d80eb34d0350971485ca44740c07f0ce00cd";
      hash = "sha256-QOavYJZ21V7PB+K2MI7j0uEWX1GmRRIocdvdSs2ZfP0=";
    };
    mapviz_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/mapviz-release.git";
      rev = "c89e07171d3a49b50ca2c391f2c2e0eb15520008";
      hash = "sha256-rYyoJaGeXYVTz+zNNdikD4+2i+gWQFabeVsFZQL/4aY=";
    };
    mapviz_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/mapviz-release.git";
      rev = "753bce671094fcfc07cdd2be85d9a8d08671f98f";
      hash = "sha256-Uv0w5dSfMSuB3oQZadzM2gPcdxIXoR+wiLnsLZVECk4=";
    };
    marine_acoustic_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/marine_msgs-release.git";
      rev = "2accedcdf1b48bdcbf7a91bf9e33f19a9deebd79";
      hash = "sha256-ALbjKiPGNTichMtqbwwJIA4Y52MYdCELmDl3tLU3dC4=";
    };
    marine_sensor_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/marine_msgs-release.git";
      rev = "156f210aeeefe204e671aee16bc0b561960193cd";
      hash = "sha256-D0FezQ0OVWOXoPzNWC1TM9TGTcHR8hhUTXBz6uEQBnw=";
    };
    marti_can_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/marti_messages-release.git";
      rev = "50c5478d3f5766227eccc7f1da1be88457ebf61c";
      hash = "sha256-SXOyPmMtRuzNSPclfR5SXtJwdCKxJdRwVXnMk5X0/Sc=";
    };
    marti_common_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/marti_messages-release.git";
      rev = "290d7ab8b65b59afda6e2d1a924350641542e85c";
      hash = "sha256-gaOU6sxuZ+abN7u8RPke/CL2TRRRxH+jAwDvOMS6Mbc=";
    };
    marti_dbw_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/marti_messages-release.git";
      rev = "9b35d34dbaedd432ef5e58bae972d90bb657a8e0";
      hash = "sha256-2cBEP9kN6iQjXwvxWDdZEzieO85HsbDrY9g7PbwblV0=";
    };
    marti_introspection_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/marti_messages-release.git";
      rev = "9db2328906cf1977373fe9140e1c2474f0b86671";
      hash = "sha256-bytCDHgxW2xWVWTggl/gLqndp8+d3HaxOxh1p3yy8N4=";
    };
    marti_nav_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/marti_messages-release.git";
      rev = "752bfea3eb9a581c179f0699a1d26550657ebe21";
      hash = "sha256-pHZeqpnOV1h2FMiPfwJ/JSnqTJvVpfXMgsc7lbZmJLs=";
    };
    marti_perception_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/marti_messages-release.git";
      rev = "9bc0b5e821d800944446fd7ad9041cb410c53947";
      hash = "sha256-2qxhSta0F3EVZvP65ORIvmv7wvdpFJtBiATwG+jFkXE=";
    };
    marti_sensor_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/marti_messages-release.git";
      rev = "78ca6c513f16161e13428e3986735e4bfae35d8e";
      hash = "sha256-WyVlezrzQz/gG2DAcv31gIGeJ5Y6ex4TFTymyh4DDY8=";
    };
    marti_status_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/marti_messages-release.git";
      rev = "1473de972739dccf58bf16e981dee77176885c3e";
      hash = "sha256-H0OZx2auL2+GA25U5LCch9035IPk6AjvN3KCUFmT+1k=";
    };
    marti_visualization_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/marti_messages-release.git";
      rev = "3bf65109ff66d795a78872eb4baebfb817cc5d4d";
      hash = "sha256-peyK91dgzn2v2AC23GwQee/eFKooMV3SDLs06KCSnQQ=";
    };
    mavlink = fetchgit {
      url = "https://github.com/ros2-gbp/mavlink-gbp-release.git";
      rev = "1ebc30fddf3bc7bc55237f144a262f09f9240c90";
      hash = "sha256-eMcLVGZW3EwpEMSzXTtwesNUPH1veBpJQRE0DEAaQC4=";
    };
    mavros = fetchgit {
      url = "https://github.com/ros2-gbp/mavros-release.git";
      rev = "31d2090fed1e28a8a3d6eeb570bce12ea0bbf072";
      hash = "sha256-45ZIQJFqpxq+2FRWIxmsJn9gNb+VUMlu7A951/VcfjE=";
    };
    mavros_extras = fetchgit {
      url = "https://github.com/ros2-gbp/mavros-release.git";
      rev = "50cca906c0e232e86bae6f6311a6e2e59c0c9c3a";
      hash = "sha256-ed8UPRtqFOo6c7dGBvyW2v0z91P70cELsh5bH2xApKY=";
    };
    mavros_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/mavros-release.git";
      rev = "a6a97a2e4aa44b927dc948f352e90d9ab2657c6e";
      hash = "sha256-AWdktlWefd9i32GeYclFTFzF6N2LKeGhVQgrtV9GIvs=";
    };
    mcap_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "5c4b554a4a9faf7e6fce2ed3a5d276dcebf482fd";
      hash = "sha256-GeTzcZi2qkundHMGWvGRD6vfh7FfNGRN7M2Gg6ret+U=";
    };
    menge_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/menge_vendor-release.git";
      rev = "dc8e4100a05e84a960dcb1362a6c08fd42f7cb06";
      hash = "sha256-AJu4LBC/jCbOc7xsuWQYqlSM6c4VDKO69VNdPQljsDE=";
    };
    message_filters = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_message_filters-release.git";
      rev = "8d4a77934f4c418d5437fd6960cea3ded3caffde";
      hash = "sha256-uPk1GEuVW1gKQg6ni9uM9iJXK4fYx6Wo9LM+oEf9P5Q=";
    };
    message_tf_frame_transformer = fetchgit {
      url = "https://github.com/ros2-gbp/message_tf_frame_transformer-release.git";
      rev = "bfe9a7f73c48565396efa8f1fa0e0b927a903b07";
      hash = "sha256-vWCcNT8fLXTKeJfhSDyA/wyHJjnuC3gX+U4gtEZXfCA=";
    };
    metavision_driver = fetchgit {
      url = "https://github.com/ros2-gbp/metavision_driver-release.git";
      rev = "10673e148700ada37cbc7197debd5f3beb1e3b38";
      hash = "sha256-cY39QdEEs1lKLaScyeWrofuyVggQEi1Ofnc2JlfEv34=";
    };
    micro_ros_diagnostic_bridge = fetchgit {
      url = "https://github.com/ros2-gbp/micro_ros_diagnostics-release.git";
      rev = "453216f9df2aeba2bd83c63ba0fe56186fc34585";
      hash = "sha256-mBsQdSKOPVQJVBc/FxvaxH5NOtAJy3M+bYciq7eHg+c=";
    };
    micro_ros_diagnostic_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/micro_ros_diagnostics-release.git";
      rev = "76f5de2933fddaf626219a8b72351b75113974ed";
      hash = "sha256-SzsjLMKb42ISN6YTe6pUsmSDS9aBoczr3ayWBkrJAgU=";
    };
    micro_ros_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/micro_ros_msgs-release.git";
      rev = "68328fce0490d843544f5d50941ac3ea2f424ad0";
      hash = "sha256-kuDv7e3C0BCXolx6ePv0TLEpK9E3OfLGFAh0K/9Wb8o=";
    };
    microstrain_inertial_description = fetchgit {
      url = "https://github.com/ros2-gbp/microstrain_inertial-release.git";
      rev = "3cdc10c99e3ed5990d3eefa08004aff8f3b03d9e";
      hash = "sha256-lOHPxY9ciFC3/2X7J0UY5DTOJATWSsB7GRP81vSSZRU=";
    };
    microstrain_inertial_driver = fetchgit {
      url = "https://github.com/ros2-gbp/microstrain_inertial-release.git";
      rev = "2a8e8a4f6c2870f11e6c826e72a19efc0c0f0b30";
      hash = "sha256-X29UZFDfi/zZxdj6lxfQRxhsXTZv1yBdjg0x98wbD/Y=";
    };
    microstrain_inertial_examples = fetchgit {
      url = "https://github.com/ros2-gbp/microstrain_inertial-release.git";
      rev = "d8617764987772ebacb842e6ce10374da496b547";
      hash = "sha256-6qnRt0tiuZyHBlqC5NktccOcL7n5foFcwVNFivIhINg=";
    };
    microstrain_inertial_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/microstrain_inertial-release.git";
      rev = "257256a1d14c4960778d9bdbf8c41c36ce17b1bc";
      hash = "sha256-PeKXv1/tOxe0ML45M74+JehJ/xq8DuPKe1yVSVEhXOY=";
    };
    microstrain_inertial_rqt = fetchgit {
      url = "https://github.com/ros2-gbp/microstrain_inertial-release.git";
      rev = "c8821e68f3737d903958e60a46608e0a1ae7cb96";
      hash = "sha256-SfEuY4PDqEWUD0/6/draATnUJY0mGH4OOeGYhdeYicA=";
    };
    mimick_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/mimick_vendor-release.git";
      rev = "1be11e576e4ab6745b5fa85c3dc3147b79523679";
      hash = "sha256-wQW/rdoXG6vBtOKZi4dSPTuRv1vmyfVQzzwmj2hOZ20=";
    };
    mobileye_560_660_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/astuff_sensor_msgs-release.git";
      rev = "e8de98737d059f4e2e5b2fef12cb57ecc8ff8283";
      hash = "sha256-VUBlCZa6YHrHj0N2L4MPJZXOD74+Uu4leG3oXg1ZOJg=";
    };
    mola = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "b7be414b5b8467fc11c41eb3a926d355cf9660e9";
      hash = "sha256-0k6S97+RfOGopfefX+vpaklgl1JH2VpH22vHt4bt2uQ=";
    };
    mola_bridge_ros2 = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "70b26b4e8925d59c1fc4e4119e3213fdef7b5c68";
      hash = "sha256-jxbG3BnHn8KqByvBE0R5WNjxZeyoAuH1H1QBONySt7Y=";
    };
    mola_common = fetchgit {
      url = "https://github.com/ros2-gbp/mola_common-release.git";
      rev = "e6799934cd94df30596c4f65be77e8ec9ef905d0";
      hash = "sha256-JetMKVWYQtfaVcAHBcrqzrTCToKE126m5lWzdjs5VAQ=";
    };
    mola_demos = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "d8bfb6433a8902f0fe646cdb3632f86ae6453dc1";
      hash = "sha256-XrTSbNh3tlYbur782MaGRByYapPhDBmO9/GTLgwHgWE=";
    };
    mola_imu_preintegration = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "9d11cba1f1429259b12ba46686e83f6f6850c948";
      hash = "sha256-cAKpNoFmb63UtwzEUa0OoN2xtBVWydHgFUtwfd6mJKA=";
    };
    mola_input_euroc_dataset = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "d51c962be9214ede76c55fdc536c9ab18fe42ab3";
      hash = "sha256-4G5pzRTKcZysRrzJ9Y7K3iUMytOyAjXVs1Vn6dOP6K0=";
    };
    mola_input_kitti360_dataset = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "5241c7fa0030d020a90968e661011c7e4146626f";
      hash = "sha256-KuOMrRimlEEnraU4iYt5stuFyGXVbs/c3ZW2XC8e7ek=";
    };
    mola_input_kitti_dataset = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "d76a79570de23a416b7d277dabc64043b6822134";
      hash = "sha256-x6wxSZsH+m0OjwJkwpwy5pStOAeyeY2Vue06sDfpBTw=";
    };
    mola_input_mulran_dataset = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "fcaf5ff2f00083243925ac56500b2f8825d8bd09";
      hash = "sha256-Pyd6LDUfq4Dcf8avJuvr/Rv/SOZtmHHylgA0ddopQSI=";
    };
    mola_input_paris_luco_dataset = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "7888ec90c98c8a7fb410bdf64e0ea6723ac782f0";
      hash = "sha256-uT7VSGCguyjsyLWSGJElRtpqtzFVsnCScv1a0RL+MjM=";
    };
    mola_input_rawlog = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "6b13ad6f0cbcff4effe568d386a2b763b4f9125b";
      hash = "sha256-D54M915V3Pe84qAjY5uAP4MCfpT7E+/C8Z3f2z043c0=";
    };
    mola_input_rosbag2 = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "a2f0f35687d65abb2c3411e33721070b8bf32991";
      hash = "sha256-K3+U9HWRCi4GzWtIlh7AReA7LcLidA2LAcoyJek7rKM=";
    };
    mola_kernel = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "8f418e9e06f52ef3acaef95979bd2c48d9a3a648";
      hash = "sha256-T6yYunIpMJXMfUiSDYOOwWFC2Rewjq1uNU9uR60TmVs=";
    };
    mola_launcher = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "2090cb44078b6398da7a2cd664b24f3d3f0045b9";
      hash = "sha256-GRf9Vra3VSYFhMsHnyFlcmVi3UAXy4bTVe/ngnvUQ4Y=";
    };
    mola_metric_maps = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "5f67ddd96f7ade96f98654e67980370c34771367";
      hash = "sha256-/OhIDf+0rU/PhnVWE03vDT/Dne4y/rw0H1fREl6WL6s=";
    };
    mola_navstate_fg = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "ede7cd0157ab8cb724fe22ef40172b711274961d";
      hash = "sha256-pOk8DGxSVAz2XkBVYP09rspvnYzRdpXWTPzenuSFbF4=";
    };
    mola_navstate_fuse = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "7853f153e7c6a152536016606a98a8e9fcfb4ca6";
      hash = "sha256-OPOC9s8A2o6MOM22wxEf2o2pGu0rXL/FmiBI/ewcyxg=";
    };
    mola_pose_list = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "fa78c28c882f50c750550d6b2bde610498cb88ed";
      hash = "sha256-lErQqkdThV+fJ59Zh+5l10r8O7bwQibb74FoH8jZu2c=";
    };
    mola_relocalization = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "bc0df8e05d45b8134332f6997ff5a2e4199786db";
      hash = "sha256-DKJZen9gJKTp1AHQHbhz7W1I3qyZ4noxY3W4xysYpwU=";
    };
    mola_test_datasets = fetchgit {
      url = "https://github.com/ros2-gbp/mola_test_datasets-release.git";
      rev = "06e75aac14a591b2cd4ec61adb54919b8ec9bbdf";
      hash = "sha256-P0TT8xB70P0BO98brdl0coZ9fThbvpg4d5BJ5AMzWno=";
    };
    mola_traj_tools = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "7cbb9578cf47c8f82aa47fd5e907e2f3b9fc0306";
      hash = "sha256-lcWYjdqG9W7GNzcUuW/AsWUB6X7cSA1O5uFU+cZN3TM=";
    };
    mola_viz = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "c2bb4bcefdee7c485713a8ed17a627712805816a";
      hash = "sha256-4e4L9w5blHlC21UCn9O2VqhwSXbnyeKCy5fSgXRRbHw=";
    };
    mola_yaml = fetchgit {
      url = "https://github.com/ros2-gbp/mola-release.git";
      rev = "ab5749adfd4ddee83c8f0d55355a690356c58ad5";
      hash = "sha256-8cfBNObwcLp+gG8Vd2pi7dy5xHk7Ke578Qp9ZMUEFsY=";
    };
    motion_capture_tracking = fetchgit {
      url = "https://github.com/ros2-gbp/motion_capture_tracking-release.git";
      rev = "42bccb83df2d4181678a85d158baf5f9a996a3fe";
      hash = "sha256-i4x1fFnItmyr13Kz2YfUYfYKcessV15UqBvrOb4Q41c=";
    };
    motion_capture_tracking_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/motion_capture_tracking-release.git";
      rev = "d3cb19d132f7ebed6e4e1845c9b859f4d217da8b";
      hash = "sha256-ho+25GyuWOKXqZqIp74ZO8leEndRFRqfn74DBKWKZWk=";
    };
    mouse_teleop = fetchgit {
      url = "https://github.com/ros2-gbp/teleop_tools-release.git";
      rev = "c4340fc498afb1b2a88f351619cddb1817e9b256";
      hash = "sha256-4ApQu9cIv086UTOdot+fSpAb8OEJT8gTERQwK2OWWL0=";
    };
    moveit = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "893aaf222051de5478b6f8bd9077f974cbf8c132";
      hash = "sha256-ks+3x/OmI9wu9+rUiTQQo2PYVKkbS5A0U5xsNN9LqhA=";
    };
    moveit_common = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "f940ec341fab3a1a9e1134ef6765630ee5b2d4b1";
      hash = "sha256-+nYHvpEkbnYH7o6lx4IhWXvErGHpMSME97pdidmL7wA=";
    };
    moveit_configs_utils = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "5b1a56d796279057a36d9738191655ecf616b024";
      hash = "sha256-8DDHsJCi1DVNRwZcC9PrM6vw7VJA2mZjeOroGm+NewY=";
    };
    moveit_core = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "4ddbf0913eeb711c68b916e71d92c144500892da";
      hash = "sha256-WwWn+S+POgbqVVFiTNS9YCPW4HwH0UtkvCrAYRmEuIE=";
    };
    moveit_hybrid_planning = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "85a5b5c67eb522f7730ee025c2e603c36e4acaeb";
      hash = "sha256-KUzQByTujYnu6ZUbStJRiivd3oUpOSdi34fHHSs9Zy0=";
    };
    moveit_kinematics = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "e6bac77b77b63caf01dda902c3d3c38b8de6cc18";
      hash = "sha256-hseesEOBXSfOj36mGIbEmGSddLotrO+orC8BkjQnkzw=";
    };
    moveit_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/moveit_msgs-release.git";
      rev = "1225bd68c7aaae83a9d763303e0b2ac909b3062a";
      hash = "sha256-xpAnqhbeUYf85S2GbiQw9gxJsrS6zLTPMNFaUetjRtY=";
    };
    moveit_planners = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "52849597ee1e7579bd26f4d857e96fd813815e1e";
      hash = "sha256-tHhEg3jwekHAsyucoYE+gFnMw+bCXkrKzo++Lkpf0So=";
    };
    moveit_planners_chomp = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "21ee9a088ae8b104c1719b7e15353681ba2ee853";
      hash = "sha256-W8GhBQYkvLZ6DKk+pkVc/ZwnfNVRwIcTqlqWHX3sHSE=";
    };
    moveit_planners_ompl = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "e1c5a7257b73f495419808e94652fae0b0782afc";
      hash = "sha256-W+rFXVi8+8p9Zw1yJ7jOSgc6aT0r1pT4bZ9kGXdDySc=";
    };
    moveit_planners_stomp = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "7a1d93e2b0eacdf13cb8e2dfaf76e4211c17422b";
      hash = "sha256-EgW89h7du3ms3jp8R5zyUq8/S0pCauPOEUcwWkEyJ3Q=";
    };
    moveit_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "5141fa4cd1dcf35e61f772376dba2c30930168db";
      hash = "sha256-kPrOE89xIqGfsHcYKSmL7YsJpWCBNDPmdbHY5x0lG1M=";
    };
    moveit_py = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "1a2ca49341be3d3cfdda1883cf49118ccdf47c62";
      hash = "sha256-g7saOz9IdlSXYFhRUfWk6SF4+/6zNq8nFfHzfeWf2bo=";
    };
    moveit_resources = fetchgit {
      url = "https://github.com/ros2-gbp/moveit_resources-release.git";
      rev = "ae769c36e1183d208fb2aea7d5135c440427c26d";
      hash = "sha256-nQVTLNFKshftxcEkkLVLw+Azj/KgNptezxk3p/3foWw=";
    };
    moveit_resources_fanuc_description = fetchgit {
      url = "https://github.com/ros2-gbp/moveit_resources-release.git";
      rev = "d468edc461adbbc22d4f3fcf715695f491927ce9";
      hash = "sha256-x/iys4VikU/BQxbNSLBFX67NjJOLF/0SG8WHjCrEovs=";
    };
    moveit_resources_fanuc_moveit_config = fetchgit {
      url = "https://github.com/ros2-gbp/moveit_resources-release.git";
      rev = "c5ed7e182a3c639bab928f65b63a4497ecd359db";
      hash = "sha256-5W4dgdY+Kj2gphTOhUv2nAWi/hYFhI2zB855Sf5izOI=";
    };
    moveit_resources_panda_description = fetchgit {
      url = "https://github.com/ros2-gbp/moveit_resources-release.git";
      rev = "7bfc2734fd09c71ca53b88b0b17d944375e06f51";
      hash = "sha256-50HSyW1h2ttqppwymHM5VIpHYEHUYQ03FbKAAnIfdGs=";
    };
    moveit_resources_panda_moveit_config = fetchgit {
      url = "https://github.com/ros2-gbp/moveit_resources-release.git";
      rev = "f048126f19cacecb1f7c092287c00c0b39bb162e";
      hash = "sha256-G2SAJQ8QFn7N5xCMdzG4MnXGoK2oaVA4NcrLUShEM7A=";
    };
    moveit_resources_pr2_description = fetchgit {
      url = "https://github.com/ros2-gbp/moveit_resources-release.git";
      rev = "821741ae9a650e7a880e86656b85a7366a9f6ccc";
      hash = "sha256-9yVWeyYXh1lWUcisKLickZOAQgmOAKkwvWNQ+99mCKQ=";
    };
    moveit_resources_prbt_ikfast_manipulator_plugin = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "b15cc6b1a54aa61aed6476ae3d8484ead2d20e7c";
      hash = "sha256-3jp2d4fWMgZrmfzyREuAa9rG/lPVjD4zLbUcZPN6mpI=";
    };
    moveit_resources_prbt_moveit_config = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "9d3d55c82237a47583441415d0f69748ffa0ccf3";
      hash = "sha256-PIPewmh2T1boe+I/jVlC1Weg6gP4O+52b6sazqkllTA=";
    };
    moveit_resources_prbt_pg70_support = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "5321b978d890fdf94c055b8bf35f0d53b756c188";
      hash = "sha256-ChdyKCb3jx8wp4q/LC4M9me9rV6zIVHbqHsrZ0O8kmE=";
    };
    moveit_resources_prbt_support = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "6e0d73e81e61b35524cb3fd7348318881affb6ff";
      hash = "sha256-lAWIBlYGwRc0l2Zzos29VCzMyDmR5ajjrM1Jj05ToJM=";
    };
    moveit_ros = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "892a548c79100fe246e5230d1a4319cc0b1222a6";
      hash = "sha256-hRBtjcp1PnATPTuIVhroUdtnXgo/Lihj0Dd+FF7Gsnk=";
    };
    moveit_ros_benchmarks = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "93bf8852d4435dfccab9055a267af6c5111f9934";
      hash = "sha256-sHVNAk/cZy7UtZldddJLN7kWaaakA6FCskuG1egghKU=";
    };
    moveit_ros_control_interface = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "5795f623592a04d8002e48ee67f9cb5775818429";
      hash = "sha256-B6O13tr7cM05cETrXCrQREZPR6laPf99em5jREAsHt4=";
    };
    moveit_ros_move_group = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "088e184c434cc45da5c81fe0bcfb7c9546764c70";
      hash = "sha256-U0PtBToT0E3CmCLzeIRuD+JqDiLKTC6jV/PjNZnxAiM=";
    };
    moveit_ros_occupancy_map_monitor = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "6ab5e07eb5f5945162f845d32c84b7c8ce827ab4";
      hash = "sha256-WHbMOwEkQoPOrHQOeH/0GJyEa7g/ez3LJsJTZw6jUUw=";
    };
    moveit_ros_perception = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "5a4fd053525dfaaa338cf73cb2d1956f089d83f4";
      hash = "sha256-NJpX8zqkfP2SGj0YS4mprp/gC9Zwy9jc+md61MDNsSg=";
    };
    moveit_ros_planning = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "0b3b7b2e01ccc67f01a6214a468ef407440b27a1";
      hash = "sha256-mGutKWZONAbd2APXkqN5kCBsCLpgdjYtgZGWoOjZBgg=";
    };
    moveit_ros_planning_interface = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "651babb8c7c8f6def4d0b32851564b07c6fc413f";
      hash = "sha256-LyXQVbAHkCqEPgV96kQUi7a4P4PKxhDCnBlX0igjFGU=";
    };
    moveit_ros_robot_interaction = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "ddb05e33043712ce2b4d9f1fd8baaf8fbf7e494f";
      hash = "sha256-z8r+vWJe9V5E0HFgvUdAPpSxQN4woZl0l/ec5guTiDo=";
    };
    moveit_ros_tests = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "0ab7f4dac1d6d69e2d07e83f7f6cd732d42fcee4";
      hash = "sha256-CBtAHgOOSEBQ/Ccgd8mFuMEkvE1S2+T3ZGx0c8fLr+E=";
    };
    moveit_ros_visualization = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "2ff04821cc1ca95f85ab9e1149e77387453c11a6";
      hash = "sha256-T8ZN045rArWrW5ioSB6F5P+mx5YprOYmizGj9sKsUrM=";
    };
    moveit_ros_warehouse = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "c2a61092f73916e5537581377247478d8ca410d6";
      hash = "sha256-VOBxChpRFT62DKi68B+v/i7ZfgDIYLnkBbhfDFi8ck0=";
    };
    moveit_runtime = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "2ddde4274e5e80ea818897525648caaf6cdd54ac";
      hash = "sha256-SR3G7cM+iKdHJI3TKxLIjvWalU7z2ah5YPtuF295yGk=";
    };
    moveit_servo = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "cb66905f35b3d028d549fedb54280842822adbe6";
      hash = "sha256-4S4Bt6Fu+LWXvvdRWVqxwaCP7Q2ELAJsz0I3zGYIWvM=";
    };
    moveit_setup_app_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "621950b42f943bddfebe7be7a13e56c73f6a8a13";
      hash = "sha256-v3WYe91IjpNTCrgyLUKfw1KhEM8py0v0i46Np9JzSEo=";
    };
    moveit_setup_assistant = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "7237ec22571e5e59ca619e26270d7bb0ffc38446";
      hash = "sha256-NSji7+ZlJPetoyTGf8EL+tktqrNMizkfwp/KmM/V6xo=";
    };
    moveit_setup_controllers = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "ebab99912374cff2100a3f9efc20fdd3ae1ba654";
      hash = "sha256-zvscEXuZnQ5Iz08FIIvh8kcnJcoRoKGt/jBrky0tHfM=";
    };
    moveit_setup_core_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "46f3e46b144520f8f6ffa72521ed718e7eaff8b9";
      hash = "sha256-zu0imYmCxzAZeYZhj925AlKQbSyYk3L+0kr0pIJkiyw=";
    };
    moveit_setup_framework = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "376bde171f1210b2bdf29dbc2324eea288f02bbf";
      hash = "sha256-11UWNQcUX87xuOSYir0gcYs+rkUvPXMNp7PXBwErVCg=";
    };
    moveit_setup_srdf_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "966f9f9255ac91a2abea818c45aeebeb6b7c433d";
      hash = "sha256-MFThaG7t1x9XbP+Y+w2dQF28A/I7Oiq0qD7PTQ8IFY0=";
    };
    moveit_simple_controller_manager = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "876f7bb5cef97fc88176ae77dd1015afb7a50fdb";
      hash = "sha256-phTAY2teeJGDQBTJPZ/T6NS6p89dX8IaJixBCe745ew=";
    };
    moveit_visual_tools = fetchgit {
      url = "https://github.com/ros2-gbp/moveit_visual_tools-release.git";
      rev = "6d23bf6d6d79f31f79218e55b81b9e9c53ce90b7";
      hash = "sha256-OsgJs0kV7m3GzRlDL1x8i5hG03piwA+9f+Mbpx+dOmw=";
    };
    mp2p_icp = fetchgit {
      url = "https://github.com/ros2-gbp/mp2p_icp-release.git";
      rev = "30676b6083ac94016348e297fe7dcd2ca54c3395";
      hash = "sha256-369hzoqsWxmzRnMiRAYNgvIMbfIgoi+WN2KYX38S9wU=";
    };
    mqtt_client = fetchgit {
      url = "https://github.com/ros2-gbp/mqtt_client-release.git";
      rev = "4b91cd4dcf7559b8fdc8c45bd4a4d621e2b31ffd";
      hash = "sha256-6PiP7jY7cdK3oodJirtS2kLQUyqVVn1Jp3eY8StfXls=";
    };
    mqtt_client_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/mqtt_client-release.git";
      rev = "ec05d23655623974f238aeb0e689822995659a2c";
      hash = "sha256-uodTNl9Jgjak1DPQpOe1aOEwSCdyfYY8zvExpOctHJE=";
    };
    mrpt2 = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt2-release.git";
      rev = "6d078827cce6e0cc3da8ced38c8603e28fa32d70";
      hash = "sha256-KeGqgnmOqUo+gmrvHRXeuRSY5+qykiFudMdieCBe6dc=";
    };
    mrpt_generic_sensor = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_sensors-release.git";
      rev = "ae3dc1ef859af025298eaf298e8c7c23b3099c68";
      hash = "sha256-J9XEAT75hKBBLE2nIcuLM4QCxoFaIryQkceta1uceJk=";
    };
    mrpt_map_server = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_navigation-release.git";
      rev = "92089f958ac091e2e69946f1d1dcf639bf1f44bf";
      hash = "sha256-lJmz9GTaZwG9nIqlqn9eJW01gjWJ4OpGzuoTyTFpodA=";
    };
    mrpt_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_msgs-release.git";
      rev = "58cee178b86be2e6a62b1c4895603c4d10a3939a";
      hash = "sha256-aWWfgmGZaX5Hai0iTV9oUl1V2Gz9/csFD9tIVQdlPRE=";
    };
    mrpt_msgs_bridge = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_navigation-release.git";
      rev = "d7df35e67f6b0580158ca3828ac356166d40cac6";
      hash = "sha256-eNG8bYk+y4ccqCxpy+thZLJc94k6b6vmXLpefYFdKV8=";
    };
    mrpt_nav_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_navigation-release.git";
      rev = "f8493efed334b478b6b0dba852b3eddcaf52b271";
      hash = "sha256-XQOrXaqISwGgrmhf7cVuA5CBJcclLntIn8sKUswUY88=";
    };
    mrpt_navigation = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_navigation-release.git";
      rev = "035efef98238b83663969b20d590b4a9e71392f4";
      hash = "sha256-41PIEZUsBlzOkBCIqVxABdbgwHTPbeCVAeMtXdzbKGQ=";
    };
    mrpt_path_planning = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_path_planning-release.git";
      rev = "9ff6ce496eb36011c9d70495c122c72ebdcd16cb";
      hash = "sha256-XWexI9w2FPA3Rg8km5x+SQGxY5414oFxsWRAWvFVrxY=";
    };
    mrpt_pf_localization = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_navigation-release.git";
      rev = "42fe01f7a0284e7edcbf9462c5ef917f9655da6f";
      hash = "sha256-fucX2BkaWAKGq0PLdbZ+inqt83+Vgcal/NDBINo+AYM=";
    };
    mrpt_pointcloud_pipeline = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_navigation-release.git";
      rev = "0462967f0064b6e1b86770463c1a272722891046";
      hash = "sha256-bjQ/GNeTXz1ULPbBHr3M5valz626pDhLLRAIzblLjrg=";
    };
    mrpt_rawlog = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_navigation-release.git";
      rev = "a4a2fe484e1d358d8892a0ea2e385242c8457034";
      hash = "sha256-J8iXb6VGvbMd+shvFvFVGLWJTrWbRIxxzuh9oBYnNtQ=";
    };
    mrpt_reactivenav2d = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_navigation-release.git";
      rev = "5287aff260b81aba178025561e8e034d67731044";
      hash = "sha256-bG1tBK3tmCfCjoEuyJfALn2hEVUbJdePWEsRv9mccHs=";
    };
    mrpt_sensor_bumblebee_stereo = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_sensors-release.git";
      rev = "7fdef33097308ae4708962ce131aa2a3d1c5bdcb";
      hash = "sha256-JX7fUDoLcojqs1Xe67ADAjTqwlo/Y0hRI5Qer+kC37A=";
    };
    mrpt_sensor_gnss_nmea = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_sensors-release.git";
      rev = "307d6f8878e12dadb1d52d48a78b9b4551aae795";
      hash = "sha256-bKWcG2FncxCAusKuzczI5RhkWJts1Q+3OKHmPMtpRVs=";
    };
    mrpt_sensor_gnss_novatel = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_sensors-release.git";
      rev = "81a3f965ed9c757f65d47b59ecf3c14d7f3b7799";
      hash = "sha256-kfTZUskPw7eSeJvzTitjr8QYA4pk6v0kaBlody3LDMA=";
    };
    mrpt_sensor_imu_taobotics = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_sensors-release.git";
      rev = "7929992a36fdfac95e0c6c9f5f0f59aa3591a45b";
      hash = "sha256-sjubEiMgr6tJqNLbWu+hbPcqNd90lwaZQrktj2UKBCE=";
    };
    mrpt_sensorlib = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_sensors-release.git";
      rev = "111170919a9ab7b4ae3832ce39d9526fa19d60ab";
      hash = "sha256-J0y6+5LXV6w/rcob8bV2eBDxqiApTpx8CKkCQInnY+I=";
    };
    mrpt_sensors = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_sensors-release.git";
      rev = "4e4ec8d1f9b2a8b041b2ea33f1fb09c5d8ae4e1a";
      hash = "sha256-7wKC0IqCPUKO2rmVoffkMThP9L58axvahvg2L3unlxY=";
    };
    mrpt_tutorials = fetchgit {
      url = "https://github.com/ros2-gbp/mrpt_navigation-release.git";
      rev = "bbd3bc5e0d3ae3d77bb0b7335bcd8033b6d1dfb8";
      hash = "sha256-op5QzXtPzS28BARwqqbL52mJ1Bj8GCZqBjdWatFgvNY=";
    };
    mrt_cmake_modules = fetchgit {
      url = "https://github.com/ros2-gbp/mrt_cmake_modules-release.git";
      rev = "7c6d3217898f0c45a9eb0a0673174ff3efafc058";
      hash = "sha256-PCqR+osiiGlHN0JWW6C/bhSD9H7GuzuQ4Lo8fExnOk0=";
    };
    multires_image = fetchgit {
      url = "https://github.com/ros2-gbp/mapviz-release.git";
      rev = "1fd376251a241780b6b1b7f891c9c27eec819b07";
      hash = "sha256-KvU020VAzmWVhBEWe4vfhtWwK375EA3fBv8Ss5DwgR8=";
    };
    mvsim = fetchgit {
      url = "https://github.com/ros2-gbp/mvsim-release.git";
      rev = "efc26e20dc7b174ada9c038ca007f1470de7abe9";
      hash = "sha256-nVLQEho55D7tfOG4MwITL8EIA4Ly6UaCzOpm8BaZbzo=";
    };
    nao_button_sim = fetchgit {
      url = "https://github.com/ros2-gbp/nao_button_sim-release.git";
      rev = "2079860e6e50b930bf87f6000645ecabb9eb67d7";
      hash = "sha256-IV6xrXwb9dZjmwilXG0QxfVUpofGVKBxJdaqAVjcCO8=";
    };
    nao_command_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/nao_interfaces-release.git";
      rev = "a36d9eed21ce44896146e9f47d6e14298c4c69a0";
      hash = "sha256-geYK5hMHI66LcCD6GJ3Lr8T0ocK3/ExFHKKq9kBUZRs=";
    };
    nao_lola = fetchgit {
      url = "https://github.com/ros2-gbp/nao_lola-release.git";
      rev = "8a20246aaa40a9b39b647fca378090da73caa4cc";
      hash = "sha256-4PYS6ui19PLLdGv3RK/Yocfe4mLcF7codg2N1R+L2NM=";
    };
    nao_lola_client = fetchgit {
      url = "https://github.com/ros2-gbp/nao_lola-release.git";
      rev = "c81a45165ab9fa279a5a60509cf97db5c2a31b15";
      hash = "sha256-EC4It9qdpgQxnpVxErStgFzOy5Uq4NCqJ4mbwm4CWjk=";
    };
    nao_lola_command_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/nao_lola-release.git";
      rev = "bee52f8cf556d8d71ae7eaa5020654e986e6f8e0";
      hash = "sha256-IndgGzImBnJw0rE9ABJUpaTnide4Sgyo0iQGNQ2MAC0=";
    };
    nao_lola_sensor_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/nao_lola-release.git";
      rev = "fe59a77b09ee5da05220551d7714d0099e545e04";
      hash = "sha256-I+mOw69Qd5OqCcNdvjpOn3LGw/W/7hPl71P0sgF+42k=";
    };
    nao_sensor_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/nao_interfaces-release.git";
      rev = "0a14ed88efbf4923f9cc1b219425ee9a0f5e0d35";
      hash = "sha256-z8HBYfJ4SH1kbToGsf6tHPccjImandiilK9gxOLUF90=";
    };
    nav2_amcl = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "9f742b9ca81abbb94d104c1df1d2a758342f885e";
      hash = "sha256-9kwfyxHaUTkmY0XuvccTi0Bl+1WKU7Le7k7n5aW2KSo=";
    };
    nav2_behavior_tree = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "4194188ae497e71da48bb64a1f24ab2bbea5188e";
      hash = "sha256-0+wrWPtw2GqubuDNVIOPHvDxcxxiHWjUJKECRvej0yc=";
    };
    nav2_behaviors = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "95110e59dd0b72de7eabca4f781342e54dcb9c78";
      hash = "sha256-vedWvaNjpM1Xr+nRzotbnCu9rirmpsItL6zgp6+HPgY=";
    };
    nav2_bringup = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "d5079dfa9dfb52dbc6fafb5fc7e37aef00e72e69";
      hash = "sha256-2AfHsTGLd0zIZa7CdbnOGKHHAM06sCT14Cy3H5Hzg4E=";
    };
    nav2_bt_navigator = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "8eb83286cc88a4e598cc9ebee20896a805fc017e";
      hash = "sha256-zy0VHxzPhaqY6m22thgM9NkB/wK8rTqqLV7Mzr040Yg=";
    };
    nav2_collision_monitor = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "555514ea871c57c4d96f7b9efe16196c19515726";
      hash = "sha256-jJEfn6HjtESHmPRu/RBPBx+eZGbCPxwbnjXI7n4mdtY=";
    };
    nav2_common = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "11da3bf82def61c133d0ad4353a83280f088c42d";
      hash = "sha256-xwvOsQ9AbDsqOfY07YmwujiyOUEammC7QMr3LbqnfD0=";
    };
    nav2_constrained_smoother = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "7270db9bb8f83f315c5df6458f537fae04ed73a2";
      hash = "sha256-tdO/A5FNAqSUWaphD+iSywKrVZCYoOKCdt+ucqy9wbY=";
    };
    nav2_controller = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "403351d84d9420f428d60c52ccf52247419afbbd";
      hash = "sha256-QWhwt/vdiW2bhAj6Ev5C0cj+WnrK5woGDzUV9Sk98GY=";
    };
    nav2_core = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "1a22cd5d49ea960256cf09ef4ab91a227eef733e";
      hash = "sha256-oaIrrYY4yd3YDxaPmTLVqF/W50925gyNWSEzPUKN+yk=";
    };
    nav2_costmap_2d = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "47f10eb53318b49a3b34ebacd11c97cc090ae48c";
      hash = "sha256-WR6tTG35bWxhd/Wfny25mob40W1pahFQ7InJwWzCW40=";
    };
    nav2_dwb_controller = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "0c62361b3023e556e3487961c0b0210669565842";
      hash = "sha256-mwL2g04Vs3SdQlNtuvfgQS+xPpfsTARKoTOXTNuqeYw=";
    };
    nav2_graceful_controller = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "ff3bc6357733887e0d7cec0f4da95f505c9e9a01";
      hash = "sha256-EySxARKMADE8RVp5WMIQ0B/7YLTE3ZijVWs5Tj/MLoY=";
    };
    nav2_lifecycle_manager = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "f01e8e6b6a8f0a38d43af2f3f14f5b1e26b06e50";
      hash = "sha256-IvyKGfmX6AcqrHboX+b9Hz0qx6T7emyz0rsJtkffICs=";
    };
    nav2_map_server = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "0391957d785d72e71b5091a084a5a9e9c1f2e8f7";
      hash = "sha256-roqUdRVxi+FHoy+uPceq1cpI/en8ev/aMeliiPjeTXo=";
    };
    nav2_minimal_tb3_sim = fetchgit {
      url = "https://github.com/ros-navigation/nav2_minimal_turtlebot_simulation-release.git";
      rev = "6fdb74ef5014c45665763a5ec57a524bcc05e4ab";
      hash = "sha256-ooAXS+KL4tKLDGNN5Esp22qX9t3i+RPs0BYlWK40mng=";
    };
    nav2_minimal_tb4_description = fetchgit {
      url = "https://github.com/ros-navigation/nav2_minimal_turtlebot_simulation-release.git";
      rev = "432d4a90df96c75d5c6c6578ea0f576fe3cad75d";
      hash = "sha256-r1KPRn5VOO/olYF6Mmv/bf6pcOMHjL89MxlPhLetbyI=";
    };
    nav2_minimal_tb4_sim = fetchgit {
      url = "https://github.com/ros-navigation/nav2_minimal_turtlebot_simulation-release.git";
      rev = "8761baaf35829730ab24dbd553f7d437b4a542dc";
      hash = "sha256-rQfuepSMdQIJmkfUmcjG45kyVyy1F0+Tz8RlKHKTujc=";
    };
    nav2_mppi_controller = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "74ed9a89f935c9afa4ea238ef38ebf71623fe51c";
      hash = "sha256-5xmU1ga1kmDi1fb+prFHI/tWdCmRECFxlSW/ao+XktQ=";
    };
    nav2_msgs = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "b77007d6cc4cc0adc0fa10a114128e682d76c1e8";
      hash = "sha256-DSoCMP13PdjSY8tA4h86qdDA3nOWqHXkPraSTb4p+dA=";
    };
    nav2_navfn_planner = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "61a74dd182e3cc0581936a8b280ffa6496dd4426";
      hash = "sha256-S8ZnqN5czsKrDQRnUIiYxBGC4OKOfyaNhk0ndP4yAPY=";
    };
    nav2_planner = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "45a4afb2e35f2ac1e35523f7d9d835b67b0c77c8";
      hash = "sha256-CuV66uDE8qqUIv5493Q/ioiMPk3u/3nud6j4090nicg=";
    };
    nav2_regulated_pure_pursuit_controller = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "cafd073c2a40aa54455b495c85fb6bf0a77ea3a1";
      hash = "sha256-OmE1Hqvqv/GJX2yK+Vr+e07Gc5e4II+zQnJyvkJOc6A=";
    };
    nav2_rotation_shim_controller = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "a122f5212dfbf5879e912aaa53793eba2f50f4e9";
      hash = "sha256-7FJxjZRToVV8XqqM+WfgTbjVB50roNHOfvsv20p8REc=";
    };
    nav2_rviz_plugins = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "35fa0e140bbda438071354402e21a3efd75dee48";
      hash = "sha256-SlyzCbLB81jKEK0dqO3Hs0oNcHh7M8VjeHI2uNCGgy8=";
    };
    nav2_simple_commander = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "2f7c0d496b9c9129789862609500ed966e80d894";
      hash = "sha256-jjcEhT1H9w33oBfi7eaHgVm21/A/Lx5Cfmq2MY3TFkw=";
    };
    nav2_smac_planner = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "26ae0c267be0f96235111552c072bc41b0c462ce";
      hash = "sha256-4oKc3weGfBq2L8uo1iPErJj0CO8MxVnp9JQ5ffssSKk=";
    };
    nav2_smoother = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "98bd663934007eee69743338bfe9b49004d4ad66";
      hash = "sha256-YcFWs95kYyBgeuBq9633eHaNCBuQlUjrIynvDB8JDoA=";
    };
    nav2_system_tests = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "43abf92c5582502f060188049cc4e43286b9afbe";
      hash = "sha256-CTFSyDlyX7rnQYTcOnYMAj5tSP/VckZJX6XZrplzPfg=";
    };
    nav2_theta_star_planner = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "cdfa41da67baef0ceb8dc10d8bea39e2a68c77c1";
      hash = "sha256-cI+YETmKxi90sb4WdERWy/pqbN0Y6ZRMT2YfmZiU4oI=";
    };
    nav2_util = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "462e2d833665521819d17620af65080188e7a9d2";
      hash = "sha256-hSroNMArBIOdRu0xsksZso/CPpayQRffKAY2X8Cr5Oo=";
    };
    nav2_velocity_smoother = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "dd8c8e95fafa2102e5abb0e51fcef8e07294ad66";
      hash = "sha256-+bFcukPpghbMv5pgmnkiAa0Mr6R4OAXXCsJH4y1D/K8=";
    };
    nav2_voxel_grid = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "5c8cba2a54c9f2c60adadf2ecb419431c0a0e945";
      hash = "sha256-HPdXr4wG6JuQ0WG3bTp4rhWpedD2dG1Rwyv/6dhuZOE=";
    };
    nav2_waypoint_follower = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "b6de89407c0c277ece335caba67123ff2b442977";
      hash = "sha256-siSFfmlvB4EunVnhUzJixlqnF4hSvP2pcMu99qjhpos=";
    };
    nav_2d_msgs = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "a9c822105bb310b40213ebac743bc683effff5eb";
      hash = "sha256-E1znrBfE4nFmwe9ydNdASZ5ZRnnxX6SVvPv/kcXqIrs=";
    };
    nav_2d_utils = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "7b42cf777bd801014d2da6ceb20c76b1d14f0a78";
      hash = "sha256-oHxnA0gWubyHWzrWuYRiGcDW0H2rWuYyUUA+UJf9XZE=";
    };
    nav_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/common_interfaces-release.git";
      rev = "296c753ed61df7932e9ddc07b399d9eb2f29fd7b";
      hash = "sha256-fSQ9CHh8TU+8S9dZkjjwH6zbyKtOdq/auWMvP7vPEKs=";
    };
    navigation2 = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "308b590040ea50995bdec640cd53be42ff537ba0";
      hash = "sha256-2JLIL4TyOL7VyNmPxiJ54gBbXgWGrR3jb72PRvuc06k=";
    };
    neo_simulation2 = fetchgit {
      url = "https://github.com/ros2-gbp/neo_simulation2-release.git";
      rev = "c13b97f6ffbb4750704ec1811473e7b2a6489e57";
      hash = "sha256-RDPwVwW9QTfOVM8jYVgKbR+YmGDSXRq1Wz5minbCbD8=";
    };
    neobotix_usboard_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/astuff_sensor_msgs-release.git";
      rev = "4d80630c58872af31fe2bc99eedddb30fe53971b";
      hash = "sha256-dKwQGX4Fl0MagRbLNTnXobUGLXFfems8P6ArP7uljjs=";
    };
    network_bridge = fetchgit {
      url = "https://github.com/ros2-gbp/network_bridge-release.git";
      rev = "c625bfef13c67072a1a39f37fc3859d5f3cfb27b";
      hash = "sha256-Gfm+jv0L73LlZMytVTDOCyqyBGqctp6URffWJU/opmk=";
    };
    nlohmann_json_schema_validator_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/nlohmann_json_schema_validator_vendor-release.git";
      rev = "df4a8c1ea35981d6d29738b8415db11f55e501ef";
      hash = "sha256-pBIRF/MRTDv02vSUyB5ADB9Huv00MrRRhBElaBHa4ro=";
    };
    nmea_hardware_interface = fetchgit {
      url = "https://github.com/ros2-gbp/nmea_hardware_interface-release.git";
      rev = "f2654a1aa9f22cabae90bb75c31680c3271d3a1d";
      hash = "sha256-YibMQpu2E/mEdOx3OB8wbxnUVH/AukvJlND3wu5+oeE=";
    };
    nmea_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/nmea_msgs-release.git";
      rev = "b80bfbffa9a31b97cfa2952ce66e2758c00bd0ac";
      hash = "sha256-bLkC+tkA0cqER/1WKKbOYYYpOp96t3ZNxVS5VgFVYOE=";
    };
    nmea_navsat_driver = fetchgit {
      url = "https://github.com/ros2-gbp/nmea_navsat_driver-release.git";
      rev = "653584d333ea4290927125ab49c0927c52fe2c4b";
      hash = "sha256-Sk5PVLiGhnZlswzI74j4DqsxsA7icXEWu6Wb6JlbN4s=";
    };
    nodl_python = fetchgit {
      url = "https://github.com/ros2-gbp/nodl-release.git";
      rev = "7498d36b5e6a075fc2c2d02be23fcebd6428db13";
      hash = "sha256-rHEAtKnNTsXSB1UGfZYRfy3DQXrnGFWNntTfJyxEymc=";
    };
    nodl_to_policy = fetchgit {
      url = "https://github.com/ros2-gbp/nodl_to_policy-release.git";
      rev = "5cca667b9fbde1e0dfb2a9eca25035e45727fb29";
      hash = "sha256-e3+aKkyGXpBFCwulLKU8Tv8PSYEtqUTsp6iL1bE5W9g=";
    };
    novatel_gps_driver = fetchgit {
      url = "https://github.com/ros2-gbp/novatel_gps_driver-release.git";
      rev = "7580e71bbf15956d6866097fe57b8760dd838974";
      hash = "sha256-ySTUo1pz5bUi9Fxugmpv6utH9hUGIyQlng4HHGc08C0=";
    };
    novatel_gps_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/novatel_gps_driver-release.git";
      rev = "206e6e5aa21232efca280c704ab77e6b648de308";
      hash = "sha256-kjJ9vONE54WT4ZTXe3G+F0WieULuO/6mgMO3dAFCZGc=";
    };
    ntpd_driver = fetchgit {
      url = "https://github.com/ros2-gbp/ntpd_driver-release.git";
      rev = "88930151cfd996362a02a17d50c6a727638abe2e";
      hash = "sha256-Y3hISLK0EHzcJD4MrfgxDdmYH+cpgQTjbH3DCmbd0VE=";
    };
    ntrip_client = fetchgit {
      url = "https://github.com/ros2-gbp/ntrip_client-release.git";
      rev = "8b043737e69f30b6c448fc926d7d5192521f2eb1";
      hash = "sha256-mjgvoEVgfLQBBMLRNOu0vuIREhBqOf96dPTY2PVPqV0=";
    };
    ntrip_client_node = fetchgit {
      url = "https://github.com/ros2-gbp/ublox_dgnss-release.git";
      rev = "153c7bdbaf4ecee8decb754480f2443f2fd6b90a";
      hash = "sha256-TOR7OmySSgVy4hvBF0qqUpuD20RQeutyTK7ge2x5Cmk=";
    };
    object_recognition_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/object_recognition_msgs-release.git";
      rev = "413107d99caa9d8d477112ce00967a5e87913a2f";
      hash = "sha256-51GLrMSSWkdlTz5SBW9ImQilU5Rojo8emRiwZZtZtS0=";
    };
    octomap = fetchgit {
      url = "https://github.com/ros2-gbp/octomap-release.git";
      rev = "895657943d1ba59b781d1c1da097dab12568b016";
      hash = "sha256-kIh/20gkpK5nfe4T87wUfoECW0QNMp8f7M73+FJqmUE=";
    };
    octomap_mapping = fetchgit {
      url = "https://github.com/ros2-gbp/octomap_mapping-release.git";
      rev = "918cf6c3585bab48f747e6301424388cc394363b";
      hash = "sha256-b/eXXTaTKgI3DlT33nue0Yz0x52yTantz+VlRbfMyzI=";
    };
    octomap_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/octomap_msgs-release.git";
      rev = "39bbd140c83dca8c443e3eb536ac20fbf1321d3f";
      hash = "sha256-97tbZTVcZMc2CB2JAW6gn0/ABahvBbfiC3jpHDIJJ6I=";
    };
    octomap_ros = fetchgit {
      url = "https://github.com/ros2-gbp/octomap_ros-release.git";
      rev = "d6af3a1fb64520d96be193b149c9e36fd856f25b";
      hash = "sha256-O2xNJ++3IWtObx9amtFyVhAFiV1CMHlVbRq43ZawhE0=";
    };
    octomap_rviz_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/octomap_rviz_plugins-release.git";
      rev = "8dadcae1b5f69dd2291df40df5f949fb0a62b3b0";
      hash = "sha256-jYZZwVA/LByiBlY+KXs0ETYwsDlvq8yjFj31QoHrvM0=";
    };
    octomap_server = fetchgit {
      url = "https://github.com/ros2-gbp/octomap_mapping-release.git";
      rev = "d50f0f59e12b7ed1dd6a733a170fb1e5f494891a";
      hash = "sha256-qokWpx6Dn8+CCs6PtkaIlxri9WRcZqpqj34kbhZR1Cc=";
    };
    octovis = fetchgit {
      url = "https://github.com/ros2-gbp/octomap-release.git";
      rev = "5e9de4466ea20bce487a9d3a30a5294567904faa";
      hash = "sha256-TxMKU0t80X4leyZ3fdp6/PWCKK9UQhv7DITRuosz9Xw=";
    };
    odom_to_tf_ros2 = fetchgit {
      url = "https://github.com/ros2-gbp/odom_to_tf_ros2-release.git";
      rev = "cdb19962a1ac17d970b355a94691a32d54b87c35";
      hash = "sha256-0/u/YYeXujwGxRaQtoi8WfVuy0NFu558FY9r5etmJkY=";
    };
    odri_master_board_sdk = fetchgit {
      url = "https://github.com/ros2-gbp/odri_master_board_sdk-release.git";
      rev = "f9d88ebd513a52017ea5ed9940f9fbb6ab659608";
      hash = "sha256-hVYlw+fnKfoLeEwC3IzJJzmd2oDeFVlqPOm0WJxqJlg=";
    };
    ompl = fetchgit {
      url = "https://github.com/ros2-gbp/ompl-release.git";
      rev = "ddb73f12b5dce5dc95ccbc56c3350d6220bd1673";
      hash = "sha256-5BOfJbZfx2T6vZS5UOpQh9XueTRPtNBGmpHauSbvUxw=";
    };
    openeb_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/openeb_vendor-release.git";
      rev = "03acbfa67f03718ce8510153b12df88045ab2e0b";
      hash = "sha256-L3/O55ZRFe3I/pKMTbfJspHt1rNfrJnDD25x1g839lA=";
    };
    opennav_docking = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "440367280a139530d7367938dea6cfbb43e85df6";
      hash = "sha256-aa/5TrLWsEL5IKvujApGrTkKCcoMbcoYvXo5dCUS+P8=";
    };
    opennav_docking_bt = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "249530b0b54e64bd792e009da5240b952c2b8e22";
      hash = "sha256-foF7uopSkMczIRyZn4+9vEex97H3rI5gOPuUJbnr6E4=";
    };
    opennav_docking_core = fetchgit {
      url = "https://github.com/SteveMacenski/navigation2-release.git";
      rev = "60d49f10fc50268d784a15878700132abf8affea";
      hash = "sha256-elJcTijCzL4myAvXmtH6OJ+Gabr8OHPqBvNbTT4a2pY=";
    };
    openni2_camera = fetchgit {
      url = "https://github.com/ros2-gbp/openni2_camera-release.git";
      rev = "6666deff20156f0330cb511e3f348d9d66c6e812";
      hash = "sha256-d5AMUxLjzzeQo2bIW0srlsIPpCsd+kQ7/CUlXwoP4bE=";
    };
    openvdb_vendor = fetchgit {
      url = "https://github.com/SteveMacenski/spatio_temporal_voxel_layer-release.git";
      rev = "f904f841d9710a0eaf891985c5f39aa9fbb335dc";
      hash = "sha256-b8QXIgeHWV4KlUGjnR5jWv2Z4aqMZcBGpWcu27q8jGo=";
    };
    orocos_kdl_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/orocos_kdl_vendor-release.git";
      rev = "adca6201616af928533d70faea6042fe0239e898";
      hash = "sha256-LHj4WXKVrh8UKDJyfN3lT7gTuGCu0j5eAiN0bigrN2Q=";
    };
    ortools_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/ortools_vendor-release.git";
      rev = "87e2a82f7ef8300503e749a1647146e94baff921";
      hash = "sha256-yvm3NB4vC9QcixufG3FnSuEdpj75/eiLD2tzhd7gh5s=";
    };
    osqp_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/osqp_vendor-release.git";
      rev = "581a58b5467b5dcdca551e613b4bb1e4d47e30e0";
      hash = "sha256-I6jhthmRppj6fiDd1M+bbW8W/bsR5/0ur5UWcf4/ZGQ=";
    };
    osrf_pycommon = fetchgit {
      url = "https://github.com/ros2-gbp/osrf_pycommon-release.git";
      rev = "77786223feb1aa12ee889310a09c68c575612f29";
      hash = "sha256-r7SjLNdaRpcA2w4gbir3vE/3B7hy6aHv2HUw8wJi8OI=";
    };
    osrf_testing_tools_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/osrf_testing_tools_cpp-release.git";
      rev = "5ecc33aa92e5f47d455076ace8533a0145c88b54";
      hash = "sha256-Jh4CDB0AzEVKGiQHV2dLXeARF8QEd5zvYEMIHaIP+y8=";
    };
    ouster_ros = fetchgit {
      url = "https://github.com/ros2-gbp/ouster-ros-release.git";
      rev = "3dd5ba0f91e8c8a4126e676e4729b34cd5faa8c0";
      hash = "sha256-Opx0mFprXiIgty9hc+lRjuMa4S82Wsjq0scFsO4oWbs=";
    };
    ouster_sensor_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/ouster-ros-release.git";
      rev = "88c8ddb06249e2ea9d794edd07856dfb06d05ebd";
      hash = "sha256-fWka9voPQDtcLHrGdOeYmWY8U9UNQhMwTOlIudhLi28=";
    };
    ouxt_common = fetchgit {
      url = "https://github.com/ros2-gbp/ouxt_common-release.git";
      rev = "73ece7bb9cee3dc13c28efd24b80a0804f0a7f41";
      hash = "sha256-4nyGy7HVcpb5Cb/zBa9+kz8o7aXZyGqY2Fdy17Xd9ZY=";
    };
    ouxt_lint_common = fetchgit {
      url = "https://github.com/ros2-gbp/ouxt_common-release.git";
      rev = "9df07eae34ba86ab0378e1fbcd9c5aedea232362";
      hash = "sha256-CzvbzrJWL16B2/c63ryLS008hT4dSu50P4AhU+lsHpQ=";
    };
    pal_statistics = fetchgit {
      url = "https://github.com/ros2-gbp/pal_statistics-release.git";
      rev = "0327653fba3aff104f3471d72c47b99f1433367e";
      hash = "sha256-iuQqs6XBZ9nDhHWgffrR71peHVJVK9W4VBMRw/c3lm0=";
    };
    pal_statistics_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/pal_statistics-release.git";
      rev = "5c1dcf3225b3179bdc651e2ce8ad00e41d3c0301";
      hash = "sha256-8QGt/RdBUUO5MaWpDpaVy7xWuLywg94gm/Gmo1J8GiY=";
    };
    pangolin = fetchgit {
      url = "https://github.com/ros2-gbp/Pangolin-release.git";
      rev = "4a5f472c7c48e921bcce34c2d9ddad4f0e130970";
      hash = "sha256-VAE6VKDuVagjFsw1q6X/hpGUYbDSIx+Os9F+/76bo08=";
    };
    parameter_traits = fetchgit {
      url = "https://github.com/ros2-gbp/generate_parameter_library-release.git";
      rev = "0577dcddd4cb3493754104e11613a3cbf858f777";
      hash = "sha256-tbkbI2Z5iOPtVMur4gJQVJQ+af59uhEZt7UNahBZ01I=";
    };
    pcl_conversions = fetchgit {
      url = "https://github.com/ros2-gbp/perception_pcl-release.git";
      rev = "84489a5fbd00fae46cebabf8498b8db56f85ad99";
      hash = "sha256-JMlxHj6XMHqOVfS/n5Ir4meRb4o0pK3VoeE0GYS69FI=";
    };
    pcl_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/pcl_msgs-release.git";
      rev = "7dc61b313025de201d4d87702c28542f88d4a2ac";
      hash = "sha256-YdspDlpwU8CIVBKEa3kLCnDsR3MsuehC9zuvXtAnt4w=";
    };
    pcl_ros = fetchgit {
      url = "https://github.com/ros2-gbp/perception_pcl-release.git";
      rev = "4200ad2cd0685c607ff4c420e6825f5abeb5457c";
      hash = "sha256-JYaF0rM0jptFPpMnfXIyQDMAwFXoG/ULAVW/d4/CVPs=";
    };
    pendulum_control = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "7aebd5e6f58a7c2fa5c0f81a3d77171d5da4aa23";
      hash = "sha256-cuQxIxEwdu5dmh4GXA2yYufTaxS3rMC8GT3SaduQBXs=";
    };
    pendulum_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "feb51dfce9be20ca78e706894a6d81bf29a4f116";
      hash = "sha256-mywKB3uFB5Pi+7HIUy7am5JdzrkF+Sg8WQzsQvUrptU=";
    };
    perception = fetchgit {
      url = "https://github.com/ros2-gbp/variants-release.git";
      rev = "3e52d9c0398d0dc8fd4c9fb231aa929fcd3b0a27";
      hash = "sha256-dm1psyuV0pFw4lLrVBcz/ElZ/T+49Lqaf1kDqahOvLs=";
    };
    perception_pcl = fetchgit {
      url = "https://github.com/ros2-gbp/perception_pcl-release.git";
      rev = "95b50e2aced7d1d6c743f13b7debe0960e9285a8";
      hash = "sha256-P/Qu0+b3vRkm+jivWMUPgmcBsnB+nSLxDlJDEOmtuCQ=";
    };
    performance_test = fetchgit {
      url = "https://github.com/ros2-gbp/performance_test-release.git";
      rev = "be48f37e34cf496f4c557b712c3fe4c7491783d5";
      hash = "sha256-wlQOogTIJm3/yPmuBAhSGRXFNiy0UAJyPZfWK+NgsyQ=";
    };
    performance_test_fixture = fetchgit {
      url = "https://github.com/ros2-gbp/performance_test_fixture-release.git";
      rev = "b459a303e469ad6a63549350dcf2102772cd0db9";
      hash = "sha256-NAF3nP4D9c9kOls8XwBPUCzqZS/44+LrwmEMy1oZrP0=";
    };
    phidgets_accelerometer = fetchgit {
      url = "https://github.com/ros2-gbp/phidgets_drivers-release.git";
      rev = "3b7df33f24230edad5d18ca212e18311d743fc06";
      hash = "sha256-n67meToobs7UjIZD2wOckhr3agFm7lVHWykPlZdb3zA=";
    };
    phidgets_analog_inputs = fetchgit {
      url = "https://github.com/ros2-gbp/phidgets_drivers-release.git";
      rev = "77dbe128a6d1d7999efd1d539305932e6b91ec80";
      hash = "sha256-cMwYeNmiFnip2gj4Ih+D+arDK2cxYuKHts79lM/mIVg=";
    };
    phidgets_analog_outputs = fetchgit {
      url = "https://github.com/ros2-gbp/phidgets_drivers-release.git";
      rev = "f515b9e4933159442a9fc7e3004abd5b1896f1eb";
      hash = "sha256-xi78W37HY59f/oeBUwFQpdqmfHhjmVubarF16PXOWiM=";
    };
    phidgets_api = fetchgit {
      url = "https://github.com/ros2-gbp/phidgets_drivers-release.git";
      rev = "d8b5d6ddafdaa270c0181fb2cb2ede7f133683b4";
      hash = "sha256-yApWn4EjkZOKG71s1bRI+kpC+mFXm6uJk5hROmuXNFc=";
    };
    phidgets_digital_inputs = fetchgit {
      url = "https://github.com/ros2-gbp/phidgets_drivers-release.git";
      rev = "28b6e1c5cba7484cc3c576b6ea9baaa9fe9e7be5";
      hash = "sha256-taMmD3Mb/CxQDtrkT5cyYYpsjvqCfhPtQH88w96/tto=";
    };
    phidgets_digital_outputs = fetchgit {
      url = "https://github.com/ros2-gbp/phidgets_drivers-release.git";
      rev = "2ead02e0d424b0ae8a26ef0a84d165fdfc8825ae";
      hash = "sha256-KupijHg2trBRdHREmgsrAmrCxE0f+hnvA6BJOjIZ1Yc=";
    };
    phidgets_drivers = fetchgit {
      url = "https://github.com/ros2-gbp/phidgets_drivers-release.git";
      rev = "5d0d67f72fb6b3780e8f040dcb825140a3dc087e";
      hash = "sha256-rz3bXQCzLS7qlt76ncNcmGDBSviM4KOAU8fEjNGUoXo=";
    };
    phidgets_gyroscope = fetchgit {
      url = "https://github.com/ros2-gbp/phidgets_drivers-release.git";
      rev = "72021452c01dbeab059587f5315966915cd0d4af";
      hash = "sha256-umLPYnGNeRNHzYU1z5tXxDJe/QFYAnmXCCPxLFH4E5U=";
    };
    phidgets_high_speed_encoder = fetchgit {
      url = "https://github.com/ros2-gbp/phidgets_drivers-release.git";
      rev = "a4e500c0e6d045bebe29ff6b1a27ca5159d4e5ad";
      hash = "sha256-+tQ+vw/pWTXBDexHIJi6YokVycAl8GdJSxKQ6Lxj39Y=";
    };
    phidgets_ik = fetchgit {
      url = "https://github.com/ros2-gbp/phidgets_drivers-release.git";
      rev = "1494b1d4035ef6de251e503e91dd1b7b9b0907c7";
      hash = "sha256-8IA8dKcL9AG0xtXDPn5m0P13buJaZryijdm8U9hjXWc=";
    };
    phidgets_magnetometer = fetchgit {
      url = "https://github.com/ros2-gbp/phidgets_drivers-release.git";
      rev = "c3be132b5cbcf62e2eabc71c39be8314811d9c9a";
      hash = "sha256-3Ggm9kmzc70h+9ehA3T5rBXPWdUFeWN5ptgZJMeh+sk=";
    };
    phidgets_motors = fetchgit {
      url = "https://github.com/ros2-gbp/phidgets_drivers-release.git";
      rev = "afcc4b0c5a39676cf7c78dd6670bbda44a16740f";
      hash = "sha256-eF/wWphPu1aKOeoNItNTNLRGVPMMHtxzvEKCkgGwL+o=";
    };
    phidgets_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/phidgets_drivers-release.git";
      rev = "5362a78082f7eee98478e8b0eeb8f85041be1202";
      hash = "sha256-IenMv0kesMXll/udluqu/FKfShQu8sd0QaGFr+rW4/E=";
    };
    phidgets_spatial = fetchgit {
      url = "https://github.com/ros2-gbp/phidgets_drivers-release.git";
      rev = "089fa8bf3aade8c1a78df5c040bffa2c4ba35742";
      hash = "sha256-My63osp4yOvSPXWqo60ZVvGbG6cF/ApGd5AegiOUg/M=";
    };
    phidgets_temperature = fetchgit {
      url = "https://github.com/ros2-gbp/phidgets_drivers-release.git";
      rev = "727c5532a02296d0807b6c498805a38de9d3af75";
      hash = "sha256-AUCf5/QLj4oi3q8yB/SIYcdPJoog9kG0irWiQraVKgQ=";
    };
    pick_ik = fetchgit {
      url = "https://github.com/ros2-gbp/pick_ik-release.git";
      rev = "6dd0fb91beb17489e4511a811c4d55c6351e3eea";
      hash = "sha256-TKEKv9lclKHQqUyAVLAw2f8hI+p0lV4m8xLdNCeqBYA=";
    };
    picknik_ament_copyright = fetchgit {
      url = "https://github.com/ros2-gbp/picknik_ament_copyright-release.git";
      rev = "6cd350c41214ab5be92012ac5b0b8bdf2f35c3df";
      hash = "sha256-zw0URrOQbcL7fo+BgOUHgI0yqf0DDRVGnOOxbJmog48=";
    };
    picknik_reset_fault_controller = fetchgit {
      url = "https://github.com/ros2-gbp/picknik_controllers-release.git";
      rev = "9e3a77bed62ad2d5b25641c7e8347d58db308aca";
      hash = "sha256-1YeT/ItbimfyeiruRaU6K0IcXsIuJworLhzpN4VczDs=";
    };
    picknik_twist_controller = fetchgit {
      url = "https://github.com/ros2-gbp/picknik_controllers-release.git";
      rev = "c804147e12cf217d0904037f9dcbf6a71df35071";
      hash = "sha256-y6aZb1J/2JpuY/SFhUMgaDqYvXU7KiQYiETGOGIYF3I=";
    };
    pid_controller = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "e327db19256c8ebf338f7cc1749b6add177705e2";
      hash = "sha256-2tS1JIwiYolLJBTh3qOmBzLtkojmPlGZo9lgn0SPBzs=";
    };
    pilz_industrial_motion_planner = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "7f54e1e6587ec32e9130546eb9863c38abfbf155";
      hash = "sha256-xoXukfuBXUzVY0X/2RHTDXrfEguOhOW+gLlVHHxi76Y=";
    };
    pilz_industrial_motion_planner_testutils = fetchgit {
      url = "https://github.com/ros2-gbp/moveit2-release.git";
      rev = "e37a5de225970f5c0d697690238624890d61eade";
      hash = "sha256-7WiArC/gMWnzY2VBbU2qqYwXwxvBo7+1yo9oyX/SB0U=";
    };
    pinocchio = fetchgit {
      url = "https://github.com/ros2-gbp/pinocchio-release.git";
      rev = "4ece81b852e001508a82e42194a34de911b1db5b";
      hash = "sha256-YFDwdoORgCb/x5PR//6nJtG6NghoeKsE60VEwuNP/ik=";
    };
    plotjuggler = fetchgit {
      url = "https://github.com/ros2-gbp/plotjuggler-release.git";
      rev = "243d8c1cf472c0d6cac26cc2ab34fad9f2bb0622";
      hash = "sha256-btYnAV/G2I+WURDeN8C6WfMHh79M4e4l5Ix9Zx7srrs=";
    };
    plotjuggler_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/plotjuggler_msgs-release.git";
      rev = "5edb7b4a405975459292f0410ccdff2e9f11982d";
      hash = "sha256-Lu4ZRsDpvbS2QzbjWOL23H8lsKRSTPGe6MgiCaUedO4=";
    };
    plotjuggler_ros = fetchgit {
      url = "https://github.com/ros2-gbp/plotjuggler-ros-plugins-release.git";
      rev = "e31f1220d72fc2f17ef195073827140644390fed";
      hash = "sha256-ulay40u10VuTXLPe/c8xBf5qxL1TR6D03Fb1uRYaoAw=";
    };
    pluginlib = fetchgit {
      url = "https://github.com/ros2-gbp/pluginlib-release.git";
      rev = "e8b556270ca67d5640214fb34d895a2ff5081689";
      hash = "sha256-ZIVIHw0nimqFqss8537p3ec6RbiUeWpREml5RkLqwdg=";
    };
    point_cloud_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/point_cloud_transport_plugins-release.git";
      rev = "b2531ec28eb8206681a8e3948c828d95d24d0191";
      hash = "sha256-ruPI5xWtceZHkhQlA0zRPEik1GiJIJNLL4jWSl6/LK8=";
    };
    point_cloud_msg_wrapper = fetchgit {
      url = "https://github.com/ros2-gbp/point_cloud_msg_wrapper-release.git";
      rev = "fb047463b9aa30d35af541c7fa4472b2f01c3b1b";
      hash = "sha256-LiHXg+Jj7fMDItxqFAz8F5On1mitqVf18p4luIzXtWk=";
    };
    point_cloud_transport = fetchgit {
      url = "https://github.com/ros2-gbp/point_cloud_transport-release.git";
      rev = "452aa97f48936798370822d1ac54ba8fd430050a";
      hash = "sha256-LXXo41jU5dP7mjE6H0OcgvjAAylkW4eC+cV9YE82TF0=";
    };
    point_cloud_transport_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/point_cloud_transport_plugins-release.git";
      rev = "797f716f465af208d6c126a912ddb380e372b3c7";
      hash = "sha256-lqeOuoqjhvJnGTFuO9VEnPfroS+x4IC/XGicW8HA0Zw=";
    };
    point_cloud_transport_py = fetchgit {
      url = "https://github.com/ros2-gbp/point_cloud_transport-release.git";
      rev = "866093b8df9dd575ced356edd091f0b2e8f2df51";
      hash = "sha256-PfnHWd9RP3pnxe3ZTDPrDrNyLUzftfo1k8falKmeS2E=";
    };
    point_cloud_transport_tutorial = fetchgit {
      url = "https://github.com/ros2-gbp/point_cloud_transport_tutorial-release.git";
      rev = "ccd2158c015825d178014cf7a96d1a6e48165bd2";
      hash = "sha256-buQXTqTqhIZJ68B+sbZ3lVovLVRVKBrL7yCCoQygSc8=";
    };
    pointcloud_to_laserscan = fetchgit {
      url = "https://github.com/ros2-gbp/pointcloud_to_laserscan-release.git";
      rev = "d19872adb793dfa32827e6e782be47947070a30a";
      hash = "sha256-qr3WavBoAsGaLii5dCMmNk764fMGdISwf7EAd5q14MQ=";
    };
    polygon_demos = fetchgit {
      url = "https://github.com/ros2-gbp/polygon_ros-release.git";
      rev = "6376a68a6d934f8f5482598ba2a38f5179cce13b";
      hash = "sha256-x70C4EJov4YXvVoslWgtJitf3qqvczBaIjNp7jwFOYk=";
    };
    polygon_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/polygon_ros-release.git";
      rev = "256eed28fc4f343a85fb0723794ece19e05313bd";
      hash = "sha256-6gLLltnSdYNP7QkYUOAj9bdphjw1W6jDytYsbJL7DA4=";
    };
    polygon_rviz_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/polygon_ros-release.git";
      rev = "0d1284be8b4cd9977d6cbb8f4432ce8ad065a77e";
      hash = "sha256-KMmv93mqtxZNcLSOVHhFfJMCuQI8fP6NKp7mEnY5O18=";
    };
    polygon_utils = fetchgit {
      url = "https://github.com/ros2-gbp/polygon_ros-release.git";
      rev = "622f2fd1fd527b46fb8e8294fa028901f57a32dd";
      hash = "sha256-0deQK1zVECzgKwBQrLq3CbvDnZaRlnSpT1XOqhV1h58=";
    };
    pose_cov_ops = fetchgit {
      url = "https://github.com/ros2-gbp/pose_cov_ops-release.git";
      rev = "4b7549be273bc3571b58178b4c7e6717baac519a";
      hash = "sha256-dB+me1aSCzx1zSg6mLTc191a3Ur+9zuYbt4JmcnxCcY=";
    };
    position_controllers = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "f806bc676099c5d63f63b3d0141836622fb18f72";
      hash = "sha256-+gWwpELvpnuFWnu4JT0zxRyhbnzF7387gfxeR2GhRU8=";
    };
    proxsuite = fetchgit {
      url = "https://github.com/ros2-gbp/proxsuite-release.git";
      rev = "b1b7dbc9106d896b347c4d5db9d01de37e0c2a2c";
      hash = "sha256-Qfv+vWLLcZfUtZpRYZaoL3rQ3ibCYBKQcAkpFP0YdWI=";
    };
    py_binding_tools = fetchgit {
      url = "https://github.com/ros-gbp/py_binding_tools-release.git";
      rev = "6bbf5eea730e839c4edc430134463a29759f9a99";
      hash = "sha256-ptJcdfTt1QQXFPCJ4R1QqIIcwEOHo+ay+T7OJqwDAYo=";
    };
    py_trees = fetchgit {
      url = "https://github.com/ros2-gbp/py_trees-release.git";
      rev = "6aa58f8414fb672071074c6d4621c3ca8968488f";
      hash = "sha256-D4D4KgMpC2gXiPRmmTMkb2IW5rzxXUbEUFu5RVEnaqc=";
    };
    py_trees_js = fetchgit {
      url = "https://github.com/ros2-gbp/py_trees_js-release.git";
      rev = "ecad3cd6b72e461cf22b476a470920dae68e82f1";
      hash = "sha256-F1WhgnqYpmF486ZKeT63iO5+AVvNSxET33OZrdH0/88=";
    };
    py_trees_ros = fetchgit {
      url = "https://github.com/ros2-gbp/py_trees_ros-release.git";
      rev = "0f8245cb708e3fc07f8209f20b16fae3ca339e4a";
      hash = "sha256-bJ7EieVdM2WQ6yRmsyC+RzLbx2zvlqBoVCWjuBVF8Yc=";
    };
    py_trees_ros_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/py_trees_ros_interfaces-release.git";
      rev = "461e14c922c6c5c08dac7346b43608f832d30045";
      hash = "sha256-QrixpzDzAj86KcSWBgYVI0CjrjuAtdFy7bMlEJgweaw=";
    };
    pybind11_json_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/pybind11_json_vendor-release.git";
      rev = "21bd9e6509c1d7e65a2876d888ad8a7990a51208";
      hash = "sha256-MRTBHHIoxucf4OASlszDZ3LuA0He/SRhobqoNsA8vDo=";
    };
    pybind11_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/pybind11_vendor-release.git";
      rev = "6551cb9a99f0e0bb3666b9a9d3b2bda0b598c167";
      hash = "sha256-IqvDvVq5oLGYddeKV7uYtjHnf3SS24Ji+DO4Wua7xbU=";
    };
    python_cmake_module = fetchgit {
      url = "https://github.com/ros2-gbp/python_cmake_module-release.git";
      rev = "52f6dbc990f7a89ceb09ab0cc394cc7214138f62";
      hash = "sha256-Klye1NN6+5ap5R+UqUk2oAwG5lScU4OPpYX+nALlnno=";
    };
    python_orocos_kdl_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/orocos_kdl_vendor-release.git";
      rev = "d1d43bdb1c1352d9e431c857e7bc6537c2ff680b";
      hash = "sha256-vl1eKkJp/P4mQsOWDBIWnCOpp/m2LB18yxZI9GWgaYY=";
    };
    python_qt_binding = fetchgit {
      url = "https://github.com/ros2-gbp/python_qt_binding-release.git";
      rev = "68ffe1fac31519713735be637c6c3280455dbc2a";
      hash = "sha256-6O8drSOVJ+eJfYkt/pqnGBJYqAulmgEjbElU4k8h68M=";
    };
    qpoases_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/qpoases_vendor-release.git";
      rev = "b00c8ebcfedecf8b34d02b6e9ce45d641efc43e8";
      hash = "sha256-jUSNiB8b0P8JHYXdXeKMs5Ucxjk+fhbPqxcJnD2GIQ4=";
    };
    qt_dotgraph = fetchgit {
      url = "https://github.com/ros2-gbp/qt_gui_core-release.git";
      rev = "f4dc66c120b1196c813ea3c91f55e17c7565ff86";
      hash = "sha256-neIiFXuQRDJ4lsjRo1j9tUX/QwS8Qsz2SSvk8AaL3yE=";
    };
    qt_gui = fetchgit {
      url = "https://github.com/ros2-gbp/qt_gui_core-release.git";
      rev = "f7a152206f14b0d5e5120c41677a073aad67797b";
      hash = "sha256-YuRclZVVR6g6KaGhlNV5lAJE4+tZoD2yCApPKtlMw5w=";
    };
    qt_gui_app = fetchgit {
      url = "https://github.com/ros2-gbp/qt_gui_core-release.git";
      rev = "3930bb62257a42688018d6f9c6e445fc670f1946";
      hash = "sha256-OU68D6ke+OYEcT00UuAmVxqOKUeC5NEf4XwD7qMKLMI=";
    };
    qt_gui_core = fetchgit {
      url = "https://github.com/ros2-gbp/qt_gui_core-release.git";
      rev = "0d3d2456d64c9eae29bdacfb5c196129db530563";
      hash = "sha256-MY4qrGTr1ir5q/XdggeSBKaCGFXruCU/sFvoT1MNtQc=";
    };
    qt_gui_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/qt_gui_core-release.git";
      rev = "08b713a20f93a00a1453852534c6cf503140913b";
      hash = "sha256-MErOrE3H9r3HGOJfiShwraVUJ2mFRRNQvwroqac6QmE=";
    };
    qt_gui_py_common = fetchgit {
      url = "https://github.com/ros2-gbp/qt_gui_core-release.git";
      rev = "fed5071489e0c1bc1ad02393a2a596636f9c834e";
      hash = "sha256-fr/eKfgCisQ89QrL92zKHDa6k20UvCg4Zhr3pYFz6ug=";
    };
    quality_of_service_demo_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "f852dcbe304b496852fef35c01091e9a1ea98874";
      hash = "sha256-eV322lS9mlCw4J9vxnObcwuusY4ldrt84WgCVkFjcAI=";
    };
    quality_of_service_demo_py = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "7660946e3fdcaa4bc82fb2749810ea5351459c29";
      hash = "sha256-DmEwJUW5s0CWgLCobzk8jZHAJT0hfGm41Uy6Djg/3Sg=";
    };
    quaternion_operation = fetchgit {
      url = "https://github.com/ros2-gbp/quaternion_operation-release.git";
      rev = "5caa679fcf2a9098a3c9fb91fe47c62b4006baf6";
      hash = "sha256-EOoZrowJNVGtJNutD+5WlSgVWbmOGlzSJyvsALmfji8=";
    };
    r2r_spl_7 = fetchgit {
      url = "https://github.com/ros2-gbp/r2r_spl-release.git";
      rev = "f7a4640e5235a1993aa0a8033747b281187f0f46";
      hash = "sha256-KqN+JK6GIZritk8/5cBigl1cu2sdMFz9nP3mrSQOsro=";
    };
    radar_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/radar_msgs-release.git";
      rev = "6c0b968beda9b9ca9623b7b2bea09a66ecf9f8de";
      hash = "sha256-HO0hAoc99su0O3J40Mywg7/qtbQJof/b5/wwBnx6xbI=";
    };
    random_numbers = fetchgit {
      url = "https://github.com/ros2-gbp/random_numbers-release.git";
      rev = "bc34cb9eb07ea35f6aa223286de5e1bb40c689af";
      hash = "sha256-hQN9n+tLK1rKA+wXOXW/TfT4RzrXxvaIfDlzgV+LJnU=";
    };
    range_sensor_broadcaster = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "272c63445c17b75a4c0846dfe3a52a8c8bb5a8a2";
      hash = "sha256-DHQB6mEaPtQ8dP6xRC2rQqwy5SPR5pKEjMGRaV8apyo=";
    };
    rc_common_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rc_common_msgs_ros2-release.git";
      rev = "a1a39a8b05b4be20838bc8acec4af66a3f0d90dd";
      hash = "sha256-/ApqcAoxtUu0eHcF5gxxFhroOIdz457iCAONfAC2xxQ=";
    };
    rc_dynamics_api = fetchgit {
      url = "https://github.com/ros2-gbp/rc_dynamics_api-release.git";
      rev = "adad10c595a8e0dae8721169740ac3480df23496";
      hash = "sha256-o9jsHD+cly1o6EPT+4dJfJDATxJF+nGdtaPKEOT6ZXo=";
    };
    rc_genicam_api = fetchgit {
      url = "https://github.com/ros2-gbp/rc_genicam_api-release.git";
      rev = "57bf6c445677c596d425b929c0f82266f98c1cda";
      hash = "sha256-bp8a9UBIdmzBsLXwZO86DD8/PxRp2Bl0HRWOS+fWgOg=";
    };
    rc_genicam_driver = fetchgit {
      url = "https://github.com/ros2-gbp/rc_genicam_driver_ros2-release.git";
      rev = "d56cbe21b74232fd2602bc2cc2921c365d034321";
      hash = "sha256-DXGpRFliAauxi+eYKJddSkZfNo9jJ/5UsxBtJEkSdCs=";
    };
    rc_reason_clients = fetchgit {
      url = "https://github.com/ros2-gbp/rc_reason_clients-release.git";
      rev = "e8e4ce1459a8bae56c3865eaa512dbf4ee360532";
      hash = "sha256-nrDAYPBtkbSi1QAZJHR9jYhMnPLwemNMDxIzccehO1o=";
    };
    rc_reason_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rc_reason_clients-release.git";
      rev = "c2bfd85279bd8034d4fd68c8b63394160884d4d2";
      hash = "sha256-4UWrVAe/idz19Rp3JIISd3dreXqEZKnY2FgbPcNPfqQ=";
    };
    rcdiscover = fetchgit {
      url = "https://github.com/ros2-gbp/rcdiscover-release.git";
      rev = "f1d160f25f0eca51cf73316956d15bef7df6bcce";
      hash = "sha256-leXJVw7Yx8SeMv0jUFtQmpFCpDaJkvd7U6AqjpdLEOE=";
    };
    rcgcd_spl_14 = fetchgit {
      url = "https://github.com/ros2-gbp/game_controller_spl-release.git";
      rev = "0d610deaef87d5251720143fcf6e39e29043c610";
      hash = "sha256-naRnWiBaNmsQqaucIPL28thbmjie8mBvwk3zLJibvQA=";
    };
    rcgcd_spl_14_conversion = fetchgit {
      url = "https://github.com/ros2-gbp/game_controller_spl-release.git";
      rev = "29079b53aeb5d589b4bdd5e36fc343c79b7ac4cf";
      hash = "sha256-vEiB03hHosdjl+RcKMvGYxd7RnFNFQcB7pEearKQX0s=";
    };
    rcgcrd_spl_4 = fetchgit {
      url = "https://github.com/ros2-gbp/game_controller_spl-release.git";
      rev = "1a4163d230639126421ebff6381f7887eba98caa";
      hash = "sha256-du68Eq0gNlBSz8RHUaKfCmnCe4dMuBRNBVY/Xr+/+cU=";
    };
    rcgcrd_spl_4_conversion = fetchgit {
      url = "https://github.com/ros2-gbp/game_controller_spl-release.git";
      rev = "1d86fdac4ca8359ad861ed1eff4b9382ca2bac77";
      hash = "sha256-K6SsOmDF2Dk83+uU8ncpvCemrAtVafqT2p8nJLEgu44=";
    };
    rcl = fetchgit {
      url = "https://github.com/ros2-gbp/rcl-release.git";
      rev = "05ba0fa95f087ea043099d7f4c04ed051cf55d3a";
      hash = "sha256-l9mj//2/7axiyNylbp9bDWkgjlPP59Ag8GRijHENLeY=";
    };
    rcl_action = fetchgit {
      url = "https://github.com/ros2-gbp/rcl-release.git";
      rev = "0b1beda4ea6a470b5070f8b82ee6687118cf71f2";
      hash = "sha256-1VxuWEpSDQzVfy3ZbKfYArxRaFr7BpDiAqdXGr/AWis=";
    };
    rcl_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/rcl_interfaces-release.git";
      rev = "9c7b19dc93631608bcd38604143175a5d63e5e51";
      hash = "sha256-7FNEn996pHXba3q0kcEYwzrOMJcdzGOrgC5MQNqKIPA=";
    };
    rcl_lifecycle = fetchgit {
      url = "https://github.com/ros2-gbp/rcl-release.git";
      rev = "e332623fb648cee51d1e52476fe92c9f8eed3f84";
      hash = "sha256-Btrg85RoT6vL1w8Y+4+YKQcVkdyA6xia7rGbLNItxbo=";
    };
    rcl_logging_interface = fetchgit {
      url = "https://github.com/ros2-gbp/rcl_logging-release.git";
      rev = "0f02a66b68786b02e070f4e4a90d73f26f115413";
      hash = "sha256-r7WviMcNX31Wz2qwm6JYMErRwdpCCnHYKsXyqBxrTrc=";
    };
    rcl_logging_noop = fetchgit {
      url = "https://github.com/ros2-gbp/rcl_logging-release.git";
      rev = "423b070d9aea34e99dacd881947dfdbeb124c159";
      hash = "sha256-XpmOGX13xXUHBOzLXAuAXWun1j/BzpliZo8V4xX5T94=";
    };
    rcl_logging_spdlog = fetchgit {
      url = "https://github.com/ros2-gbp/rcl_logging-release.git";
      rev = "5648031902b5d7055b6bf46596cf424912d86a3e";
      hash = "sha256-1G9tkqVueqbs4DvEFCJyRqYkNap6ekz9JUZzdLt4emw=";
    };
    rcl_yaml_param_parser = fetchgit {
      url = "https://github.com/ros2-gbp/rcl-release.git";
      rev = "24461844ed9a5e1772ef5988261c90b0a2bf9493";
      hash = "sha256-/70LR/9CDjA2j5oY1oMNR6RmH3dIlPpTrDOsj9AyMmI=";
    };
    rclc = fetchgit {
      url = "https://github.com/ros2-gbp/rclc-release.git";
      rev = "b34236539056dee4ec3a309c0c3a4c8db6ebd383";
      hash = "sha256-A49/yUw6gCxZpDhW8qijU7K6AFuP1R5dzLhqDvefndA=";
    };
    rclc_examples = fetchgit {
      url = "https://github.com/ros2-gbp/rclc-release.git";
      rev = "c337bef2b8518d838a103f525de33bab614c50ab";
      hash = "sha256-oGcnLCr8skjywWIh93EYKzbeJaXxJpnHiJB2rbxQjSI=";
    };
    rclc_lifecycle = fetchgit {
      url = "https://github.com/ros2-gbp/rclc-release.git";
      rev = "63cb85126fa62f19193ad312fb39b8f15ab223c1";
      hash = "sha256-S6rPft/BC8XXLe0C9UCT8oPlYVqM0Vvvoj1MqVoApNQ=";
    };
    rclc_parameter = fetchgit {
      url = "https://github.com/ros2-gbp/rclc-release.git";
      rev = "75d6c45f9192e3d14b1b982bf9c25d70e42729e5";
      hash = "sha256-A93x6TfzcxJIYgtjzdk6WxPcZgdk96frAyeKMnqXQKQ=";
    };
    rclcpp = fetchgit {
      url = "https://github.com/ros2-gbp/rclcpp-release.git";
      rev = "1c97a6b4ae76f18f30cf2c354ea6d525c498f5c8";
      hash = "sha256-kHVqYs0l7FaLgvlDHIAzDR5nSPe/bjpZvNCnscPwPvs=";
    };
    rclcpp_action = fetchgit {
      url = "https://github.com/ros2-gbp/rclcpp-release.git";
      rev = "46881c0ad91db1d4deb5fedca2fe42855a3ef05d";
      hash = "sha256-XRVxWyxvfoDWCo/bAbinc90OQhtQD+JmJ7wt0jbIqcY=";
    };
    rclcpp_cascade_lifecycle = fetchgit {
      url = "https://github.com/ros2-gbp/cascade_lifecycle-release.git";
      rev = "c6b311bca5f6bbaba2fd5f5f98c68f26e3594638";
      hash = "sha256-tJ+QyrBJij5KGBc/C7qOJIbVs9xcT5mG8e6fFABi1wI=";
    };
    rclcpp_components = fetchgit {
      url = "https://github.com/ros2-gbp/rclcpp-release.git";
      rev = "dca0791271f0e50265edb89aca9987deaff140f8";
      hash = "sha256-yaaoRkTV+EOcYi4X2H8EMnfxvQiqgp18u8Bu0TY+cSU=";
    };
    rclcpp_lifecycle = fetchgit {
      url = "https://github.com/ros2-gbp/rclcpp-release.git";
      rev = "c587a31987d9eb3ba421f441953b3d5e8b86a657";
      hash = "sha256-1GvWpAeLggOQWbWe5pymJEtjnvdRCYs53OwwGv+dGvQ=";
    };
    rclpy = fetchgit {
      url = "https://github.com/ros2-gbp/rclpy-release.git";
      rev = "05f2d82710ff0e7ed52b15f8353443df442dfac0";
      hash = "sha256-BSf+cbcOUVpJK5gtEz0d4ymuruqqFGkmdNy6K+j5emY=";
    };
    rclpy_message_converter = fetchgit {
      url = "https://github.com/ros2-gbp/rospy_message_converter-release.git";
      rev = "5e7b6eadffc924bce02c147aaee115e21b564fc8";
      hash = "sha256-4HeOI1VnkkBwlxa0SlJMAGbmV5bMUIvxslRecDwZm04=";
    };
    rclpy_message_converter_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rospy_message_converter-release.git";
      rev = "68ed7f2459595f5a2b9727448de4484a0452e459";
      hash = "sha256-vWAM+JjdKQvohD6qBeuCVmL+zcOgq1szEkS8jYnSPkw=";
    };
    rcpputils = fetchgit {
      url = "https://github.com/ros2-gbp/rcpputils-release.git";
      rev = "114da6d318c5254ae3ddad8eb29006411796ca8b";
      hash = "sha256-A4fgkUrENQpRAgy7AiiW8WK1huoOIvTvoYr4bKTwQK0=";
    };
    rcss3d_agent = fetchgit {
      url = "https://github.com/ros2-gbp/rcss3d_agent-release.git";
      rev = "df2d12c89346565c8f54bc45259cb0c19d54c820";
      hash = "sha256-U3T+91EoVbYapHoNLcIBJqlUz/YI9BB5jc7jAEpVpZw=";
    };
    rcss3d_agent_basic = fetchgit {
      url = "https://github.com/ros2-gbp/rcss3d_agent-release.git";
      rev = "eca722d4386f3ff65accb38b49054b6c848b9c53";
      hash = "sha256-nDJGmIM8WHHjNPs3KRLNXOf8EM2VIwF9YZX1CVE662Q=";
    };
    rcss3d_agent_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rcss3d_agent-release.git";
      rev = "a19aa68dfd8b67bf49b04821bbb990650ebff241";
      hash = "sha256-AN/eyLroQDeZjI/JosPYI5tZHhbJn0jP1d8D3wjuN54=";
    };
    rcss3d_agent_msgs_to_soccer_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/rcss3d_agent-release.git";
      rev = "db5b91ed8ecfb5f0f7ac66b88749763d3c33d0ad";
      hash = "sha256-2bEjbfPy02UiTflYzF8AZb2bjZB/Xg1iHUC0deLs7UQ=";
    };
    rcss3d_nao = fetchgit {
      url = "https://github.com/ros2-gbp/rcss3d_nao-release.git";
      rev = "5e5fbf6b7aca0c8cb593e6b23ea545b41323e774";
      hash = "sha256-gDCJv4U5VGvPzE6+9SysE6xYUMNx7KGRawSEwZp7sVM=";
    };
    rcutils = fetchgit {
      url = "https://github.com/ros2-gbp/rcutils-release.git";
      rev = "ce5771d365180496a672d93826664df83baa98ae";
      hash = "sha256-lwEyd62jInhq9Ln3NiUEt6sB9cggMg6KqszeaVL2/EA=";
    };
    realsense2_camera = fetchgit {
      url = "https://github.com/IntelRealSense/realsense-ros-release.git";
      rev = "7acfab07cc185dbc1feb9a98c38c77a81d45f558";
      hash = "sha256-HLMJvHtjNkhBqaTH95BraW0/xbrTUIcDdAE/18aDBWw=";
    };
    realsense2_camera_msgs = fetchgit {
      url = "https://github.com/IntelRealSense/realsense-ros-release.git";
      rev = "def1802d06398e80848aea8958ce2321d1c439d1";
      hash = "sha256-uL0BZSHsWOr4JF0PxcIJa6XvMAWzM+MVRW7SacxABH4=";
    };
    realsense2_description = fetchgit {
      url = "https://github.com/IntelRealSense/realsense-ros-release.git";
      rev = "dbdca2538210cac2b854291ba47f099df80224d9";
      hash = "sha256-Er8wmje8+L8O8X37B/c7pa22cwsjuK21LnWLzY2bo0c=";
    };
    realtime_tools = fetchgit {
      url = "https://github.com/ros2-gbp/realtime_tools-release.git";
      rev = "c8f2f2743fe5e16187e32786e3a25df1c11fd090";
      hash = "sha256-Q+ZmEMwbVher38kNPY7nBhoTCWhDQRs6ytN4V4cZqjM=";
    };
    resource_retriever = fetchgit {
      url = "https://github.com/ros2-gbp/resource_retriever-release.git";
      rev = "b8d030d40febf9e5b6a338ab78471e57682d3c4a";
      hash = "sha256-VwQaQ1RxDY6NO5ZZk4CdkeTkBC60WhAP+nBKX7z/DZM=";
    };
    rig_reconfigure = fetchgit {
      url = "https://github.com/ros2-gbp/rig_reconfigure-release.git";
      rev = "9c79fe972e8beb44531194d8522048695851b45f";
      hash = "sha256-gZ+VV9GFmbsEaslar1+3aM0MYYc/PCvELyOWAiUPxHM=";
    };
    rmf_api_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_api_msgs-release.git";
      rev = "4418fc3b6cdc5ba308fae642fe43f33cf4953585";
      hash = "sha256-Ak1dhux0ba8ujWuk1C3DYnT66cMNOm8TpfQXwo3I/BQ=";
    };
    rmf_battery = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_battery-release.git";
      rev = "12aba542679f2d9abdf111b1162a48d531ad6eae";
      hash = "sha256-hxlFgpVq/Yv8gGoDRvDd4tkZQGZokoEQ/8oSL17YTlU=";
    };
    rmf_building_map_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_building_map_msgs-release.git";
      rev = "cd2a08a4ba530b41cd9f6b1ff2864ec2a02822d6";
      hash = "sha256-C77ct0ayA1iMUC5gSOnns2Wu7+0zSOFJQcUeQDWL9oE=";
    };
    rmf_building_map_tools = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_traffic_editor-release.git";
      rev = "a6b0c09699bf074088d044d3d12641925b532289";
      hash = "sha256-4cUoJgBGbyqyS7tb68emxaWNBl+LdMnihmzy7xwvW90=";
    };
    rmf_building_sim_gz_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_simulation-release.git";
      rev = "b4f209d394558c80991e7e17cf0e04754d58c0db";
      hash = "sha256-QVQQUL2yytg0sEDzQAdj3kKsPVD+98c7O/zrkeUB348=";
    };
    rmf_charger_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_internal_msgs-release.git";
      rev = "bde00fd01965a9e0f8702937a3c1cdd750ecfdc4";
      hash = "sha256-NFjgcKNZ79NPI7w721r0OF/bLq+8h5uaCacJvl1iS9A=";
    };
    rmf_charging_schedule = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_ros2-release.git";
      rev = "b6f6991030adbb82f57c229a8ba8b4eafe8c3b3d";
      hash = "sha256-ql4Svaydi+6EMmJD2iI8yl4XF4W/obllLFTfgxqk5CY=";
    };
    rmf_dev = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_variants-release.git";
      rev = "844b092fe10885f11327c84f9f7c1fd7ffdcee12";
      hash = "sha256-XThgYJiLzrj6OBp7jqdHvFPpT5xTuTKIEv2Yz2DoDIU=";
    };
    rmf_dispenser_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_internal_msgs-release.git";
      rev = "61720e68e4a4c4f29a09cf7507f4816a512caf0a";
      hash = "sha256-qpAm0ecWPoXYYo1hULsTjDPidPxEL7uKxI6unEvelow=";
    };
    rmf_door_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_internal_msgs-release.git";
      rev = "986379366c8d3cea206c7e70ca31dc0f085a2757";
      hash = "sha256-QO2MDDtXTa8mwRTW5kPJkmHhAoJiLSl8vHWOIaKDhqM=";
    };
    rmf_fleet_adapter = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_ros2-release.git";
      rev = "e954912b45d187dcfe3efa3cb0d4b7182d34996b";
      hash = "sha256-oQ0/oL7OkU5P/UTAStvoPh/dF525gW4Idrj15egR9rw=";
    };
    rmf_fleet_adapter_python = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_ros2-release.git";
      rev = "8610a99d68bcb570375b501d06425abab9df31c5";
      hash = "sha256-XfTRe/cSJkIfMDeYg8+8REz8J6kBWUPi3zslGOtnAtk=";
    };
    rmf_fleet_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_internal_msgs-release.git";
      rev = "5f504ece9fa97c79ac0ef871dd330b9fdf6fe6e6";
      hash = "sha256-QaqVOt131AkNx/j3XV9y1Sj8rQtNYW1fG8UqY+c5WjM=";
    };
    rmf_ingestor_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_internal_msgs-release.git";
      rev = "703b764f5209079372337e9ef30e6608fc69df4c";
      hash = "sha256-mV4zRGv4p2Z14D4ZBO3j4ZdV8iq0fEshoEGIXtohlK0=";
    };
    rmf_lift_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_internal_msgs-release.git";
      rev = "7bde0e3a44aa28f48a200305762f4dbb81636c08";
      hash = "sha256-nOEHLKOFOfoESrFoDSQcXcBWu20rgvI33o0DoeC9IE4=";
    };
    rmf_obstacle_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_internal_msgs-release.git";
      rev = "a796af42f093c36eab792b59b423a4d1f98c57f0";
      hash = "sha256-mxfaFAH5p/S3vxK4RdkH6kRiLSEWAyw4UfSCuD8DwBI=";
    };
    rmf_robot_sim_common = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_simulation-release.git";
      rev = "11fbc3b5f59f867be3c8a00b4e354fa600198ea0";
      hash = "sha256-w0qFx4C5VaFH20/vYzf/UCmQRb9mrIetgO+qmcmffcw=";
    };
    rmf_robot_sim_gz_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_simulation-release.git";
      rev = "49b2478e35f7ed08b8ba41285f6698c708b3f3b2";
      hash = "sha256-43Z/qobZT7vEhNNDK55q0pLbla9DCcNNEJYVq3d6Hm0=";
    };
    rmf_scheduler_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_internal_msgs-release.git";
      rev = "ec92a0656c5e758e74c5ff4773cbe8ed24b91d33";
      hash = "sha256-BLugMH1dCJbTLgCKvbTBILeO9aMEYSMIvy193XTz9XI=";
    };
    rmf_site_map_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_internal_msgs-release.git";
      rev = "2499966df824e46199a90238cbe273a9e3eff560";
      hash = "sha256-k0Vuz81CsgXUmBvVR/uZY7Tc0Wg11MHSYYFy/oswRQ0=";
    };
    rmf_task = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_task-release.git";
      rev = "b42a6d47b406d4534212fd4bdce519fc6fc0ad7d";
      hash = "sha256-elrSBRSbYp9FkGt6dvo70RwbBEtr6WBTzywkr0W01uc=";
    };
    rmf_task_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_internal_msgs-release.git";
      rev = "8c3afc71eb9b2ad7f5e6853cedbb0013ad110337";
      hash = "sha256-/hT+jeQZaC1FhffhkaFh+XaMshLsJO3TruueWB+syIU=";
    };
    rmf_task_ros2 = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_ros2-release.git";
      rev = "21db0de84f77d1e6e627636c77600231c582df64";
      hash = "sha256-g2F060KdE6F9gJut0a9HaEVWpiXe0Qe1ao27SICYYkw=";
    };
    rmf_task_sequence = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_task-release.git";
      rev = "d571a0315533786952852c1e372bb868a43bf059";
      hash = "sha256-9OH24N9NPVg+Uw3eMjJKKfPn7qJZJ3VjcAnc68hJ3Qc=";
    };
    rmf_traffic = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_traffic-release.git";
      rev = "788dbf8355d4db7f572c009ef58e019c668216b5";
      hash = "sha256-4ohkEyM2wji8NvyX9v0qDK8vKb5T5uCahaQc83GmKuo=";
    };
    rmf_traffic_editor = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_traffic_editor-release.git";
      rev = "a17b109599bbc97db4b07b9f9d6a490a7475f491";
      hash = "sha256-/bCf//VJVmOLJCSaTg1j/g7qr0BfYLnLrUdf0C5cX+4=";
    };
    rmf_traffic_editor_assets = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_traffic_editor-release.git";
      rev = "7db843be7c149dc679fb7f112d273a756ab76f07";
      hash = "sha256-hvm0OpnlRfng+KymFmP2C7+TLhgh/Tf2X7VmfiKfE6w=";
    };
    rmf_traffic_editor_test_maps = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_traffic_editor-release.git";
      rev = "0cae53184649ffa92ff7f95414420d400f872d35";
      hash = "sha256-+CyU4MrWaOGPsEtm5SXBONfFEeg5kLfRAu+zuSx4nbo=";
    };
    rmf_traffic_examples = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_traffic-release.git";
      rev = "850ece6b823d78a9939f9e0652a032199d365779";
      hash = "sha256-pMdBb9M0tdombzn0B22IYQRO6zA6tQIhQii8pN+8XiI=";
    };
    rmf_traffic_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_internal_msgs-release.git";
      rev = "878206895e1dcdf7c0b21dd41f0953e0bebf5991";
      hash = "sha256-AFZalqcapZOxO9m3KqMakovAIUJNb5ucV403kSXzvQ0=";
    };
    rmf_traffic_ros2 = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_ros2-release.git";
      rev = "40fa2ed90aa5a1e948f10bd91179e7f69a266bb1";
      hash = "sha256-KFBuTj1Pd07XXDg4yJb/k/348Kok9/gssa/Sp2avtes=";
    };
    rmf_utils = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_utils-release.git";
      rev = "45dfebf8e030a6c3a5817c41883b871daab829a1";
      hash = "sha256-v0ho2LvZxTvkDGnOgTDbMk3fKAsWxhTBqiV3M8emWxI=";
    };
    rmf_visualization = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_visualization-release.git";
      rev = "7425f0eec9cfae30f755539a7e3ff8c4e99c6736";
      hash = "sha256-Yf6tYLAXIEZoxfZmTA0Wxl67vp5SeI90iIog9NWMJvw=";
    };
    rmf_visualization_building_systems = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_visualization-release.git";
      rev = "e3075e116978d6ef9e3d17dc6aef0c7d208c65d9";
      hash = "sha256-F8cP3CB2QRr8ckFPE9e5dKeGDcdZZ/vtif3MnTVg+5g=";
    };
    rmf_visualization_fleet_states = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_visualization-release.git";
      rev = "9946b5947d41a77654c9740630532215f888f8ea";
      hash = "sha256-/OUN3LLuQOV7jZ7wDvSaySMVfCHoeErt7GxHZdSUd9c=";
    };
    rmf_visualization_floorplans = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_visualization-release.git";
      rev = "5543de571340f7c6d374ddb0fe404e17adcb0261";
      hash = "sha256-BxNcC59t9WO3W0PX0Rv+O/5chNuWk6lIDXqubQQLMBQ=";
    };
    rmf_visualization_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_visualization_msgs-release.git";
      rev = "fbd15383e5391ebad5bb12934e2c9e893c46d33b";
      hash = "sha256-liXmF2tzQW00JCTHCWApZT9RXJNAdHU+SxGxB8mlFS4=";
    };
    rmf_visualization_navgraphs = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_visualization-release.git";
      rev = "5d7847890ceeea5f3168973690211db71127ef37";
      hash = "sha256-/MJqArAa3rNM1IItwqwfCYIiEZx1nsXBMQf9lMLLXb0=";
    };
    rmf_visualization_obstacles = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_visualization-release.git";
      rev = "ea5997876c9e316df71b29cb446ba5299b768c7c";
      hash = "sha256-Cu1rClmXAp3Zuzc5DhsHEau7XqrwfIKFKHXhFHYXU0U=";
    };
    rmf_visualization_rviz2_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_visualization-release.git";
      rev = "6a446a8b53432f788570fd1d75e5004fc5d784a2";
      hash = "sha256-JW8h27nDnZY7HFklphMYJCP/FARy5JqLWMrGFx5R2wY=";
    };
    rmf_visualization_schedule = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_visualization-release.git";
      rev = "4aa4ddacce52315f98211824e219ce9c983b599d";
      hash = "sha256-2SvzpAD0Uei7K1eYXbcIRujC09Ra/c1aC/c6Ab59Yho=";
    };
    rmf_websocket = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_ros2-release.git";
      rev = "cca3b39018221e53345b0f5755d9c021a86b164b";
      hash = "sha256-MUiwzL+DeP2+MZAfptPIqDcEKmUp4+aD605v14HBrVs=";
    };
    rmf_workcell_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rmf_internal_msgs-release.git";
      rev = "715146877dfba8c3ebe19c2f376394ef5227522e";
      hash = "sha256-WDX8+s5nPdHojLMyUrnb8A8DZrBcrxxGnJrqQFTUGdE=";
    };
    rmw = fetchgit {
      url = "https://github.com/ros2-gbp/rmw-release.git";
      rev = "785f02ef6ccd4c863ddb665f39498a854c14d0a3";
      hash = "sha256-ytGuQrW/Nt8ZX9IJPoGLQCbkrs/QPjZxskxKOD2rLtU=";
    };
    rmw_connextdds = fetchgit {
      url = "https://github.com/ros2-gbp/rmw_connextdds-release.git";
      rev = "c66b73f5ee1d30f38d77a8c9ce854754bd56ff1f";
      hash = "sha256-Jrjpk82Ee3GTqvyLSRQt/mMnMAxxBxQkcV27miew8cM=";
    };
    rmw_connextdds_common = fetchgit {
      url = "https://github.com/ros2-gbp/rmw_connextdds-release.git";
      rev = "e0c79b4f730db4ada5914508bd0bcfc53158fbf3";
      hash = "sha256-+XqwhtzZuRCp9cCFk/lRomX6qv6u9rvJFim/061Lrpo=";
    };
    rmw_cyclonedds_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/rmw_cyclonedds-release.git";
      rev = "c77ec9dddb04578bf0d3de4fefcd295aa57ffba5";
      hash = "sha256-eEwV6mToSNQiYEtz+7yZ6KeR7otkBubIYy5jpsgmRwo=";
    };
    rmw_dds_common = fetchgit {
      url = "https://github.com/ros2-gbp/rmw_dds_common-release.git";
      rev = "8d736a951300b342b1d672e7923ad9c50f04f726";
      hash = "sha256-wc3HbuwzxNPLut+Q0TPcQI5xPIZd1euV/y2t3Acat8k=";
    };
    rmw_fastrtps_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/rmw_fastrtps-release.git";
      rev = "200c86865116196d4debb4e58dad7cdb05db2d2f";
      hash = "sha256-JgRbkDDPKgz9Hd3CBhShc1N/rmcR/5R3NBdAY5MWnbY=";
    };
    rmw_fastrtps_dynamic_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/rmw_fastrtps-release.git";
      rev = "e707a96d012841d846d5440de99c86887cf7a4a5";
      hash = "sha256-V2828PQAQJIhgnDggB3AHrhDQ4z2qbzacR9XAmvkgwQ=";
    };
    rmw_fastrtps_shared_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/rmw_fastrtps-release.git";
      rev = "0e173ceeb37f9fbb0295b3c8fa95391d18dabb06";
      hash = "sha256-adf+3Se8tqfuijOpOkifvbK+bsVN0Lw1yY1GjLm04fU=";
    };
    rmw_implementation = fetchgit {
      url = "https://github.com/ros2-gbp/rmw_implementation-release.git";
      rev = "6f7fca96237a7a41e888dc55ff8406876dd3cd1b";
      hash = "sha256-m0Kurk9EC6Yc7JrKHFGjSZ5eIanWr0QxoYkXWNLXQ2o=";
    };
    rmw_implementation_cmake = fetchgit {
      url = "https://github.com/ros2-gbp/rmw-release.git";
      rev = "7e0cca826ec27a0fe05672ed366b35468b492adb";
      hash = "sha256-aXrzFTM5hESGOTN25ojbzGxw19rcwTsGhCqCqAiDLz0=";
    };
    robot_calibration = fetchgit {
      url = "https://github.com/ros2-gbp/robot_calibration-release.git";
      rev = "aa1a98c2d363abddf3067426c2c52b2e34acbe11";
      hash = "sha256-R/RGa0/pVTyj3BGOHgYuQMwXXdm3/WMRrE7OsQ1WEGI=";
    };
    robot_calibration_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/robot_calibration-release.git";
      rev = "9ddd37d1432322248aa032f9db600fb08cad2545";
      hash = "sha256-b3n32e2IjIsvjVq2nY/zf7dUbihjtmww0IfyUiyHFVU=";
    };
    robot_localization = fetchgit {
      url = "https://github.com/ros2-gbp/robot_localization-release.git";
      rev = "fe41f9d50fca415b7945a70a70cd77fba858db9e";
      hash = "sha256-GpzFamql3QOEMFc2VxVaRveYni8bElyv48UgJHAwel8=";
    };
    robot_state_publisher = fetchgit {
      url = "https://github.com/ros2-gbp/robot_state_publisher-release.git";
      rev = "877b7bc7de42bf1fdb65631902b524a0f70c5942";
      hash = "sha256-5FTqMqeamQAFt8XEpHuYh6JzILoqjaGujXl4Q30xwro=";
    };
    robotiq_controllers = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_robotiq_gripper-release.git";
      rev = "6c6fbff726bf1944fd9a5a51ed3ee60365f53e5f";
      hash = "sha256-JhCCmqa9agEkqVO3vJ372AV/ZDF6zTNZta6YYwe29Y8=";
    };
    robotiq_description = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_robotiq_gripper-release.git";
      rev = "4131e61c1f07d1e4deeef87ac2f4da3a8e2e6637";
      hash = "sha256-CO6k93lrA+H92beTQuG1tnfMsO99+vpYtYXmfABHcr4=";
    };
    ros2_control = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_control-release.git";
      rev = "26d1ffa030eb7a0e0f72092dfa11eed0144bb368";
      hash = "sha256-ENgjebP8LgroECEqn36MEYUo5bpLkZwv08/E7QoHQR0=";
    };
    ros2_control_test_assets = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_control-release.git";
      rev = "eea0c26c31c47de4af462dd0f3ee6bf42bfa9388";
      hash = "sha256-fqwhiCcIQyGDG6VYnOkRHSphyRD3jhdKQWfVyFl9dLo=";
    };
    ros2_controllers = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "a6134020021e1e3cdbf149dbbbdadbc1098056cc";
      hash = "sha256-P22eFSQROv53vlzJggwkU1i6Jr+QFpVQ3+BVLkITmfQ=";
    };
    ros2_controllers_test_nodes = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "7f8da93ffb30ba914688ff593e82cc6f5d2ca278";
      hash = "sha256-h4y83Pbv/LwPeEgqNcdGKLZ4ZuxkVKrcDclaNRMzZlk=";
    };
    ros2_socketcan = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_socketcan-release.git";
      rev = "34e8b4d086c2cd3a25264505342e402e942e430b";
      hash = "sha256-+pXj+cTr4khaX16vO9udW9wG0Acdjndi7NydrNL2uZo=";
    };
    ros2_socketcan_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_socketcan-release.git";
      rev = "ad6d4962edd86e81eef43390316970e54ab89279";
      hash = "sha256-CdTyUOxtcJWtdaWIWAMV8DBwNPVcpobmkdjvFqDo8xE=";
    };
    ros2acceleration = fetchgit {
      url = "https://github.com/ros2-gbp/ros2acceleration-release.git";
      rev = "18eede7c818416a07f43314c8a39b6c7abc5b03e";
      hash = "sha256-DRkaUv6JAKKbX1+DqnpK8wTDm1+jlEoHal/0i6rhA6I=";
    };
    ros2action = fetchgit {
      url = "https://github.com/ros2-gbp/ros2cli-release.git";
      rev = "28aef19d429d83f5e135a724dc63f83097fbe792";
      hash = "sha256-/PSvmfbQBmQ9GmPYUoTPBfgOs60p6W9yQ+xOiwp6JMA=";
    };
    ros2bag = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "888b279d8d0d4d76a9125d0b4328df70f387bf59";
      hash = "sha256-wfOK7yr2giKKP3nGzfbQn9WUZNNwoJ+NaZthXDKXg/k=";
    };
    ros2cli = fetchgit {
      url = "https://github.com/ros2-gbp/ros2cli-release.git";
      rev = "7b822ccef565a9d5a3d7f75815c16c781611592d";
      hash = "sha256-LpwlTyOQWsoWVEoxdPppPmPztdEB7oAx7QjmG9bU2/Y=";
    };
    ros2cli_common_extensions = fetchgit {
      url = "https://github.com/ros2-gbp/ros2cli_common_extensions-release.git";
      rev = "1687ba1b3328e41ebee8c4e51255f1d728243bf0";
      hash = "sha256-b3Ru11kcJWZbAquNYaTJOX8DiTVNJAWNcV6N8QA4ykQ=";
    };
    ros2cli_test_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/ros2cli-release.git";
      rev = "b1bf6454355b950121990d46c76a3d882a85c461";
      hash = "sha256-IpL1SqU83kbinY4QSBMYJ9v8CmLnWQdwkLedTylh3ZI=";
    };
    ros2component = fetchgit {
      url = "https://github.com/ros2-gbp/ros2cli-release.git";
      rev = "4d0984d4989f109d9cd7e15951c6ac1ce6ac8378";
      hash = "sha256-KvDKQqXD6vv76CVNmmcBHWb8l0ktorsRYkGo51se1CE=";
    };
    ros2controlcli = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_control-release.git";
      rev = "ab463a6dce41c768a6dcea0d702ad7ab16ca38f2";
      hash = "sha256-SfGWGbn9uw6rGmMIyp3/J37X+FtCyJTD9HV1auKrTlE=";
    };
    ros2doctor = fetchgit {
      url = "https://github.com/ros2-gbp/ros2cli-release.git";
      rev = "de0f2b78fac592f82ef568a19fdb0bf63a19b92d";
      hash = "sha256-JXBAZbli5oJOfIgCmMgvtoe2omh/HSe5ghJP6JBBxms=";
    };
    ros2interface = fetchgit {
      url = "https://github.com/ros2-gbp/ros2cli-release.git";
      rev = "2fc4821d3d5b0e0d1effbb7dd5533b5bde2b33e1";
      hash = "sha256-Amr7KhVrHZ1RxrrcLH3gqZmMqGBE5P+uqTIiAkfOSis=";
    };
    ros2launch = fetchgit {
      url = "https://github.com/ros2-gbp/launch_ros-release.git";
      rev = "4fcbd74e9fe1d7b272ad91b099ae03f394b7774d";
      hash = "sha256-E6Ud3YgAuns/SgPWysda6aIg4WL4tIsihgZwqbOHeVk=";
    };
    ros2launch_security = fetchgit {
      url = "https://github.com/ros2-gbp/ros2launch_security-release.git";
      rev = "e896c13bfc8f93f259902eec99483b65336b2458";
      hash = "sha256-MM1mvGLVBpSePXEUKQScahRPpulucGxMTaTp+jSKbNo=";
    };
    ros2launch_security_examples = fetchgit {
      url = "https://github.com/ros2-gbp/ros2launch_security-release.git";
      rev = "ffa975e487020ef5c667a0e2c5950fbf9a0fcfca";
      hash = "sha256-NWaQ/UIv5e//ahvk4u8zBHDsw6po6o9VLTnHTmXsQR8=";
    };
    ros2lifecycle = fetchgit {
      url = "https://github.com/ros2-gbp/ros2cli-release.git";
      rev = "28cd456ef9fe0bc616f29a3ddc0133d0baee90e7";
      hash = "sha256-S9FLUwdE2CY/gbgzCUqKhCMruLHomN++Ktz65M6X4t4=";
    };
    ros2lifecycle_test_fixtures = fetchgit {
      url = "https://github.com/ros2-gbp/ros2cli-release.git";
      rev = "ea85fa884c6417acf21d1d7e858f5379bc8e8b9c";
      hash = "sha256-L4zZbd8fMvXvo0n2Jf5wgcEM3qVeA0Hg0YgjMaWtXVo=";
    };
    ros2multicast = fetchgit {
      url = "https://github.com/ros2-gbp/ros2cli-release.git";
      rev = "ce0d5651fc2f7216e8e13e5ffb1aa81ab01ad85c";
      hash = "sha256-No/jcpN7VYZg24B6jWpMh+aDTeAA4CUjIW7Gu1NgRes=";
    };
    ros2node = fetchgit {
      url = "https://github.com/ros2-gbp/ros2cli-release.git";
      rev = "a3f805865fbc26c9231798f40fedbdb052c1159d";
      hash = "sha256-ldTUVQjlf++mL5uLb/d4St3RX/MYVIKuO1AhFn9GnkQ=";
    };
    ros2nodl = fetchgit {
      url = "https://github.com/ros2-gbp/nodl-release.git";
      rev = "79e166114dcef2812bc1d7bc0d91b798323565ea";
      hash = "sha256-8JQgseO9AxfsDy2YuxQ/dojS/6MOLaCKwBGUX8hIgwk=";
    };
    ros2param = fetchgit {
      url = "https://github.com/ros2-gbp/ros2cli-release.git";
      rev = "ee8dd6eb93f0f338a6cbb016e7badabee6c7e64f";
      hash = "sha256-XSOpnY0a2+4OjpeKOrPY5J9WItW0sAZ2VGeByFpd4N0=";
    };
    ros2pkg = fetchgit {
      url = "https://github.com/ros2-gbp/ros2cli-release.git";
      rev = "1cfd8c26024f1bb5696e6389ee7197e137b90ec8";
      hash = "sha256-g+sC73+O+uYoTYMGSauFm+Q4+0Y/Nwfaldpou5TGQO8=";
    };
    ros2run = fetchgit {
      url = "https://github.com/ros2-gbp/ros2cli-release.git";
      rev = "5f07e2d9f5b281179e66b8db861fae89bec28750";
      hash = "sha256-b47uz+wWc18dLvBagcwf6HiDyCOJMzRparykgHbsYIo=";
    };
    ros2service = fetchgit {
      url = "https://github.com/ros2-gbp/ros2cli-release.git";
      rev = "14aa2bef1b8f15296b3e17a3252747dbde689211";
      hash = "sha256-YzPP2VRyQyjcJxEV0UyOaGs5+Ls5UkeykNwdu92GAh0=";
    };
    ros2test = fetchgit {
      url = "https://github.com/ros2-gbp/ros_testing-release.git";
      rev = "87f9361b131712dfb1e3b7e342eb8f293fd919df";
      hash = "sha256-tqKhYA9+IzjW93SioL3LjEtOGETxMpk409QC1KJF5w4=";
    };
    ros2topic = fetchgit {
      url = "https://github.com/ros2-gbp/ros2cli-release.git";
      rev = "f95e34ae173e6bc94e70e3aa8cc63bfd99d4e216";
      hash = "sha256-i2HNgtWFUYxZ0nKYGTzkLR7khK1Hnzp5nPQMtt4yWWc=";
    };
    ros2trace = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_tracing-release.git";
      rev = "5223ad9d5972e59c64ea5936c068533628510dcb";
      hash = "sha256-hmiZoe7r+QFGR4VLuq03ec/KXmfgWmZvQ4nKaCHAx0w=";
    };
    ros2trace_analysis = fetchgit {
      url = "https://github.com/ros2-gbp/tracetools_analysis-release.git";
      rev = "23e4677fbc691efadbad1a8a231fab60e2d794a5";
      hash = "sha256-88nEQ39lxqn4A5k9lH63DZqI0nV7umn2QUpbOCQyVpE=";
    };
    ros_base = fetchgit {
      url = "https://github.com/ros2-gbp/variants-release.git";
      rev = "5e0023e0e7580c315c038b95ad50501de894a7d2";
      hash = "sha256-qDeMCM1VeU74XfEYB3E5caLxe/rMeyfJaQYQTyUmR98=";
    };
    ros_core = fetchgit {
      url = "https://github.com/ros2-gbp/variants-release.git";
      rev = "57df522c61794399f11cf3acd025160470e14de8";
      hash = "sha256-kDPxLgU8jx1J5KfLiQqBhPR9zuKlluBb1whA8WDCOjA=";
    };
    ros_environment = fetchgit {
      url = "https://github.com/ros2-gbp/ros_environment-release.git";
      rev = "cfb36f6e53a770b4b31a053b82dfc0dec648b685";
      hash = "sha256-dwFnwm7ilNij7JeJ7sBPii3MX2KZVS3uvMBD8MJpIag=";
    };
    ros_gz = fetchgit {
      url = "https://github.com/ros2-gbp/ros_ign-release.git";
      rev = "677f70c802909bf3b0f44be9caa0d14af937729e";
      hash = "sha256-jk9jDgHIJ29rJH98oMMxX1weUOPAwt93nGvrwJR9cw8=";
    };
    ros_gz_bridge = fetchgit {
      url = "https://github.com/ros2-gbp/ros_ign-release.git";
      rev = "1d0df52da5c4db63f1aa4b96b7f08e7893c5df71";
      hash = "sha256-AtClUOPVYAZ7Cyj+7pnHLehycRQu3z5gQDnY7x9Sn9k=";
    };
    ros_gz_image = fetchgit {
      url = "https://github.com/ros2-gbp/ros_ign-release.git";
      rev = "774d7872dd73910b8a53b53f5440eed4b77be0cb";
      hash = "sha256-kUh1RgNeSJkfIoYRYvIizVZg8FD/BINmnZ1xHkvBxLQ=";
    };
    ros_gz_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/ros_ign-release.git";
      rev = "11f676805535649859b78e2595ea617b5c64075a";
      hash = "sha256-9Edf88imysoDCfnAnoYRReWzY0hbqsT7LxsGlzUi8vo=";
    };
    ros_gz_sim = fetchgit {
      url = "https://github.com/ros2-gbp/ros_ign-release.git";
      rev = "96eae82b6a5386ba928c377d52570f742578a521";
      hash = "sha256-BXR3S2lTESDwQFjyUXgLtzfN3mqn1/X93Q8finIHQxE=";
    };
    ros_gz_sim_demos = fetchgit {
      url = "https://github.com/ros2-gbp/ros_ign-release.git";
      rev = "72008a241cc32b1d967f4bd8c6d8cc5218b51a20";
      hash = "sha256-7M3o0caPXji6t6c4ucF9P9+I1EnQSRYMk16Bq4nBT3M=";
    };
    ros_image_to_qimage = fetchgit {
      url = "https://github.com/ros2-gbp/ros_image_to_qimage-release.git";
      rev = "73eb2db321f27aab67b475a236a19607124896be";
      hash = "sha256-qxt94vxyKVhWR64DyvjU5D5xKcJcflZdDd/jA2e0d9U=";
    };
    ros_industrial_cmake_boilerplate = fetchgit {
      url = "https://github.com/ros2-gbp/ros_industrial_cmake_boilerplate-release.git";
      rev = "09c03bebd52e95c6f5f92dc7dbe5071039b220fd";
      hash = "sha256-yxsr0rMyvBYeoeMkhnWs1wSUR+qmZ66S/z9WOpMtRwk=";
    };
    ros_testing = fetchgit {
      url = "https://github.com/ros2-gbp/ros_testing-release.git";
      rev = "698ef5baf793b32a4d4e3ffcce820c13902e4ef1";
      hash = "sha256-fs+oXGxdtoXxQxvZSsImWJtNFp+X3jdTHN31wD+47Yg=";
    };
    ros_workspace = fetchgit {
      url = "https://github.com/ros2-gbp/ros_workspace-release.git";
      rev = "7bf5b2dda99e80015f603d80529cf7852471bc39";
      hash = "sha256-+tYPQJjQzjD0UJKtZroIo9VzvGZ6Up1hzFfYxxQKiy0=";
    };
    rosapi = fetchgit {
      url = "https://github.com/ros2-gbp/rosbridge_suite-release.git";
      rev = "72cbe2e3a2f5a98e160d86e54667eceda6d47114";
      hash = "sha256-5gDyqSXHMOUheu+7fjleKwHApIpOlhVvL9dpEujRBA4=";
    };
    rosapi_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rosbridge_suite-release.git";
      rev = "697cc305441c19d030d17c756d093c4d11af6195";
      hash = "sha256-mS6s9obrtPJQkYEJluig+KM2GqAKwG2QSBz9iGCJMtc=";
    };
    rosbag2 = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "6ba01fa099671d7ca84cafa41ae663732bb3511f";
      hash = "sha256-dKeT6PQJAjB2IrW3pDrKpGTBey0i+0+I4cGEyHdn1Ts=";
    };
    rosbag2_compression = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "e9f02784260049a13a59f732a6fa929e9fb95880";
      hash = "sha256-8nlnW5g1RTYkA+ArxXZrXOdbjHbgAQQP93gtEWnDQrM=";
    };
    rosbag2_compression_zstd = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "79be289debf2763d704091f415e0766f1397907f";
      hash = "sha256-GYsTVG0fIt6dimaK74NGwhh8ps5R9pVU6ysA8nzQI0g=";
    };
    rosbag2_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "c21454fbcde9726dcf5326f40fb6c8611f4d04c1";
      hash = "sha256-IhbEvIVe3emxwC07mXb1FKswcgOJaA3DLJtWHEzSg7Y=";
    };
    rosbag2_examples_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "71697870cb664f60b01916d0f359b401f4bf257e";
      hash = "sha256-Kb2iaURMhNXv5qH//PBFubsT/V6M8DI5mwq2Y9whRk4=";
    };
    rosbag2_examples_py = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "e542dd9512cdf0ae010755d0b12c74725ab1cb79";
      hash = "sha256-j8OOPQ8nAcVB/1QGB6wVNXITGZ9lI+yt77Ce/DbB68Q=";
    };
    rosbag2_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "cf10934c20192408430e4f989a02163fc7e329be";
      hash = "sha256-a8VlWj+jyXbgQgb+RcRu2y5YKRC4co6gFj0lMyV4IvE=";
    };
    rosbag2_performance_benchmarking = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "e9119ad170ca65b399410eec68fed21e5e50720f";
      hash = "sha256-hzDDbAW9ix/OYN+Ssuz11IrcQnrFMbOJlQRv2QoXi9s=";
    };
    rosbag2_performance_benchmarking_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "d743467677665c4774feb4f171c932777fef5803";
      hash = "sha256-4DSpl5muKYerp+HOlbqJ6pqz3X2emIhG4p7b7OFAwDo=";
    };
    rosbag2_py = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "15b3bec7a59f80a082f9b994b3d8b1fb58a9b542";
      hash = "sha256-31xNUvjXzshlSUI+HuqrA9hi/lHgLKTosxap52k1TNc=";
    };
    rosbag2_storage = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "d09ba6a8e9ad269bb2a8c040ca6ac6f0b96a78f1";
      hash = "sha256-4RoVLck4aAUfpX/d4/u+KRlM4Q0+ql8j9jKdqRTNLJI=";
    };
    rosbag2_storage_default_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "dc12d7706e00d42c49444bddb676bb8293b7cef3";
      hash = "sha256-Zk51LnlEeYOqq9VCDjrpxOQiq6Zb4vuOCl8Z6UZPLSE=";
    };
    rosbag2_storage_mcap = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "374245c946ae8a4e35444ecc54488f017d098afa";
      hash = "sha256-TL6JdnDhtZz2N5HYDO8elpPRSP3QZDfwBpdIlCLOEmo=";
    };
    rosbag2_storage_sqlite3 = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "56f0aba97bc331e48e2037da1a11b72cce6e1a8c";
      hash = "sha256-1dfMcvXr36k9SaPUBfVN97ab9rKx9ZCWL24N9Gl0T/c=";
    };
    rosbag2_test_common = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "92828d12f0e98c97cf5f4aed18f8d7e374ef3cbb";
      hash = "sha256-E2znGKtEvp3Kaozhfe74MrSLlJx6AplnwVb8HOHbTCc=";
    };
    rosbag2_test_msgdefs = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "47d18da60fe893b68a08ff43f3d68282730ea7be";
      hash = "sha256-EOnJSisxerLpUqPsWTxR3JI/8uMqU189Hgf3Txz/ibI=";
    };
    rosbag2_tests = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "791dc26aca19c871e13566924ced7daa2738d563";
      hash = "sha256-mTdPLFndAOcafMOiDeCI/1GRVq0gg5Fn6dY9ryTRNsg=";
    };
    rosbag2_transport = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "7576c106eb1f562095d0f1fbb296350ff63c0e15";
      hash = "sha256-SI8rH5910DNwjJyUGu78qr2Pu8oFVasdD4kMOUizC1U=";
    };
    rosbridge_library = fetchgit {
      url = "https://github.com/ros2-gbp/rosbridge_suite-release.git";
      rev = "7e8eb24c489ea49ef698dd9e785d5220ea9a0acc";
      hash = "sha256-Xk40YYsXUGj/59ea63e2ppoCwrhXp7wDqiWhM84sIR8=";
    };
    rosbridge_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rosbridge_suite-release.git";
      rev = "4abc4e5de80f7e4dcb16bc59483edc78756191f6";
      hash = "sha256-gef94q+tOtKcYirePzrQpnNRqyw/TxlebG49vn/OYXI=";
    };
    rosbridge_server = fetchgit {
      url = "https://github.com/ros2-gbp/rosbridge_suite-release.git";
      rev = "84c89ddabc1e1b553a8f6116390450a08c8077da";
      hash = "sha256-t1Tj/Y8NdOi7Yunvx/UfIz5LF9ZGXrf9BSc9bUPdaT8=";
    };
    rosbridge_suite = fetchgit {
      url = "https://github.com/ros2-gbp/rosbridge_suite-release.git";
      rev = "7259f925429829be861d8d96d1946e6923e61f80";
      hash = "sha256-MWpailueIvylSaPCRcXsKgmzpatxkZq+HsJMGXnMUPs=";
    };
    rosbridge_test_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rosbridge_suite-release.git";
      rev = "6b0fff188b9fd6ba9109f18426d8b055ea8332c7";
      hash = "sha256-ZgToC3Qm971d8Pn8MxepqwV+Qby1hi//qfK1idwJSIc=";
    };
    rosgraph_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rcl_interfaces-release.git";
      rev = "9af86c0d06f950a298f48c4380eb93646a25bd91";
      hash = "sha256-hEDZCurb6TJooZeBv+lAeDryX6S2nIjCRJkpeItDr0o=";
    };
    rosidl_adapter = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl-release.git";
      rev = "bfccb990ec35e72c560715ef495a7048a602a35a";
      hash = "sha256-NkvVWsMgN6qrB9/sbgk0gblTWWQb9IaAu+ZVsB+Bgw4=";
    };
    rosidl_cli = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl-release.git";
      rev = "9221c1ad87215e3f88c227b5903f21be9b79718b";
      hash = "sha256-HE0sUa9zqCr5vhV5Cs3G51DYIdYJG34ce11BoNAFJaw=";
    };
    rosidl_cmake = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl-release.git";
      rev = "afb2bd78ca34ec39997c21e46fb871282a1e10fe";
      hash = "sha256-ViES5VI+AC1X3x0SsH13umc4X6Oo+WqUm/V5tOoTHaU=";
    };
    rosidl_core_generators = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl_core-release.git";
      rev = "70703ed098d9fe0db994524204401121c3c4886c";
      hash = "sha256-9Zg4MF56i7rxbst/X+B9Nav1oRFYrQenpjKoBR70PpE=";
    };
    rosidl_core_runtime = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl_core-release.git";
      rev = "c188af0ac3b90cc867086c53c7401cd8aafa7fab";
      hash = "sha256-NEpTeaiX8517sB5rwONF2QeR226fOrZrOGQC3+zKeHs=";
    };
    rosidl_default_generators = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl_defaults-release.git";
      rev = "54bd52d5becc6c897650b447e2de370c04c4db05";
      hash = "sha256-+yGCfFFsE0n3AZlq1sE1F6lIt9Tl/2LEwFw/M+U6/6M=";
    };
    rosidl_default_runtime = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl_defaults-release.git";
      rev = "d25a92b065e9f454ed6e96e89c07d61cc7f96ce9";
      hash = "sha256-vjsipJB0+/VPIsA3LK9gH6WS/Eai0uZ3YKW3TRptp7Y=";
    };
    rosidl_dynamic_typesupport = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl_dynamic_typesupport-release.git";
      rev = "11e03873b5cc3303db45c9729a8c3fdc57d0d5b8";
      hash = "sha256-oKjjvQ8+9kmE/JYX1boHfRN4q52+Uk9mjH3KtVPWC1U=";
    };
    rosidl_dynamic_typesupport_fastrtps = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl_dynamic_typesupport_fastrtps-release.git";
      rev = "700363b667895d30d6670e3e097623462f34cc41";
      hash = "sha256-d42W+4HLC4Q8TCe25XwXRCPf0y7vJFmfKMZ+/ozS/sQ=";
    };
    rosidl_generator_c = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl-release.git";
      rev = "8c0b35ed588f72678c956454604ba1a815a447c7";
      hash = "sha256-1l817j0n3HvXQ2glqdW88lJ/Ri/lSzHKAYQo4BXabBg=";
    };
    rosidl_generator_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl-release.git";
      rev = "caa7fc9ef84eff9c815e222b9d80723a068ad5b4";
      hash = "sha256-AMnGovzxooayTc4Y9scRE4RwxgvZMa/N22QxrIvWi0w=";
    };
    rosidl_generator_dds_idl = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl_dds-release.git";
      rev = "97af97f45b3bb41d4e49c28aa1f50a7ff48e5554";
      hash = "sha256-nJaLUL1Ey0Ie3J6YMr3sYag2w9r0FEkdrowJp1MGklY=";
    };
    rosidl_generator_py = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl_python-release.git";
      rev = "8220427f3d3a26be945adc0a3291127a9b4a8f82";
      hash = "sha256-oe7q6zEijgXySpyRe+qMBw/0JkOggcPLAPf1XvbTaO8=";
    };
    rosidl_generator_type_description = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl-release.git";
      rev = "f9e925141a8c57f331e0533060e16f68f7f95397";
      hash = "sha256-H3dIGZRfMX0OOi2a1Te6a3GOmCmBfxMRiTkjObPjMMs=";
    };
    rosidl_parser = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl-release.git";
      rev = "2614864434f193b3b71076744337419a0138df7e";
      hash = "sha256-1I50K0T66XY1/1i+VW6N5U4GBE+IO0PgoXOTokA/MHI=";
    };
    rosidl_pycommon = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl-release.git";
      rev = "f13376be46a3ff8db06c6e8ac04371c9f02bce13";
      hash = "sha256-pz2N7wj/tWNBN+Zhjeaoj0eAWJLvOAu91LZmpw0RWfg=";
    };
    rosidl_runtime_c = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl-release.git";
      rev = "4bfad483abc1bb0601ea6406b1de7e8b11230f1c";
      hash = "sha256-NMDm5IYafAIZ7tuU5wLvFPN1Xjt4+RU+nh6tKOdkB9g=";
    };
    rosidl_runtime_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl-release.git";
      rev = "bef252b1cedc0f99956d56fc09a1f19b59534c4e";
      hash = "sha256-KJ63ZYA74bwaGDSI9lZ0J5Cv+iuidH0yytBeYKyGwj8=";
    };
    rosidl_runtime_py = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl_runtime_py-release.git";
      rev = "0b05e57c72fb835489f909e39d6868e234957a7a";
      hash = "sha256-jytdOfWquw/4LfZWrw4Y5ENdwCIZr54jgWE40LjBpbU=";
    };
    rosidl_typesupport_c = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl_typesupport-release.git";
      rev = "5dea37cf7a79d5651289f3f65380399f15febf5d";
      hash = "sha256-JCYXTlvnyR+O2YgS8alsztQk5kBOkkxeZ86LyuTNIbw=";
    };
    rosidl_typesupport_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl_typesupport-release.git";
      rev = "f132a4ebc1ac6e5a48413071265c88035f5d9b09";
      hash = "sha256-HxpOKtBoeqyhnYXHJi+nTWIsqh6SVVCDZrKv/rrZ/7A=";
    };
    rosidl_typesupport_fastrtps_c = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl_typesupport_fastrtps-release.git";
      rev = "1400a09497690c6e15d49aaefc87531b96f1285d";
      hash = "sha256-2sTle4oic16XurofpMlrAfaniopgwzVHCSQjv2xsl04=";
    };
    rosidl_typesupport_fastrtps_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl_typesupport_fastrtps-release.git";
      rev = "251957bd6af1dd6f15113952b69d74aaad79eb5c";
      hash = "sha256-ZEqX9gfGLYVCUifj/xBT95/lQvxtssBJj1kRPdX1Ki8=";
    };
    rosidl_typesupport_interface = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl-release.git";
      rev = "6311df134f65a3fb5b1a8a8666b77b9947087843";
      hash = "sha256-ppGJYEONVip3/7Cr7zw5Su52mfxFT7EhDttXmwEFUt4=";
    };
    rosidl_typesupport_introspection_c = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl-release.git";
      rev = "aae15adb0832c95825bb906a285ef94b6cdb05c2";
      hash = "sha256-Utc3fA3YYrzBZaivher4NCqr0STET3xUX3h05BiTfSg=";
    };
    rosidl_typesupport_introspection_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/rosidl-release.git";
      rev = "d73e8a123926da9125739b192a0fe11b513632b9";
      hash = "sha256-fSgRqqO4cDX+Qi0jW/FJ1dcvBOSKXZkOnm5hDnYgkDE=";
    };
    rosx_introspection = fetchgit {
      url = "https://github.com/ros2-gbp/rosx_introspection-release.git";
      rev = "5fd9028228524c57fbe997c60e7b31ff203b2b00";
      hash = "sha256-KDdAD97VsAutKy0G0mos5u4TWXUgKW7WetrUOapwPQc=";
    };
    rot_conv = fetchgit {
      url = "https://github.com/ros2-gbp/rot_conv_lib-release.git";
      rev = "a61148e0f5bd8fbd7480973e37023da1777a9c5f";
      hash = "sha256-VqbATzeNKPD8JPuhSHw/tFUaehAd/D5z7SlyxRL1P9w=";
    };
    rplidar_ros = fetchgit {
      url = "https://github.com/ros2-gbp/rplidar_ros-release.git";
      rev = "62ee07ff9d0bf9532bbdcdb1b8f0c22f8e7b25b8";
      hash = "sha256-lOiYrTggsDiQb9sCYtWAup4+kVoMnpSYqKqWGtnb2AU=";
    };
    rpyutils = fetchgit {
      url = "https://github.com/ros2-gbp/rpyutils-release.git";
      rev = "65683d21b74349178a9e518eeac64287dc528127";
      hash = "sha256-irKkZj0IqKDEwaCIh2Rn3jRQmeR3VI8Gkjah0FuSC0I=";
    };
    rqt = fetchgit {
      url = "https://github.com/ros2-gbp/rqt-release.git";
      rev = "74f9483352ef59abf5b390f088660c02914ee74f";
      hash = "sha256-peBv6HLShNFar0fL+NpWuVKsiVpkVkHzSejtvm5eYg4=";
    };
    rqt_action = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_action-release.git";
      rev = "3e7beb2f37abb99e324091b4b07801e0517f66fd";
      hash = "sha256-BpjG5n+k8+z0l/4NhcvSTBOKKYBJF4u3LRRHw1jiGgg=";
    };
    rqt_bag = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_bag-release.git";
      rev = "fc6116adc9db168a71892ec9eb8c83105363e27f";
      hash = "sha256-K+pDQ5wUSt1qrw0P87qv4my3psSCvJKlgSXdwmMuw1A=";
    };
    rqt_bag_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_bag-release.git";
      rev = "692f9dfaae890f15fab4e0c5bf2f38cd10d2ffb4";
      hash = "sha256-HYDA8epYBRYiphjEhCdwFpWSlI9RuUTOHaaICu0mXJI=";
    };
    rqt_common_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_common_plugins-release.git";
      rev = "67b5569cee6ac6ea7774944fbc2b9344d3317eac";
      hash = "sha256-rSJ8tB78EOgjtaHw8wleVvW+Rx9+z5d0IAznXj0aKmg=";
    };
    rqt_console = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_console-release.git";
      rev = "4e7179b14078dcbeec86ec11008b37b74f5ba133";
      hash = "sha256-nnitj5EX/4GJUalogu9OlEP1Bql0LuzLuCV6Ib+myAo=";
    };
    rqt_controller_manager = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_control-release.git";
      rev = "2eb083e382f041ca32df18c42e3bcd7907a7631a";
      hash = "sha256-gZ45xvjVs7UiKouYsQMZ0KQ85CvQtHHwncaTqFnvwqA=";
    };
    rqt_gauges = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_gauges-release.git";
      rev = "fae55efa182e582154dd83da2cf3e8f2ae94843c";
      hash = "sha256-ie5l6SHrK6cQczLp2R3MdzrJRVZGAxGnuO7NzFIwbJY=";
    };
    rqt_graph = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_graph-release.git";
      rev = "6771816961fa978fc42be3f8b5bf6b241052d595";
      hash = "sha256-Y3VJbiQ/I3s1fFoCRZ+OkJiLE/9+pabzSDJ0ja/xuJo=";
    };
    rqt_gui = fetchgit {
      url = "https://github.com/ros2-gbp/rqt-release.git";
      rev = "8eec9c6a8d6951524a0d1fe98f9640ef8ef40267";
      hash = "sha256-nY0zbmJ/xPK7ZekKh0ONOV+us66g03mWsFQeC42Wx7Y=";
    };
    rqt_gui_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/rqt-release.git";
      rev = "0ff9411e1fae5cdb1942231565a13b10a85d001b";
      hash = "sha256-JJ48LH0MfEaVb8AgbGKYBZ2v/ihBf0A2MZ267/+zhDY=";
    };
    rqt_gui_py = fetchgit {
      url = "https://github.com/ros2-gbp/rqt-release.git";
      rev = "90003d619c3aec91e9532590d384395add0a0571";
      hash = "sha256-QjZHZ660Tz4AV/n/ClJC+y1iDiqcBvEiUvtEh4iECxc=";
    };
    rqt_image_overlay = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_image_overlay-release.git";
      rev = "3b47252303977088f137c8bc94c0b375f98e4bf5";
      hash = "sha256-rjv8Zxu7V4qDtMRcwMdiYByPpFiYIRJL8N+KK/Gte+E=";
    };
    rqt_image_overlay_layer = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_image_overlay-release.git";
      rev = "02784b28cc1e852177b9e4d0b25b49f144422fe6";
      hash = "sha256-w86vqlc7t/EJJOh8aI+DT1ECcEMdvidOeDtsyDhjTXc=";
    };
    rqt_image_view = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_image_view-release.git";
      rev = "44d834181b382620bcbbec51491a33d0ddb6c497";
      hash = "sha256-yg3Ts00hd8hELleYHejS5qrq7xSwPt9WphpSoj5mBTY=";
    };
    rqt_joint_trajectory_controller = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "257a67ced948c4656509ed622e4105e9d1c13d6a";
      hash = "sha256-LGN3n+bXAx2znYqKBsOe/pchy3ry49yyxEDstIvHRsU=";
    };
    rqt_moveit = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_moveit-release.git";
      rev = "907f5687d674b3f68e5590c2d0d08eddac25ec41";
      hash = "sha256-A4bGoHfpokKaYjSrBzvtYgzyf6sJGECfPJCIM0iZgYU=";
    };
    rqt_msg = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_msg-release.git";
      rev = "0171aafa8d1dd700e104ee98421ee4a5e4ea45d3";
      hash = "sha256-AD3nHOjjAOHbKFshSLeo7W57HAIhBjMJzfzM0woKsQk=";
    };
    rqt_plot = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_plot-release.git";
      rev = "ca0c115bb0c90da1c6fb4d03ef88c9c223205450";
      hash = "sha256-VmIIMvUcQ/f00LDrrtFDer4fk/echPE3VQcf6LgSZas=";
    };
    rqt_publisher = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_publisher-release.git";
      rev = "cb589e728965b6994e4ecc79b7bcddf738531acf";
      hash = "sha256-TFsWLYSUlJfO+cj2md0qhAlWz//ATUWUdHtqV4UBbBg=";
    };
    rqt_py_common = fetchgit {
      url = "https://github.com/ros2-gbp/rqt-release.git";
      rev = "80e2f847182d27477df1159a9022413c4fcfd186";
      hash = "sha256-H/iAtFmK7PVUTchMY43rrjinZ8FP5i2yivXA4MCdqZQ=";
    };
    rqt_py_console = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_py_console-release.git";
      rev = "7ee2c10f1fdbe6e5dc8fd76689d626cd9ea08d45";
      hash = "sha256-DmiST+nR2HDVS8cVQioQqII2/Kt+zIocmOUuhtsYGgY=";
    };
    rqt_reconfigure = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_reconfigure-release.git";
      rev = "a7fa894fe92c07f1c317c593830ae7d31bcc59ad";
      hash = "sha256-rtGFPpkjpqWFtwS3+dluHUc6chX6awVufZbN1zksUJM=";
    };
    rqt_robot_dashboard = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_robot_dashboard-release.git";
      rev = "9af87622aa4d2f3d538fb7353965bb5e49686d92";
      hash = "sha256-o2FskVGSpDLTcYD8PlfRgHpBlDa3UId/Xq+IlAvaZGY=";
    };
    rqt_robot_monitor = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_robot_monitor-release.git";
      rev = "1841f5ee767e52b37a7884478766445acad7b0a5";
      hash = "sha256-8SFE5pix0PTYkcufr7ovmE/HYmjWyGUdT073Kolmm4I=";
    };
    rqt_robot_steering = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_robot_steering-release.git";
      rev = "0bbc8ad54804819c3b35ca495bc285825d9a0b03";
      hash = "sha256-GQCdfFYxE/yR3Eostcf+T9VKwP2N45EzidAhXz5uVrw=";
    };
    rqt_runtime_monitor = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_runtime_monitor-release.git";
      rev = "f30d349549c838cdf2f7ff70e8e3c1d6c49c028f";
      hash = "sha256-7LyebmhKcj1ltMsj4LbDUxXX5v9ejuW4g4lIKitP28Q=";
    };
    rqt_service_caller = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_service_caller-release.git";
      rev = "e98925d2967198ddbd60bb9df580fd8dff129f3d";
      hash = "sha256-SkbOwJQXbq432M9Ogjsl0vOfVi+A35O7CltyhS/2lk8=";
    };
    rqt_shell = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_shell-release.git";
      rev = "6dc71a67c66af28d53271088c3eb566d31b883a6";
      hash = "sha256-PrYmOnuXCXtk1fSjFdX/IY2yiWZtCWukgeHIycvxpEY=";
    };
    rqt_srv = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_srv-release.git";
      rev = "a139307d763dc09a9e001d93d3ba014726cbbc9f";
      hash = "sha256-sb6x9v14bi5IE3lj47VcC0k7Asl/8ue55fXQ7xMqvDk=";
    };
    rqt_tf_tree = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_tf_tree-release.git";
      rev = "bddd1dc3eb5c80eae48a68e9701110d3e5832e0c";
      hash = "sha256-waY5Aa3qycV9O2EEFcztdpfuu+CFOxb42p7gI/IuZUU=";
    };
    rqt_topic = fetchgit {
      url = "https://github.com/ros2-gbp/rqt_topic-release.git";
      rev = "412d3f7290b3bfefc12c991589ca10044ea64252";
      hash = "sha256-1GUkB2gBxpzqAS5sfsL4iVAvf+2hN5+x2nwVzfr6ojQ=";
    };
    rsl = fetchgit {
      url = "https://github.com/ros2-gbp/RSL-release.git";
      rev = "c14d264098040784eb396e61c4d6a6ecdb0896cd";
      hash = "sha256-E8+8s6cFca2isl5g5q2OD85VomBeUfxjFIb3we5RUTA=";
    };
    rt_manipulators_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/rt_manipulators_cpp-release.git";
      rev = "bb2d50792170208923b06cfb63055701e6f17baa";
      hash = "sha256-YUJkRUHMLukwe5vyCr9kFhmmkkBb/ezgelg3SKIop3w=";
    };
    rt_manipulators_examples = fetchgit {
      url = "https://github.com/ros2-gbp/rt_manipulators_cpp-release.git";
      rev = "9a5622cda1c32f88ff33ebd4055f911337754914";
      hash = "sha256-dHVhmshZaD7z/hfD5tLkvXw6mehXEQSlivgKwLZ4YZM=";
    };
    rtabmap = fetchgit {
      url = "https://github.com/ros2-gbp/rtabmap-release.git";
      rev = "ae37d576b3b855a22451b2de5f4c0b388a133b63";
      hash = "sha256-YXZtoL9BQYi/2LvVgYzJI05rqcHv9qyf8N6S8s/P3pU=";
    };
    rtabmap_conversions = fetchgit {
      url = "https://github.com/introlab/rtabmap_ros-release.git";
      rev = "1c80b042346259ac95789f3c2ab2fa03ee3e1df9";
      hash = "sha256-dEGeaZyM+ar3xkk16/dwV+D6Ms6mJyf8IFNTI1wDkMY=";
    };
    rtabmap_demos = fetchgit {
      url = "https://github.com/introlab/rtabmap_ros-release.git";
      rev = "b03e98ea5ed3302f06616f751b8b28008f8259dd";
      hash = "sha256-Qc3vsvY2lKUl18v5CqCb2wJYULTdR3yzrxJhreb+Rp8=";
    };
    rtabmap_examples = fetchgit {
      url = "https://github.com/introlab/rtabmap_ros-release.git";
      rev = "8e54240bb15fee8d600556ea62c159d42c28a742";
      hash = "sha256-Whv9ONhmVWQMEXXoDXnouATtpKTsimj2slZlxGe7Irk=";
    };
    rtabmap_launch = fetchgit {
      url = "https://github.com/introlab/rtabmap_ros-release.git";
      rev = "5b675f991f98eb31cad809c61c7cf21d894a8fd8";
      hash = "sha256-Z77TwsTvqp+PI9PQg6x5I4H9l7ksyJJL4lJUuR/1r5o=";
    };
    rtabmap_msgs = fetchgit {
      url = "https://github.com/introlab/rtabmap_ros-release.git";
      rev = "4d39aa5b5a1f290d1cb15cf5bcb5807d3d46afaf";
      hash = "sha256-7rObv5E6b5U7ZbUP+lk1aN9ZgzKeUiOstReb9/Fsh1E=";
    };
    rtabmap_odom = fetchgit {
      url = "https://github.com/introlab/rtabmap_ros-release.git";
      rev = "8228b4545c1f1bd89b35e75b76bd67e652811627";
      hash = "sha256-0owvQSXMQlE+Y8M0UBrrHLvgxACHLwndNVXcFYqLy+Q=";
    };
    rtabmap_python = fetchgit {
      url = "https://github.com/introlab/rtabmap_ros-release.git";
      rev = "de46ffbf511fc67a7d4ed7d3138f3b371ad6ca33";
      hash = "sha256-BAkiOWJxqmytuyxSALt33GudRjNjfpI3j3J7DPMDkGA=";
    };
    rtabmap_ros = fetchgit {
      url = "https://github.com/introlab/rtabmap_ros-release.git";
      rev = "0657471e1353d3541447a2cc2b00271aaf695972";
      hash = "sha256-lfDi9FGpg8jfzKpZviZiOi54jP4uySFHVV8G+LS66U4=";
    };
    rtabmap_rviz_plugins = fetchgit {
      url = "https://github.com/introlab/rtabmap_ros-release.git";
      rev = "750b6e20a84a8b219576070925f9b702f747fd0f";
      hash = "sha256-Ym++aQZELnnolLYuvqRmWnuNRIB8vXO01qD/f8m1obs=";
    };
    rtabmap_slam = fetchgit {
      url = "https://github.com/introlab/rtabmap_ros-release.git";
      rev = "271d7374296cfcd4362c66996515bb0554a5c846";
      hash = "sha256-nM9+z9mrpkCrnnJSVLJUYIuweXDJspZHX8o0EmZCrvU=";
    };
    rtabmap_sync = fetchgit {
      url = "https://github.com/introlab/rtabmap_ros-release.git";
      rev = "0fb73881a470a5bc34724c36330ba679d5655975";
      hash = "sha256-13lwERfEWg8Suvpcc8KG0N2uR4sc0sQDx/ez9ejfXRI=";
    };
    rtabmap_util = fetchgit {
      url = "https://github.com/introlab/rtabmap_ros-release.git";
      rev = "4b74ac52332dd21c29a0d8f232c6cd8bf8a08d05";
      hash = "sha256-X6MImZAu8fZAHdLZC+BxBb89e/JoJTorg3+YXLtC0ns=";
    };
    rtabmap_viz = fetchgit {
      url = "https://github.com/introlab/rtabmap_ros-release.git";
      rev = "95c83fa8acd187ccd7be6fd8ca6682afb4c16722";
      hash = "sha256-i/Ejwe1AqGUqr5YWHKW0QY/bMtLwiWrtUd/S6kdAw8Q=";
    };
    rtcm_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rtcm_msgs-release.git";
      rev = "3e17a8d363a51a20a0d8d6eb0af1879e2adf2fee";
      hash = "sha256-5yTtIdGostlOwChSlKKL4JivCyK284g0KYZxB6GBtBY=";
    };
    rti_connext_dds_cmake_module = fetchgit {
      url = "https://github.com/ros2-gbp/rmw_connextdds-release.git";
      rev = "7fbef60e22d457caca1ed2d7306bc51a1368bf80";
      hash = "sha256-RykpmIJ4bETrDDRubjorqi5Ls7IWS+G547VkutoTzBg=";
    };
    rttest = fetchgit {
      url = "https://github.com/ros2-gbp/realtime_support-release.git";
      rev = "19a193b3d09bcc656177b5df025466181096871d";
      hash = "sha256-DzzoynuB0QJTrIEO6Y6FHd2Im5vR4jSXYc/6IFcZ65o=";
    };
    ruckig = fetchgit {
      url = "https://github.com/ros2-gbp/ruckig-release.git";
      rev = "6e6056ac1b4b292b397710b0c242512eaac92bd4";
      hash = "sha256-xzv0PejVB2frTXtd7fnF72E49MOQaARx6boGHYzyVnQ=";
    };
    rviz2 = fetchgit {
      url = "https://github.com/ros2-gbp/rviz-release.git";
      rev = "c2a2008c4b2b3547bf12afefc0ad63ab495d19fb";
      hash = "sha256-HuTaxttDGcp8bm19D66yoxHiG1qk4OJj47WZNFuhdOU=";
    };
    rviz_2d_overlay_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rviz_2d_overlay_plugins-release.git";
      rev = "d95be3fa314cb8cbff835e30b8558cd4cd04670a";
      hash = "sha256-5D74IzZ2A8JXaF9VzMxWd4WryX6A8MsUtaz+3ZRBFK4=";
    };
    rviz_2d_overlay_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/rviz_2d_overlay_plugins-release.git";
      rev = "ef1d6cf9de03f4c0db3a7f47cdde9ed6bde6208e";
      hash = "sha256-5KPjUMZyqAgUXuO87e61O6tTFRDf9qA4oCK56AOXXPE=";
    };
    rviz_assimp_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/rviz-release.git";
      rev = "172ad6402665d7e348d56e0c523c2f2f7c412e7b";
      hash = "sha256-u9JD903yl+ICtk2/KX/RkX+ZNHHP9vcdPE/8fZLG/eo=";
    };
    rviz_common = fetchgit {
      url = "https://github.com/ros2-gbp/rviz-release.git";
      rev = "416a89affad7b458afd88e87a5f2e6224d19395a";
      hash = "sha256-dHNDb5/9g9jE9i/hOYlQGNqVeOdceLjpfBDhqba0Z9I=";
    };
    rviz_default_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/rviz-release.git";
      rev = "9a1167cd2978f5fd0b0c06c4b8b18de88eebf3f1";
      hash = "sha256-+ZqUYfk4OxL/BW/woH4t/Nz6PiBapRm7SP5PUk7ji70=";
    };
    rviz_imu_plugin = fetchgit {
      url = "https://github.com/ros2-gbp/imu_tools-release.git";
      rev = "53a0f03e5450e57519355b0c71ba1d9eddeac71d";
      hash = "sha256-PTP1jn127e3dBx0iCfyHU2gcO709T+HE0I+CZyIHCJY=";
    };
    rviz_ogre_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/rviz-release.git";
      rev = "4d4dec1a3a3d4a9c3a39b046f132b23381835a4b";
      hash = "sha256-1DkCwlnSLGJcNPhyfFqcXN6Iu+zp5KnCobzsEDH5/DI=";
    };
    rviz_rendering = fetchgit {
      url = "https://github.com/ros2-gbp/rviz-release.git";
      rev = "e574fce37e5946b318cc3128ad1d3a844545c20a";
      hash = "sha256-IFWE/1W66Kp2cdIr7vA592jOAPG/KD/Uz+ql4yv84EA=";
    };
    rviz_rendering_tests = fetchgit {
      url = "https://github.com/ros2-gbp/rviz-release.git";
      rev = "1e6f76886d7c4708eba32c16be5ba92dd04034c2";
      hash = "sha256-eusKrbZwgdP/jsUXsg9JZCeUt+8ibtBGJTkvu2jsDpY=";
    };
    rviz_satellite = fetchgit {
      url = "https://github.com/nobleo/rviz_satellite-release.git";
      rev = "6ac71e291cd5d616e2369c91b69abd5b442d3999";
      hash = "sha256-1btiDvrU9NYm/CgsMa3Vwu6Fv4zgHc7A7OhZgKy8MBU=";
    };
    rviz_visual_testing_framework = fetchgit {
      url = "https://github.com/ros2-gbp/rviz-release.git";
      rev = "1740c69709f4d9c9dbbdca7ab78a6efabc65c2d4";
      hash = "sha256-/t1vSUdYOrL2gikocaCfD6WubpGLRsQznGq8biSZc3Q=";
    };
    rviz_visual_tools = fetchgit {
      url = "https://github.com/ros2-gbp/rviz_visual_tools-release.git";
      rev = "2e05b97387c407ea702931822cc02c3f29dea126";
      hash = "sha256-tVfPKQNpM962nm3D4nPbalanEed98pZ6A4v4ySC79yI=";
    };
    sdformat_test_files = fetchgit {
      url = "https://github.com/ros2-gbp/sdformat_urdf-release.git";
      rev = "8c299f750f424fdc4c3f0f040c8f9cf222b0299d";
      hash = "sha256-mSjrs/uxaDwGlXpCRMQumT42Y93HGoSMp9QYSk9aTD8=";
    };
    sdformat_urdf = fetchgit {
      url = "https://github.com/ros2-gbp/sdformat_urdf-release.git";
      rev = "d923456c7a3c40a1cf8b8c32e52f9838c95ddfde";
      hash = "sha256-QJfr03O+ead4T8Bj6BazQbRKJsmW3J6I9g1XWtun6Us=";
    };
    sdformat_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/sdformat_vendor-release.git";
      rev = "ebe0c8907d1749bd850df6a666146b3d3d9fd6c1";
      hash = "sha256-GwOiu23aLX3/LEPAjrez3QVsWSSyhhLrslgr3vPt2+w=";
    };
    sdl2_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/joystick_drivers-release.git";
      rev = "bf998888b1b75e03fe402bfefb8ccb9f0649de5a";
      hash = "sha256-FPIFbwhynn0Z2eddBdAgdM0oExj1aEQTgF2n59zGr40=";
    };
    self_test = fetchgit {
      url = "https://github.com/ros2-gbp/diagnostics-release.git";
      rev = "9b0bf8b563f17fa5110f9f2da50350cca6cb5a7d";
      hash = "sha256-ED7WqjWa1krXRgNjC/fMN/XOpLbGF9lcMJuE5qh52dw=";
    };
    sensor_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/common_interfaces-release.git";
      rev = "25593c7bb356cae9badacb11b6598a0b1b639901";
      hash = "sha256-hszAgR55yQyD6P85LEtYsMVCaf4OpnWk0gS5G8tjEdk=";
    };
    sensor_msgs_py = fetchgit {
      url = "https://github.com/ros2-gbp/common_interfaces-release.git";
      rev = "6c3323e5153a1c9c6dd9f54bdbbb039fde31873a";
      hash = "sha256-RyIafHfr3e2zSJlKB8OoYweMJErq7q9KrJqK/fGSmLo=";
    };
    septentrio_gnss_driver = fetchgit {
      url = "https://github.com/ros2-gbp/septentrio_gnss_driver_ros2-release.git";
      rev = "cafe531cf88f44cd615c78b2951163c8d57f31ff";
      hash = "sha256-Niu7hKw+RoX5arAfszLzwSA7s386DFt5rV01ULTfYrs=";
    };
    serial_driver = fetchgit {
      url = "https://github.com/ros2-gbp/transport_drivers-release.git";
      rev = "cf792907df67d7d479e8c5bd069e0a148657da03";
      hash = "sha256-1Oc6jtsGEX0Jaxqs7jdlxu/nZJxZPxvagRST+L9bdwI=";
    };
    service_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rcl_interfaces-release.git";
      rev = "12ada02c781e18aef01dc69973206662fc87ab4b";
      hash = "sha256-SovP7aJEnj43eO5TW1SAqqteW/DQtfYWtr9rP9mJn/k=";
    };
    shape_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/common_interfaces-release.git";
      rev = "79f7106056e38493dc72b9ab32567657a1b2bead";
      hash = "sha256-rs1GqK5oBr04xDLis20P/Ym2CrxVsS+UgNrnVCMDKb0=";
    };
    shared_queues_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "b6134b7292a65ce2151f04b7b7faa20cbb4f1df1";
      hash = "sha256-BrWsI3yFX/Qg+13ZAMwMXRBH47qhG+nVbHpuNHNjM0k=";
    };
    sick_safevisionary_base = fetchgit {
      url = "https://github.com/ros2-gbp/sick_safevisionary_base-release.git";
      rev = "1ab4169f71f6ad75a790b1c8ec712bea04d694d6";
      hash = "sha256-EMtEy8XLykxcLHYCPgk6Ralivtfddx0U4aPIsdnxSlc=";
    };
    sick_safevisionary_driver = fetchgit {
      url = "https://github.com/ros2-gbp/sick_safevisionary_ros2-release.git";
      rev = "88de2851a6fc1871b02acf8d5984603a7609b555";
      hash = "sha256-+JkVULStq1kUDR609jEbn44uWsjZ4O5x1ogtxSHoM8Y=";
    };
    sick_safevisionary_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/sick_safevisionary_ros2-release.git";
      rev = "93072eb8bf6cd41df6e4e8a173b0abdc0c400325";
      hash = "sha256-7qiJXkBhZMJSxhYrVSgDCUBskK0DEX4aQAixkvpRaP4=";
    };
    sick_safevisionary_tests = fetchgit {
      url = "https://github.com/ros2-gbp/sick_safevisionary_ros2-release.git";
      rev = "b65cb75ceb9c334712556b496bec8b5e36f089ec";
      hash = "sha256-Q8HR5ihqZXIb5vP+goYKCgxgf635GsyPBnh2t5oPkgI=";
    };
    sick_scan_xd = fetchgit {
      url = "https://github.com/ros2-gbp/sick_scan_xd-release.git";
      rev = "920e922b859d04cc93976e6f5cfca7f456350265";
      hash = "sha256-BsB3KIayNL+JY+49OzB9j4yJ7VZdJiosk2Oqbu3V6OI=";
    };
    simple_actions = fetchgit {
      url = "https://github.com/ros2-gbp/simple_actions-release.git";
      rev = "c7252cf610f126324e386373d40978d43cd29abe";
      hash = "sha256-g9TlS44Lr3KdSWRB3wnibXGgKPYkTq996gaI+anSw7g=";
    };
    simple_launch = fetchgit {
      url = "https://github.com/ros2-gbp/simple_launch-release.git";
      rev = "1f59783c83fbc769bcce5b61cd78b57bcdcdf905";
      hash = "sha256-qGRcyWgJ5d0NzsUAXpLLeRHBywF3IPhCiLyA5ZOLBqs=";
    };
    simulation = fetchgit {
      url = "https://github.com/ros2-gbp/variants-release.git";
      rev = "a3513af0b98ac4456aeeb919c038ab17b02c3fbb";
      hash = "sha256-F5Xdwf30yp+svq3b6jwcfeMbm+oLQKi9hw3ZkozBy68=";
    };
    slam_toolbox = fetchgit {
      url = "https://github.com/SteveMacenski/slam_toolbox-release.git";
      rev = "1e73a216a61722acd0b77d7ef25759db4b183dc4";
      hash = "sha256-XuG5qBercHsZopAr/jEnaSer+0FrgZ0DhIdnHt+thkE=";
    };
    slider_publisher = fetchgit {
      url = "https://github.com/ros2-gbp/slider_publisher-release.git";
      rev = "8987416044584eb2e10d013016a80b431a5f0265";
      hash = "sha256-t3ye55W5XqkQUd/eAabhQKJUazIAi3ly0BsO7vpuHu4=";
    };
    smach = fetchgit {
      url = "https://github.com/ros2-gbp/executive_smach-release.git";
      rev = "b15e2d1392843c513a463dce44ef17bf45b1c103";
      hash = "sha256-vyRxq6EM6nOhjwQFIV+ikGPs5Wr0pb7e9iAq8+R8cwo=";
    };
    smach_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/executive_smach-release.git";
      rev = "e4906ce6c6e13e5c028b738e8f00b7b518a5d76e";
      hash = "sha256-GO/kVPGJMyEujXHxScev2o0WXzzzWX0rZHWTMJTPCwg=";
    };
    smach_ros = fetchgit {
      url = "https://github.com/ros2-gbp/executive_smach-release.git";
      rev = "d16b3bef96ff7b3cac35e8f8ec771f6503498842";
      hash = "sha256-T0yVHzrZV1N2ejjOTANcS1gUlVKrvGgoMD+On5KNoHo=";
    };
    smclib = fetchgit {
      url = "https://github.com/ros2-gbp/bond_core-release.git";
      rev = "1790dcfb4e6720bdaf5630dd1a47c4d73ca5f255";
      hash = "sha256-0GdXtzthCDeBP6DCt4Gd6e86nzEmrdCJNLuxyDTGGK4=";
    };
    snowbot_operating_system = fetchgit {
      url = "https://github.com/ros2-gbp/snowbot_release.git";
      rev = "df8b6b2679855c245fb9cb9e6f80612438815599";
      hash = "sha256-jsc6W+E4XVtTLGd+ZSn45ChfZmV6/c9nUg1FpqA6d8s=";
    };
    soccer_geometry_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/soccer_interfaces-release.git";
      rev = "889363aa5db8950eaa22156ff7e66d46ab9acc61";
      hash = "sha256-gMowKNUK3HPz9hWgGtJ8VWq8btZTIYly2Ydi23VUsdA=";
    };
    soccer_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/soccer_interfaces-release.git";
      rev = "487f6200cb1c1e90d8270b7631a4a64a8236a437";
      hash = "sha256-Qyw6VmsZdw+IhJM06b4fGhTFvxrT63DWIjEjqtmU8oI=";
    };
    soccer_model_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/soccer_interfaces-release.git";
      rev = "ebf0e34af5420aeb209be524c5792b13da56c101";
      hash = "sha256-CGzaSmn0XKOI2Vq0FoGUiKLfqeE3RryN6A+WRhir8+E=";
    };
    soccer_vision_2d_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/soccer_interfaces-release.git";
      rev = "c7037ba9eb39939b2e5008c671d14566ff53b9cc";
      hash = "sha256-em8g5g678f+FbD3DqO9JWOOeAsMRCYf+KT4Uo7ZFh1g=";
    };
    soccer_vision_3d_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/soccer_interfaces-release.git";
      rev = "53e5c907b54c8767acd236cc367a537656904b95";
      hash = "sha256-mefLwquylSQ8WewNihJ2SMPAIUXP2T1Ye+Q7n9q7b8c=";
    };
    soccer_vision_3d_rviz_markers = fetchgit {
      url = "https://github.com/ros2-gbp/soccer_vision_3d_rviz_markers-release.git";
      rev = "0f9e4a04b95b9a0bb158ed0d6529cd8ce72cea53";
      hash = "sha256-69FCCxAxZa6hSkchZAWrsNb7uNruIRhwkIConj14Ue4=";
    };
    soccer_vision_attribute_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/soccer_interfaces-release.git";
      rev = "f44eead2de262caf02988809719f54cf89f5d8d7";
      hash = "sha256-9qP2U6SUU5zrVvt+xkbzRF6iJCxm6YSfeUBgsj29Hf8=";
    };
    sol_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/sol_vendor-release.git";
      rev = "7032049f388b7782d9c969c8b11371e07c40d61e";
      hash = "sha256-KyC2VV3zPu3hKaonkepXXm9mAKqTakBjLDSdKBEh4Os=";
    };
    sophus = fetchgit {
      url = "https://github.com/ros2-gbp/sophus-release.git";
      rev = "39c729040cd2c3720879b0df85f162c4ac789877";
      hash = "sha256-xTS2ysDs9SSKpvKrxnhooJVtfpwRvYCuMpbFc4skbDM=";
    };
    spacenav = fetchgit {
      url = "https://github.com/ros2-gbp/joystick_drivers-release.git";
      rev = "7d9a402af6c74eeef6f7290a9becb946963bc807";
      hash = "sha256-5WXkdmHcAdaPaMSMNcTfScbDq9VNmFSb7jofUAAHyAk=";
    };
    spatio_temporal_voxel_layer = fetchgit {
      url = "https://github.com/SteveMacenski/spatio_temporal_voxel_layer-release.git";
      rev = "fa95e25ba827e82c9082eb881e59882df0c0c2a1";
      hash = "sha256-+NmReRrslE0WWtMJqEOVmTO6gFA1Z5YGNOHxksUsQrw=";
    };
    spdlog_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/spdlog_vendor-release.git";
      rev = "5044abc0cdde628dce0ebf8cff7f571d27878c14";
      hash = "sha256-0BY6luUFbdOJPREolo3FR1ZYPXi1nZG1OB84R+VkFiQ=";
    };
    spinnaker_camera_driver = fetchgit {
      url = "https://github.com/ros2-gbp/flir_camera_driver-release.git";
      rev = "7c6a3104f5cc1e7f807d2533cda87da5bf75e416";
      hash = "sha256-MTLkSEO/NkdU6Fa/1zhCvcWbcyRFQ58qqX66+pGBmdk=";
    };
    spinnaker_synchronized_camera_driver = fetchgit {
      url = "https://github.com/ros2-gbp/flir_camera_driver-release.git";
      rev = "35e568dc85cd1e7f018ed43e0fee98b7399419c8";
      hash = "sha256-00at/VcWxA8N7f7Y/CHRtm6A7EnyL3p5j1qVoksz4R4=";
    };
    splsm_7 = fetchgit {
      url = "https://github.com/ros2-gbp/r2r_spl-release.git";
      rev = "ad902c08fe13db07fdacf98d2f6e641fda5fea40";
      hash = "sha256-mJ9R0CRbOAigpJZL+lmcW5OrC4wfPc83FiMx8+NKjwY=";
    };
    splsm_7_conversion = fetchgit {
      url = "https://github.com/ros2-gbp/r2r_spl-release.git";
      rev = "dfb857922a764e55bb98304008cfc9066660c501";
      hash = "sha256-hot8TlsdjVjgyVkdoUFaIy47vVP67OUYUwJHsdfSm0M=";
    };
    sqlite3_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "fbfd03994971b73ad7da2680adf4ca01bd9855b1";
      hash = "sha256-nhY+4MfnCPiP6YX0UpUyLfMMaDi9VhUOX6ePMFU2IaA=";
    };
    srdfdom = fetchgit {
      url = "https://github.com/ros2-gbp/srdfdom-release.git";
      rev = "6817f4b07d5c39f06de2a713efb0b3264e8cb10c";
      hash = "sha256-4SrjgL5tauV2LvLisilSnXwyD2qTdhVdYDtH8D/69yg=";
    };
    sros2 = fetchgit {
      url = "https://github.com/ros2-gbp/sros2-release.git";
      rev = "3a92a9b9cc2f7dcf45cb81837d02f4bd4b1025d5";
      hash = "sha256-AFBegFKnVMDaE0Y8vtfiJv+gfqwvz088nnAIG4U5u50=";
    };
    sros2_cmake = fetchgit {
      url = "https://github.com/ros2-gbp/sros2-release.git";
      rev = "1a083aac5944c3e33072b5dd99adf8d9d1c3b076";
      hash = "sha256-Lk74feQcy27POAavf9+1v/TP/9b5J0tRA/mb7qTBdH0=";
    };
    statistics_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rcl_interfaces-release.git";
      rev = "bf5c981ef3868ed225cf3f713e4724c67397ae4c";
      hash = "sha256-UcbiXBuVNpueB6FiqFoeqrJbmQb7HE6x1f4ZWlQ2U7U=";
    };
    std_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/common_interfaces-release.git";
      rev = "15bc7a0227f9937e286719154fdba18501cb7b11";
      hash = "sha256-qujzcYOInYZiNTUVuim1nJOC0QVdfbwKE8n0e2qBsco=";
    };
    std_srvs = fetchgit {
      url = "https://github.com/ros2-gbp/common_interfaces-release.git";
      rev = "8fc86bed667466d9fc6f8d56c36be60bcc6f59f2";
      hash = "sha256-vZj9EDZ4Q3C4tcVlUQ7EJdMmxFJ6yAnuNdvztWjedfA=";
    };
    steering_controllers_library = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "e1fda2d391861a1781753dffd4ecd2e6133415c8";
      hash = "sha256-N7faMoeoc/r6cclT1sYsXGiw68twF7ho7QZKznL2gHo=";
    };
    steering_functions = fetchgit {
      url = "https://github.com/ros2-gbp/steering_functions-release.git";
      rev = "6bc9fd51c83a1040d0e1a7f66aca7dfa3a716611";
      hash = "sha256-pU2fKTdPvxp9CHgQpy478rFkO/GvfwD54b2lnQlOAcE=";
    };
    stereo_image_proc = fetchgit {
      url = "https://github.com/ros2-gbp/image_pipeline-release.git";
      rev = "a3af331da66a1df19d2d99e2bbfde8a2d6cee0a6";
      hash = "sha256-TWZXcALl+wi/r+1VPaW+dJSSDE1+yo3WE7gY9lB9Oos=";
    };
    stereo_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/common_interfaces-release.git";
      rev = "ac381a89e37baac54f65169fb5eadfb197b5788f";
      hash = "sha256-pslCBNIHA/ok2N2kdjY3FQeLs6/snomzRWKXWnE/iTc=";
    };
    stomp = fetchgit {
      url = "https://github.com/ros2-gbp/stomp-release.git";
      rev = "699543c259979d6b331206a37941d78cd3122b0e";
      hash = "sha256-SMIxIQFBhVkKNSvnxdsAWw5pg4rc6p5xSsSck1Ig4Y8=";
    };
    swri_cli_tools = fetchgit {
      url = "https://github.com/ros2-gbp/marti_common-release.git";
      rev = "a0e5e084aba56079a5ede4e19907b9ad8ac34ad6";
      hash = "sha256-QwxRWoZHoEeWtgjiih1KGtL4z0gAytUMI9yLK2eIJ6Q=";
    };
    swri_console = fetchgit {
      url = "https://github.com/ros2-gbp/swri_console-release.git";
      rev = "20be76e51b6c435fc46410a6752bfab906339e97";
      hash = "sha256-zA1cDmzrE6co8sEykB922TKHYC0Dzkqfp9Re4OUxMqk=";
    };
    swri_console_util = fetchgit {
      url = "https://github.com/ros2-gbp/marti_common-release.git";
      rev = "a21ce415ca1c9f884e0ace562d6ffbf738ca5df7";
      hash = "sha256-KFD9ZDITUVdWMKo6Oul0LEf5o467diDWXltVYaRSLyQ=";
    };
    swri_dbw_interface = fetchgit {
      url = "https://github.com/ros2-gbp/marti_common-release.git";
      rev = "4c34a7399b0ed6f3585e2a3a8e1ec412a40e4584";
      hash = "sha256-R/3o8fpxmCNv/RZhQcYoxeioiuK0u0WprDMKuyYGpyc=";
    };
    swri_geometry_util = fetchgit {
      url = "https://github.com/ros2-gbp/marti_common-release.git";
      rev = "ff56e2b6f3c2f936455a4a3420fbe8f8d43cebe9";
      hash = "sha256-pz0GY5aY3hNn41PVQt01Ea+WrC/WQ0v6js4IpDasC0c=";
    };
    swri_image_util = fetchgit {
      url = "https://github.com/ros2-gbp/marti_common-release.git";
      rev = "cedd3a80526c4e68192bda1a2c2a602fda55b1d4";
      hash = "sha256-KZLr2L6b9CSpmepsGPkZ6D7FlyM9iUKwg7uPDQxfqK4=";
    };
    swri_math_util = fetchgit {
      url = "https://github.com/ros2-gbp/marti_common-release.git";
      rev = "21dc11b514efba72277c37121dae73d7fed1ad73";
      hash = "sha256-H/negEcGvBrltnGov5f1eOUia7jrj9xoYDkLioffbTg=";
    };
    swri_opencv_util = fetchgit {
      url = "https://github.com/ros2-gbp/marti_common-release.git";
      rev = "deb4f31aae1f85e8d468ebdef4390fc6bf5c7fff";
      hash = "sha256-O7uegvVK9JP7juWtlT41devO/YkgnTe3FUb0VYtDDZg=";
    };
    swri_prefix_tools = fetchgit {
      url = "https://github.com/ros2-gbp/marti_common-release.git";
      rev = "3ffb96b4159dc27cfe6a4ca5ec747627525fd14b";
      hash = "sha256-jIsfgQqTk62YMgEfLgaJB6ee4pZm5iTGxeQZ1Vi07zY=";
    };
    swri_roscpp = fetchgit {
      url = "https://github.com/ros2-gbp/marti_common-release.git";
      rev = "a23f24f1697a49e6bc3b7e427401dc2a84418186";
      hash = "sha256-IiiAye8pmAHZ4v2/7T46QwlTajRoH7m3RPlJjPuhNoY=";
    };
    swri_route_util = fetchgit {
      url = "https://github.com/ros2-gbp/marti_common-release.git";
      rev = "6645839538ba5012ccd1958753a59169043646f9";
      hash = "sha256-Opkx5/etJwnlusBl9vZeMF+M5msxpehmC4Cykze1gTQ=";
    };
    swri_serial_util = fetchgit {
      url = "https://github.com/ros2-gbp/marti_common-release.git";
      rev = "bbac0dfc7c9cb57508e663a6c0c6d59ff2b39e15";
      hash = "sha256-MtfpNlZ7vE6gIf3Fg5rtl/4sDegKFpKiyBrIFCwXJy8=";
    };
    swri_system_util = fetchgit {
      url = "https://github.com/ros2-gbp/marti_common-release.git";
      rev = "55947affbec6fac0d7d5404c825e83976cd6a25c";
      hash = "sha256-S3WYBS3mwgU0LQXSc43+46DAtHiOBbXgwl4IfjI5Fuo=";
    };
    swri_transform_util = fetchgit {
      url = "https://github.com/ros2-gbp/marti_common-release.git";
      rev = "0f1230b1c13063e9390695025cb4840edb4c719e";
      hash = "sha256-bC4r0nZwj85Y2JxDOl/WzHymbONWD96uLlidPbnTW1c=";
    };
    system_fingerprint = fetchgit {
      url = "https://github.com/ros2-gbp/ros_system_fingerprint-release.git";
      rev = "0dd0aeb274ee7e6ecb70a2bfa77ad6d0dd0503c2";
      hash = "sha256-swG8fwjiFc0LXSlbA6Lml0jlh/VyNS//insRqM01fr0=";
    };
    system_modes = fetchgit {
      url = "https://github.com/ros2-gbp/system_modes-release.git";
      rev = "fa0c72a8417d876e4a40d82d550d329fd85f9b8a";
      hash = "sha256-0KjnR6c32kc4yM0vwAGYI1LgRZn4tLfIZSO+UE2llbM=";
    };
    system_modes_examples = fetchgit {
      url = "https://github.com/ros2-gbp/system_modes-release.git";
      rev = "82dc72703a933e257875ff35ddd912ed010dc775";
      hash = "sha256-0kfAi8ExAnUicuzTFtWKNQwRZP8qipcdbz4XUrg7EQM=";
    };
    system_modes_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/system_modes-release.git";
      rev = "0ca34ba1a38941ce091a31331eb78be7520efec9";
      hash = "sha256-UcVnvMWo1lcz8PljlXg4m53YoUKsphq4TbfgB7Z3dgw=";
    };
    tango_icons_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/tango_icons_vendor-release.git";
      rev = "f39545a4d833fdda28ad1458496129de949c59d8";
      hash = "sha256-AojB2C4N8d91dNC3ZqCjPlxc7h6RQQwp4qO/FzDaujM=";
    };
    tcb_span = fetchgit {
      url = "https://github.com/ros2-gbp/cpp_polyfills-release.git";
      rev = "8995fcd50c0d65df37a701dac05b1d29f7db167e";
      hash = "sha256-61JrUYgWw+LJJmryzDfZte0H+hhzDbHqOY1wEyk996Q=";
    };
    teleop_tools = fetchgit {
      url = "https://github.com/ros2-gbp/teleop_tools-release.git";
      rev = "e6b979265d244329719510fe08fe55830e0e1222";
      hash = "sha256-WmN/i4ppTEs6mXUMJhIIuv+z4LYd+SuJ/61i+YUORhw=";
    };
    teleop_tools_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/teleop_tools-release.git";
      rev = "6fca1aa419b025c2373f8762dd312ead25b88c7e";
      hash = "sha256-3E7KDUY3Y1ahVWN0MvkVQcLut/HAjodHElxX2AGIdf8=";
    };
    teleop_twist_joy = fetchgit {
      url = "https://github.com/ros2-gbp/teleop_twist_joy-release.git";
      rev = "1a8356ff2ee1bc5a03aa2c3ab5bbdc6f85786a20";
      hash = "sha256-xwkPZBm3cKtKEe7pNLUfiL6oKZgjX5cLiIvMsB55dUs=";
    };
    teleop_twist_keyboard = fetchgit {
      url = "https://github.com/ros2-gbp/teleop_twist_keyboard-release.git";
      rev = "4a7be17b9cce71cb672485fb1e0afecf3bba628f";
      hash = "sha256-RIp2xSUZdrlSj/8rUnbFawM86Cz5qYfDOhW28D0mr3Q=";
    };
    tensorrt_cmake_module = fetchgit {
      url = "https://github.com/ros2-gbp/tensorrt_cmake_module-release.git";
      rev = "24346a131e0ffd199c767dd1582fdef9af42e19c";
      hash = "sha256-S620gK89qsxhq1mo2yFSZCD1LP45mJBLXJbCTiT5VZk=";
    };
    test_apex_test_tools = fetchgit {
      url = "https://github.com/ros2-gbp/apex_test_tools-release.git";
      rev = "590ff5f45328eaf6331bcda20fc8edd30c7dd1a8";
      hash = "sha256-ZB2lhFknuQ+9fA1s+tCKrhHEUOnSLF2ogSsE0tVMrjE=";
    };
    test_interface_files = fetchgit {
      url = "https://github.com/ros2-gbp/test_interface_files-release.git";
      rev = "be3978a0de425a0be5cb3530800a3d34f2fe0027";
      hash = "sha256-55oYOWFsjeO86zmwokUyJ+y79la3zhFhSRObMo+Ihj4=";
    };
    test_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/rcl_interfaces-release.git";
      rev = "949ba51a791bdd1fcc9bee93eebad446d617a89d";
      hash = "sha256-7ptSwzU+Pw1ORsW5Zawq4gKz438/XaoJGhvKIYsrwI4=";
    };
    test_ros_gz_bridge = fetchgit {
      url = "https://github.com/ros2-gbp/ros_ign-release.git";
      rev = "2487d177cb224b9bd7e8dff64828af89bc2b3047";
      hash = "sha256-dic/P3GzPu3WjEDJrBEC9jmXDHWUh4hHoqbJoy3kLEc=";
    };
    tf2 = fetchgit {
      url = "https://github.com/ros2-gbp/geometry2-release.git";
      rev = "a3cde480eeca378e3175de43b0de526b31601694";
      hash = "sha256-Jb+UxsNLB0QSOmFav6rMyiyfkTm5BnHT7sHM+CmHdjk=";
    };
    tf2_2d = fetchgit {
      url = "https://github.com/ros2-gbp/tf2_2d-release.git";
      rev = "0fc501d87112fe781ad6945eb8c997ac317dbdd4";
      hash = "sha256-4ty09wIhIUq3vI2s5th/54iRL5jTzcYeDumtwzLqeVk=";
    };
    tf2_bullet = fetchgit {
      url = "https://github.com/ros2-gbp/geometry2-release.git";
      rev = "fa984b138aa51bfae7e066616cc08fd9291d9a50";
      hash = "sha256-NhnCyE+gRVQ55h676dZyFt7eYlqWLH5N4SkxF1/bcrM=";
    };
    tf2_eigen = fetchgit {
      url = "https://github.com/ros2-gbp/geometry2-release.git";
      rev = "fc5413683bbad63f20db3da1e788800683b3aa98";
      hash = "sha256-pgXSqFQCFNNoDKQSqj5Iy3zm1vPXuG7Hr8lFvCR3LG4=";
    };
    tf2_eigen_kdl = fetchgit {
      url = "https://github.com/ros2-gbp/geometry2-release.git";
      rev = "4e1452d3f3c580368b58bf60d5ca18eb6582245e";
      hash = "sha256-stCQiwa7ek5lXkoU9tbHpzGhQN2wglHvNDDTozRzUa0=";
    };
    tf2_geometry_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/geometry2-release.git";
      rev = "6212e5422373e1c5ec14e74e3ab1786906928261";
      hash = "sha256-+QObzKcNZ9ty7dJGQCLRJxrtxlgCbCr52/ETI6K3cQ0=";
    };
    tf2_kdl = fetchgit {
      url = "https://github.com/ros2-gbp/geometry2-release.git";
      rev = "9e4418691d02feb52e72dd3144cf4d52af70a38b";
      hash = "sha256-SIzfGQUX7Fpm4YXH6kf0jxFVNTxAIs9ucD2HRkZyfbg=";
    };
    tf2_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/geometry2-release.git";
      rev = "5c767d7a075e068aded2c228d6671f3776374269";
      hash = "sha256-xoTxLC/66w0tvk9hQtXTnCBf9YooZZ6tO6bXqqwJKmU=";
    };
    tf2_py = fetchgit {
      url = "https://github.com/ros2-gbp/geometry2-release.git";
      rev = "22c2b92c6a7e4e4c8bd5efc270e79169c44ef8e9";
      hash = "sha256-e1+9fb5F1BhljMWTl9g6uvKXX2MFX1U7Vi4m3YjK93k=";
    };
    tf2_ros = fetchgit {
      url = "https://github.com/ros2-gbp/geometry2-release.git";
      rev = "10a3a820949d0e09cbabff6c396a0d4f7ced4163";
      hash = "sha256-ZnrXlbFoU/tpV3oVRCAjkypRda3o8UGWCBJHJVaM3FA=";
    };
    tf2_ros_py = fetchgit {
      url = "https://github.com/ros2-gbp/geometry2-release.git";
      rev = "4d145d4799c00815612cd8636f4ca17f8222aeeb";
      hash = "sha256-mVPYq8A85vSLPh6r8Qti+YKZ9dJBzIkHatfi4nndSKA=";
    };
    tf2_sensor_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/geometry2-release.git";
      rev = "1ab7128d051887663cf363c6c4c72ae8ce2feb14";
      hash = "sha256-5Tzg7LDYc2p/MY2jUUNXphcoUddtSYTQcj4pWt7m6G4=";
    };
    tf2_tools = fetchgit {
      url = "https://github.com/ros2-gbp/geometry2-release.git";
      rev = "985d79ecc02978c993c3db46f636a34a43475721";
      hash = "sha256-dHtVvaKNOt1mxXBgaHpNzOjkyZV7NnP1S+DEbqkPvLg=";
    };
    tf_transformations = fetchgit {
      url = "https://github.com/ros2-gbp/tf_transformations_release.git";
      rev = "0c390a36be721638d407fe58ccf6248d8f2c447c";
      hash = "sha256-ZpntCNRY//B8eLWdIgouelBtxzP77cHw4dIl0MVnAig=";
    };
    theora_image_transport = fetchgit {
      url = "https://github.com/ros2-gbp/image_transport_plugins-release.git";
      rev = "37f0fb21a5d86a18a5369296ac4e861e1006023d";
      hash = "sha256-BB3cBZFrc8n9PVh367lTsIVaFurWdmVaFE16Dwmjf7o=";
    };
    tile_map = fetchgit {
      url = "https://github.com/ros2-gbp/mapviz-release.git";
      rev = "1b3beab509ebdbe12474ad403d078ff79bc7441a";
      hash = "sha256-0iUL8wMHfRRc8jU2qyjNoCspfh4GFBeQQhI2FwAgF9Q=";
    };
    tinyspline_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/tinyspline_vendor-release.git";
      rev = "a06565ed4aff7d2c19a4a058ea3f43323075b2ab";
      hash = "sha256-mQi06924EtNw7quRVGSQDJ2EFYqUCOsq37JO/eH/gJE=";
    };
    tinyxml2_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/tinyxml2_vendor-release.git";
      rev = "155ed531ad0a75b6f9e1d1ee39cd80fb47e9e341";
      hash = "sha256-ptCYnrl38I2LTVvOgSO8OXjxfgGAen17kQSYDOgZZRQ=";
    };
    tinyxml_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/tinyxml_vendor-release.git";
      rev = "d8b6f008b165ed9bca9410f49ca500a2c865933e";
      hash = "sha256-dUN/DADvU7TSwxQ/YcI/RcFlAYZ5JLYHb+TNOCpoO7k=";
    };
    tl_expected = fetchgit {
      url = "https://github.com/ros2-gbp/cpp_polyfills-release.git";
      rev = "1b7fd0d9944225b12ed2d8e8840e5608a04d1997";
      hash = "sha256-MRDjBU0WqHHPomrtLuNox0zVGvy6aMGTGO8WBV04bF8=";
    };
    tlsf = fetchgit {
      url = "https://github.com/ros2-gbp/tlsf-release.git";
      rev = "e5404343cc186e3237c2bae081bcc270af9eab45";
      hash = "sha256-y3cjlV+RU4Go9bap7m+OMAdNUie5Z4IAVrrp7tyyBpw=";
    };
    tlsf_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/realtime_support-release.git";
      rev = "8f622c3e255fcd12fc402170b139b3347ef75baf";
      hash = "sha256-cREflSs5wBd1xMcnVyiq5H1VkfQCR1AKoYN2/u4T7nQ=";
    };
    topic_based_ros2_control = fetchgit {
      url = "https://github.com/ros2-gbp/topic_based_ros2_control-release.git";
      rev = "26c2db948ee965568b80e037bfa57e6cb85f87a0";
      hash = "sha256-SEfc/iqNZsxrD/m/f0CKmIfgo4mFGeziwqBv/ZXj1lM=";
    };
    topic_monitor = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "af7208b4e17f17d95c61c6f91c91bf40a0da736b";
      hash = "sha256-GA57MYOZOEO3eCVy4eN3N65yCJ/KynuE2zh2EYSctqg=";
    };
    topic_statistics_demo = fetchgit {
      url = "https://github.com/ros2-gbp/demos-release.git";
      rev = "9f9d46f6fad31a53c63318737d5ae53dd344aa58";
      hash = "sha256-MGegxz/S1T1QKeNAg7dASD48fl1GCUaPgH6svDm7+VM=";
    };
    topic_tools = fetchgit {
      url = "https://github.com/ros2-gbp/topic_tools-release.git";
      rev = "68e05f5af89a64ceea47d51607b67066412ba43e";
      hash = "sha256-maSjbWC7ie5nCohC1Tg5QDoTDmSpwBflgbzy+o361jA=";
    };
    topic_tools_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/topic_tools-release.git";
      rev = "98d599dd5c5342f8ea185199494fcb8eee3966e6";
      hash = "sha256-9TKPSR2abtxNDVITE+J4rc1rAlwcR7UTk39XKk3OO6g=";
    };
    trac_ik = fetchgit {
      url = "https://github.com/ros2-gbp/trac_ik-release.git";
      rev = "92b5f9f982498bed253e7fe0aaccabb177014abb";
      hash = "sha256-Mi5zU70nYLOrjdiVRLXtTefB9IBLrHv8HpqzxWWRWas=";
    };
    trac_ik_kinematics_plugin = fetchgit {
      url = "https://github.com/ros2-gbp/trac_ik-release.git";
      rev = "e608e52b92b8e9306bc8ef4ae7488bc8c90350df";
      hash = "sha256-Xj4omXPV8GY+CWCUvSBOT33WTxVQiW0A8N57S5bpDNo=";
    };
    trac_ik_lib = fetchgit {
      url = "https://github.com/ros2-gbp/trac_ik-release.git";
      rev = "7caceeb979beee59aa99202a48575b16fc72918c";
      hash = "sha256-RHtJG5zWq6hgg1ylgO5tkkidAlHTg7G+wMzeoB8s6p8=";
    };
    tracetools = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_tracing-release.git";
      rev = "104e6fff7d00e77fa44ee75ce1a7f2539825a57f";
      hash = "sha256-i66LTM0n72UzAILrGIzm192MWomhPsgDwmWMyJJ7N4E=";
    };
    tracetools_acceleration = fetchgit {
      url = "https://github.com/ros2-gbp/tracetools_acceleration-release.git";
      rev = "5b343e424887e2d3703364dad8973a5a1c578660";
      hash = "sha256-8S7qrZQ1ohJoEVhAiMPHVKAD4lCTHCfRb1CD5hu4VWg=";
    };
    tracetools_analysis = fetchgit {
      url = "https://github.com/ros2-gbp/tracetools_analysis-release.git";
      rev = "64fed20f71cccc3ad9670dd36ce9066b14545df4";
      hash = "sha256-DPKjLLYf07C3NN4cCJqYVc28MZaOWmDTrLO+g2oyGwA=";
    };
    tracetools_image_pipeline = fetchgit {
      url = "https://github.com/ros2-gbp/image_pipeline-release.git";
      rev = "606f8cec0c02d7bcb6d9414973c7c0f4db260b48";
      hash = "sha256-UFmBcJUWC+6ID/+LST0b61wX8FtEy0nR8RaSoB8AEH8=";
    };
    tracetools_launch = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_tracing-release.git";
      rev = "7ebe7c6a5fc83d4247c47f5ee6889d1512725f53";
      hash = "sha256-S06JJzvBbISxt23CmHnbQIa8OxvO4unfdztMhznw8Zo=";
    };
    tracetools_read = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_tracing-release.git";
      rev = "d2400eeb280651f83520b2bc51ff80ab431cee28";
      hash = "sha256-NPKfGkVG8PaQ12F2IkOJV4Yxi7k5y226Coc7i9HaCQE=";
    };
    tracetools_test = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_tracing-release.git";
      rev = "7c218f661d8fdf1bb99003c64d3935a0083b6baf";
      hash = "sha256-RR+g7apKjiBL9Ww77YrDHd915WVymIZiQ2pMoV261rA=";
    };
    tracetools_trace = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_tracing-release.git";
      rev = "0b4fed251fb0f36011894f0c1579760c0c06aac4";
      hash = "sha256-ch4DMQjovwGHhTAxm3HVXqAW1kxHWbFkce6vxiSEEHw=";
    };
    trajectory_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/common_interfaces-release.git";
      rev = "c19aea6c1d72c99aa397289cfcd19213576948ea";
      hash = "sha256-7CDVCo1MH2SjEg2UKfl2N4aU4ygYOLtn8EhASs6E/pE=";
    };
    transmission_interface = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_control-release.git";
      rev = "d453c1d1bc25d54bc198257ba80b1e221b4f340d";
      hash = "sha256-ZYX/8dgm2qJEHxK1zLtV0V2wZFtd4liqGGTSzfUemuY=";
    };
    tricycle_controller = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "732c28f16338f12940deeb538df57cb11e20f464";
      hash = "sha256-qNjFgySXx7dB8KrOZCGh9J1cg7l988EVNr3LK5FvvH8=";
    };
    tricycle_steering_controller = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "1cf21f71dbd1a55d6f3445e3e92f2dc4404e3a45";
      hash = "sha256-l/VqGMUWzGWBFOkINM3jEQEUh8cD8EngcvWh5OCEyBU=";
    };
    turbojpeg_compressed_image_transport = fetchgit {
      url = "https://github.com/ros2-gbp/turbojpeg_compressed_image_transport-release.git";
      rev = "b06c8c2136a8797b7d8136c1e2eada128cb6dc1d";
      hash = "sha256-290O2WlZeS1IA0hOWZ0GYuYv0yt8SkAIxoz+P3YiVi8=";
    };
    turtle_tf2_cpp = fetchgit {
      url = "https://github.com/ros2-gbp/geometry_tutorials-release.git";
      rev = "84ebfba7496c66d357806790f5eacf643aab9d6f";
      hash = "sha256-BWaLdE7LYUa2RrtHLEw/kNJMeEFAaGhPyKC3i0rULS0=";
    };
    turtle_tf2_py = fetchgit {
      url = "https://github.com/ros2-gbp/geometry_tutorials-release.git";
      rev = "d9008b745c653f26866657c862bdfcabc147214c";
      hash = "sha256-YrWOCB771U+0NaRQRIHJxiMl6neFFGabMomNQawWucU=";
    };
    turtlebot3_fake_node = fetchgit {
      url = "https://github.com/ros2-gbp/turtlebot3_simulations-release.git";
      rev = "d51d854fb17df3f0dc2ab07fb0a086f8166bca5e";
      hash = "sha256-RC56Xh4EBNwDvXTRDOIw1kV2Q9fZB4veFuXoOZI3KZA=";
    };
    turtlebot3_gazebo = fetchgit {
      url = "https://github.com/ros2-gbp/turtlebot3_simulations-release.git";
      rev = "2052448a92e43ce2ed8565594d944ba638f78bd9";
      hash = "sha256-v6xnRm6M8asU/HVNlinmuyhrm7cTaIuA3aSHJzPeX6c=";
    };
    turtlebot3_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/turtlebot3_msgs-release.git";
      rev = "bdda58f589ea7a37beb28192ab4830cbed47537f";
      hash = "sha256-AfTC3VY2EzfPdav7DvNaPrB+NM5laHjJRrpSaWfb2Cw=";
    };
    turtlebot3_simulations = fetchgit {
      url = "https://github.com/ros2-gbp/turtlebot3_simulations-release.git";
      rev = "111af0a35692265f89f85e85fcf66e1d79278a1a";
      hash = "sha256-W+h1Fb5Y9PXr/M12d+YOfwxWR1QaArnZtIDmkpQ95xI=";
    };
    turtlesim = fetchgit {
      url = "https://github.com/ros2-gbp/ros_tutorials-release.git";
      rev = "dee596e8c4643aec9e5a6f93098371f93b5c8a02";
      hash = "sha256-+NwG+0EX/wiy8jFqWI7LoLitojrfxvVmRfY4duvQICU=";
    };
    tuw_geometry = fetchgit {
      url = "https://github.com/ros2-gbp/tuw_geometry-release.git";
      rev = "1ec8432bce0f5c3155a16a68991b6ec9963a2e12";
      hash = "sha256-3joMrg733OXs5YY23/zK9hQEuS0t3jlDrTEsNlr8C3Q=";
    };
    tvm_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/tvm_vendor-release.git";
      rev = "a415b453b01fd87caf6873f53e56e002c0354596";
      hash = "sha256-zx1sU7fTJXQqMOjy+jstX1Wq7B7zPKQCxlfV685GzSA=";
    };
    twist_mux = fetchgit {
      url = "https://github.com/ros2-gbp/twist_mux-release.git";
      rev = "025308b135ade9fed08cd4b41ec8148cfbf95f08";
      hash = "sha256-1U2LplwpCgA8qKz24xmFg4QH73v52isEVKL9Xck6OlA=";
    };
    twist_mux_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/twist_mux_msgs-release.git";
      rev = "ecd98d548cafd24f83f52d468fd27e7414787f05";
      hash = "sha256-ILOj3MizVk8mZox4k3XDTrx1z7e20vK78J+4k6OuLx8=";
    };
    twist_stamper = fetchgit {
      url = "https://github.com/ros2-gbp/twist_stamper-release.git";
      rev = "32213e5bb95ab8a6d3d5202f84bbad81ca359d37";
      hash = "sha256-AE3PKMNhcFfc7nbMllXSYBoKhQmRVHLCirRpDAEknEQ=";
    };
    type_description_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/rcl_interfaces-release.git";
      rev = "19c6e62afc4dc77010694e911d6f9c64373fa5fc";
      hash = "sha256-xUT46L5yIW2waiOgCH9yky8Mxz/On8iU3u1U4ZFJ5E4=";
    };
    ublox = fetchgit {
      url = "https://github.com/ros2-gbp/ublox-release.git";
      rev = "4de0d3af5abd05e2823b6947261f9c0fa83e6bfa";
      hash = "sha256-tCPY6Wu0TQ0Auvkx3xW6yyreMV7K0GruiyS4AZ29LtI=";
    };
    ublox_dgnss = fetchgit {
      url = "https://github.com/ros2-gbp/ublox_dgnss-release.git";
      rev = "060b0794d0fd88f9254604e252f6a729729409c7";
      hash = "sha256-6iGhNZeoJO63+6Z50d7QqpRpzqjKw+GVN0jKCKIK/Nw=";
    };
    ublox_dgnss_node = fetchgit {
      url = "https://github.com/ros2-gbp/ublox_dgnss-release.git";
      rev = "001b92b813abaee8702d11500b13c69e25056c54";
      hash = "sha256-bOuhkOtiT4rK2zGCZ617XN3SmyquVMoBum1EeYOnEOA=";
    };
    ublox_gps = fetchgit {
      url = "https://github.com/ros2-gbp/ublox-release.git";
      rev = "f5d7776b5a2919a6764491726d07c5370b2488a2";
      hash = "sha256-reZXChxPuNCtJNjWaATs7ozW63ldzYenGz4KQv8rJ1M=";
    };
    ublox_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/ublox-release.git";
      rev = "81c2cba3a487d742189f3022efc01fb794ef7034";
      hash = "sha256-y+4Wac/LAoobvoFcSIJ2PGoih6+tPbrMnRKVg6BxUgM=";
    };
    ublox_nav_sat_fix_hp_node = fetchgit {
      url = "https://github.com/ros2-gbp/ublox_dgnss-release.git";
      rev = "742d0d6b4ce9ad0d27ef86a0a88e48b9875d9430";
      hash = "sha256-tSiEDFsNto+4KxHDINiu/T57IUkWnrtle7tkbT+B+c0=";
    };
    ublox_serialization = fetchgit {
      url = "https://github.com/ros2-gbp/ublox-release.git";
      rev = "85717ac55a1696788eb7d8b2e85a01c76f471781";
      hash = "sha256-b2kP01irILk8Ct0RNRYsczUU7sgdAugMNejSpNFPdGE=";
    };
    ublox_ubx_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/ublox_dgnss-release.git";
      rev = "8888b0296db01863fed2e91a5337cf367fbb1b4e";
      hash = "sha256-GKe0RGAVTzo1s9aVoDdarKkspqxDfGs9JB6jM3JmrBo=";
    };
    ublox_ubx_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/ublox_dgnss-release.git";
      rev = "ab4207257e0bd9e858866e33b108aa90ba412e5a";
      hash = "sha256-ERggcaG4kBM5GwH5iM+42CzraKbcqjGc1IMqgeoBtrE=";
    };
    udp_driver = fetchgit {
      url = "https://github.com/ros2-gbp/transport_drivers-release.git";
      rev = "de1037c5bdee946ffc06ca634e2fd26f1333528a";
      hash = "sha256-ufshq3ku5f0OLD1L+CJhsfg8tSqLiOzmXueZGXDO9+4=";
    };
    udp_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/udp_msgs-release.git";
      rev = "2b677f6a0a80cdfccf8e993bf33291735a27a16f";
      hash = "sha256-wk0E8P+RhBD3LVdBSrcJHrF2CwKgOXysrKAiCDRiSPI=";
    };
    uncrustify_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/uncrustify_vendor-release.git";
      rev = "69a8304c634ed4b0872634acbc73bc1854510fff";
      hash = "sha256-yVmdBegpkwKPCWppTjfeJpLZn9LCFAPVsI0sy2mZvpw=";
    };
    unique_identifier_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/unique_identifier_msgs-release.git";
      rev = "8f82dd5c724dc222ac795630fcf8e32cc3c203b4";
      hash = "sha256-hqqiauecY9R4fqhisGA7JfZIm7RnqlOnb6/NhY2FsLg=";
    };
    ur = fetchgit {
      url = "https://github.com/ros2-gbp/Universal_Robots_ROS2_Driver-release.git";
      rev = "3620ca9b04bf6a1f7bddf3f416012416a4003c8f";
      hash = "sha256-0NEyX0W822yCqt08776hOLEb2WPobPVV/wnxuErMu4Y=";
    };
    ur_calibration = fetchgit {
      url = "https://github.com/ros2-gbp/Universal_Robots_ROS2_Driver-release.git";
      rev = "dbeea3e5e8aaa953ac27c9b25d8d3b0cd586c518";
      hash = "sha256-l/23eLZlX4YwiekZwz5uvP78YF31aoDhDE1NNrB5NL4=";
    };
    ur_client_library = fetchgit {
      url = "https://github.com/ros2-gbp/Universal_Robots_Client_Library-release.git";
      rev = "de61a833fadbd910f4e56e78b2c489a83addbbe7";
      hash = "sha256-ZtZ7wH2xmYhDXoGeeIA30rqkhK9iiy0RK2bOZDD27kY=";
    };
    ur_controllers = fetchgit {
      url = "https://github.com/ros2-gbp/Universal_Robots_ROS2_Driver-release.git";
      rev = "d9df7b89b533a3473e4dc9bf6f3c66bede780fb3";
      hash = "sha256-0BPgy6S53azNHrqcxx8wXjSaRXu4Cmb3mi4c/tPl9vk=";
    };
    ur_dashboard_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/Universal_Robots_ROS2_Driver-release.git";
      rev = "6e3303fa757eed9647e22c5a73d09b2b3f16004f";
      hash = "sha256-1xE8dXvdpadp+dNgWvwrnX01CzQV1qYRItilPNOfNJM=";
    };
    ur_description = fetchgit {
      url = "https://github.com/ros2-gbp/ur_description-release.git";
      rev = "218d3ee2bc0655a2899940cb4ea9200cf9f2cedf";
      hash = "sha256-vssJES2RNCkXKY4wCdby72la0Pzi2VhMXcxj+OwpPjU=";
    };
    ur_moveit_config = fetchgit {
      url = "https://github.com/ros2-gbp/Universal_Robots_ROS2_Driver-release.git";
      rev = "b888663c437c21092a7f5288338acb2b7e0aa2f7";
      hash = "sha256-qvvhMynDkpSdlYxJ64aBW7mSM+RCGLcVYQgnfyolTqY=";
    };
    ur_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/ur_msgs-release.git";
      rev = "e79a4194e4629a33eafcaf3751d560635ab8b591";
      hash = "sha256-JsglE/PolObyk2tuC9viw8JYmRlBJ8Ym7pjb5k+2EyQ=";
    };
    ur_robot_driver = fetchgit {
      url = "https://github.com/ros2-gbp/Universal_Robots_ROS2_Driver-release.git";
      rev = "9696f1f5caf99f3cd6291c8eb161b4243585e1ed";
      hash = "sha256-OgIUUC1PjnQnVLfa8moZEHN2QoZ4pwLHORlfpI38CDQ=";
    };
    urdf = fetchgit {
      url = "https://github.com/ros2-gbp/urdf-release.git";
      rev = "6d6d4f6455766d6b900ee8fe1b702d1f9ddc2303";
      hash = "sha256-Jbhvu/SUA7Ophk3dwW/j/f2HG3k2+/JlUH4E7yQmm8k=";
    };
    urdf_launch = fetchgit {
      url = "https://github.com/ros2-gbp/urdf_launch-release.git";
      rev = "720838f2c65e468e850c50069f8689faa23f125a";
      hash = "sha256-culhEaUIVzEURBnbx83ibUd3MceQsW3fVCfO2lKvIEQ=";
    };
    urdf_parser_plugin = fetchgit {
      url = "https://github.com/ros2-gbp/urdf-release.git";
      rev = "dad3497e5da0adf790e330ba745819f2f34c79b1";
      hash = "sha256-GCrcxy4++BTlYYQe+5+6IfQLfmKX/BCNMCgdYQ4Ttd4=";
    };
    urdf_tutorial = fetchgit {
      url = "https://github.com/ros2-gbp/urdf_tutorial-release.git";
      rev = "768fb035b41a3366d0bd4c5088643a7b8b411276";
      hash = "sha256-is2/qeO2wFsbEBxJ8Kf0u+3EkFtbejI8nZpazjXVziM=";
    };
    urdfdom = fetchgit {
      url = "https://github.com/ros2-gbp/urdfdom-release.git";
      rev = "e14e279e7907a5a05da330e07955eacd74163dee";
      hash = "sha256-g0ad4Vg+l8H2Pv4suUdF6WseUIeSWbeHIXY+Z5il3hc=";
    };
    urdfdom_headers = fetchgit {
      url = "https://github.com/ros2-gbp/urdfdom_headers-release.git";
      rev = "985a8402c401e898526b55c4eb23069276262d3d";
      hash = "sha256-TpmzYPZ+36H+OGt00z8kZqNs+L3JOcpDoVCAtONyQHw=";
    };
    urdfdom_py = fetchgit {
      url = "https://github.com/ros2-gbp/urdfdom_py-release.git";
      rev = "691b53d7cea6d00fed623d8273f8914d94de760c";
      hash = "sha256-XIQzb/e4G8nvo/oqr/BKyEWW1LAFi2kvQhIdXhJHG+Q=";
    };
    urg_c = fetchgit {
      url = "https://github.com/ros2-gbp/urg_c-release.git";
      rev = "83e66702d52c8fc284861f6a7064354003c773a3";
      hash = "sha256-d1sMppxyaGt43L2i5Eplkfen4tHz1t6hkC42mCbg0EM=";
    };
    urg_node = fetchgit {
      url = "https://github.com/ros2-gbp/urg_node-release.git";
      rev = "78cb9f69fb5e467d23badd16e04b0f751e1661a5";
      hash = "sha256-hz6upepfbgI1ToUr7XupzHvWBA7oKZk4QZTKCZwbMRI=";
    };
    urg_node_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/urg_node_msgs-release.git";
      rev = "b30be43c2ffbe917e1db13776e191089eebc5d17";
      hash = "sha256-IBl7J8akPgn5ni5/8kPGDOh4Fklto+RggWCIxGald/w=";
    };
    usb_cam = fetchgit {
      url = "https://github.com/ros2-gbp/usb_cam-release.git";
      rev = "9d2e5af7197f8021a289b5af78c7362eaf86fcb4";
      hash = "sha256-D4YStPBN+X8H0h6dWlVYgxuLYH5T7XWoyN0zLV5xN2E=";
    };
    v4l2_camera = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_v4l2_camera-release.git";
      rev = "ad3d1855e15fb303b725cb6522470ac178b88cb7";
      hash = "sha256-OaSGrGK1Lj3ZocwVMqc8WO1+T6jU/Ky2u2UwIpRHqwY=";
    };
    velocity_controllers = fetchgit {
      url = "https://github.com/ros2-gbp/ros2_controllers-release.git";
      rev = "0f2839f8dd63f2ab64ff8a5d808e2f3ee81198b2";
      hash = "sha256-5e8DEZJ9uOm/VzssBLhSmS5r4VxNgh3TJhvxG/tjWWk=";
    };
    velodyne = fetchgit {
      url = "https://github.com/ros2-gbp/velodyne-release.git";
      rev = "94c7ffc762f021d72b7295602f86f988b7e10160";
      hash = "sha256-Wr9qH+muZay+hoPYPI7pJRs11jWr4I26LKKsmaWL/4A=";
    };
    velodyne_description = fetchgit {
      url = "https://github.com/ros2-gbp/velodyne_simulator-release.git";
      rev = "6c81fe14afd36e842acd1c8017cf8bad4be1b7ba";
      hash = "sha256-vYig3j3DqPeSuEmGlDfvaH64IGdK8x/Yxx40R/Sv5j4=";
    };
    velodyne_driver = fetchgit {
      url = "https://github.com/ros2-gbp/velodyne-release.git";
      rev = "273cef3d0cf5364e2fd8995a89d9339892219530";
      hash = "sha256-9ysVDD9seg0Ss+VilOfbSs7ysVE2cxvVHaHR3kj+yKQ=";
    };
    velodyne_gazebo_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/velodyne_simulator-release.git";
      rev = "b222a126f184cb5576c83c2160991304727f5506";
      hash = "sha256-TFxh7d/7+m5z05amlR634rbaqZYAHs06SxUx3ZlM/NI=";
    };
    velodyne_laserscan = fetchgit {
      url = "https://github.com/ros2-gbp/velodyne-release.git";
      rev = "45af76c98be872e120796c9000e764a74205521d";
      hash = "sha256-rSKlfJVrsBMOdfguEVxqRmL3bNJiRLJsyy6iTcxdfKY=";
    };
    velodyne_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/velodyne-release.git";
      rev = "42dfd152f78b4edca4ed94c689332373b25a75b8";
      hash = "sha256-5Ak6A/tW8O/xY1B8LoKlY6GJfvga1cnajGYEKb7eKFo=";
    };
    velodyne_pointcloud = fetchgit {
      url = "https://github.com/ros2-gbp/velodyne-release.git";
      rev = "35739a33f8f260a755e03a4dfb6e170fca09b01e";
      hash = "sha256-hkvzuZw8cF8+XSVnSmlVOPLOTlg7vhtPoqd1gNK0mo8=";
    };
    velodyne_simulator = fetchgit {
      url = "https://github.com/ros2-gbp/velodyne_simulator-release.git";
      rev = "b06e73cc29075cbe9a2823e2a4e66f3f7954e987";
      hash = "sha256-Cu17nhMENoRv3E5+1HvQyw35oWBdZXPr9BQ3APt4Q0c=";
    };
    vision_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/vision_msgs-release.git";
      rev = "4e50b05d0740fa6777421eeeb574fe09616e08b8";
      hash = "sha256-3eI3eKu1pjYzfsXNxO7zGJoJNG6s9QU4SjIzqZvSNEI=";
    };
    vision_msgs_layers = fetchgit {
      url = "https://github.com/ros2-gbp/vision_msgs_layers-release.git";
      rev = "309c516bbf9f26bc20f61969a4962659f3b4ad3c";
      hash = "sha256-/AF+whPTfuXAf3vP/iP6XQf4SZFSuJjxb7oQ61JEiGs=";
    };
    vision_msgs_rviz_plugins = fetchgit {
      url = "https://github.com/ros2-gbp/vision_msgs-release.git";
      rev = "ebb9be37660ba670afd284336523d0de9dd2d0ee";
      hash = "sha256-If7mQ5EP7ZLB2EDPnUwciKX0dBfJa4PjuLnUH/ThGjM=";
    };
    vision_opencv = fetchgit {
      url = "https://github.com/ros2-gbp/vision_opencv-release.git";
      rev = "f0ccbe01e1591e4920c51cda62e6c7e805d85f94";
      hash = "sha256-PwJir9LBkybRtAwNZwGQr1ZxvFm4f+Id0qbqJNMEokk=";
    };
    visp = fetchgit {
      url = "https://github.com/ros2-gbp/visp-release.git";
      rev = "86defd59f99edec4f6d6772b8eaacbcb50cd175b";
      hash = "sha256-nMrdYB+RessgluLVeY69cP1jA4ucoAfcxyaNk1gyiSQ=";
    };
    visualization_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/common_interfaces-release.git";
      rev = "129eac1285a1f1df2afb99ef6e130968fa7f287c";
      hash = "sha256-9hi9fbYKjuHxGMO+Oiykg7g21bDIVNc5sK/cmoS3SEg=";
    };
    vitis_common = fetchgit {
      url = "https://github.com/ros2-gbp/vitis_common-release.git";
      rev = "28bbce9694fa95111d41b949a4c850475095198f";
      hash = "sha256-K6BliyL56las1cA019YmPWtcy/bVEejNPaYTF7SVYic=";
    };
    vrpn = fetchgit {
      url = "https://github.com/ros2-gbp/vrpn-release.git";
      rev = "0b68703610a8b017be5d3b8a773b7dfaa63103ab";
      hash = "sha256-2oOc4KpLGkfRc8tNDvM7xxjiHahtaoa5tGYhQEA7ViA=";
    };
    vrpn_mocap = fetchgit {
      url = "https://github.com/ros2-gbp/vrpn_mocap-release.git";
      rev = "27cc8261b8a41745047892d33a03c323ca565e8d";
      hash = "sha256-qTdwB+YAkx59icepyKJgOykWlxF7kMMSSJ/EKm+NVWs=";
    };
    warehouse_ros = fetchgit {
      url = "https://github.com/ros2-gbp/warehouse_ros-release.git";
      rev = "204f4f29c8c23a738da510ade7c9bb0a5bc21c02";
      hash = "sha256-89Ku8Zth68EgdS2DXIeyBjbm75ZItsbMZ0ZbKGlw6Fw=";
    };
    warehouse_ros_sqlite = fetchgit {
      url = "https://github.com/ros2-gbp/warehouse_ros_sqlite-release.git";
      rev = "9170d2ce31e93b0181aa16d138012d5a8d2f1bbe";
      hash = "sha256-JavUpzsS5NkJHqZj/lSXLsAOzHX5D/KrEHOhGM/AgLc=";
    };
    webots_ros2 = fetchgit {
      url = "https://github.com/ros2-gbp/webots_ros2-release.git";
      rev = "d12d4b3d1c7ea799b0b684d784cfb82e7c02a27e";
      hash = "sha256-FnL4qXJW0C5/hn98Yjy6D2xq3GL41+uGs/kOJsRDfDo=";
    };
    webots_ros2_control = fetchgit {
      url = "https://github.com/ros2-gbp/webots_ros2-release.git";
      rev = "4027989472e683b8645318976b4c9b1bc7576a44";
      hash = "sha256-Nrm3WBXZheyRsgEPMJeMYHwXvYmLNTnYc+Ej/MbBm9s=";
    };
    webots_ros2_driver = fetchgit {
      url = "https://github.com/ros2-gbp/webots_ros2-release.git";
      rev = "428c6fe4c0450a686fccd5585a3dc8b9fd7aa66e";
      hash = "sha256-jqW+Ul7u0gR5/P17vrbPrr8sdA1JMNrwXLDrQ2A/qCU=";
    };
    webots_ros2_epuck = fetchgit {
      url = "https://github.com/ros2-gbp/webots_ros2-release.git";
      rev = "5a65e4b33212b91932b1524d953eadbc489e4542";
      hash = "sha256-o97nQuIC2/e/wHlOabMJL6n2jqaQRDyW4R86jzKNuWQ=";
    };
    webots_ros2_importer = fetchgit {
      url = "https://github.com/ros2-gbp/webots_ros2-release.git";
      rev = "5a79f917912ed912e0c862386c2af0147952d741";
      hash = "sha256-M/JdzeCXvGMd8XJ+mMAROFdB9/DI3PB0yLEp/2WaiBg=";
    };
    webots_ros2_mavic = fetchgit {
      url = "https://github.com/ros2-gbp/webots_ros2-release.git";
      rev = "0134091045aebc1d30c4e9858ae45f31c61e15a4";
      hash = "sha256-bnvjSJHn0EQjiG7e82YYPx0NT3izcAePZyH/m41jsCw=";
    };
    webots_ros2_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/webots_ros2-release.git";
      rev = "d54eadb73a8e0772397c1b1ad23c887a0c970657";
      hash = "sha256-+Axcc0d4ZWp2K1lpbqpfMqsi8dIAei6MSY3mDxG4tig=";
    };
    webots_ros2_tesla = fetchgit {
      url = "https://github.com/ros2-gbp/webots_ros2-release.git";
      rev = "a8824b2d3a8abd457a92182aa04e8f02e6f439cd";
      hash = "sha256-9L+L6YPQY0KkUGa3kLYss/0WZP/aQIM2TqA4GyLOTJA=";
    };
    webots_ros2_tests = fetchgit {
      url = "https://github.com/ros2-gbp/webots_ros2-release.git";
      rev = "10a0e1ad9bdeb410e1fec2b4b225c7790003bdde";
      hash = "sha256-jTfBsM17BQ20ktL0Q46ChDPYOVrniigyrwY5E0xLh54=";
    };
    webots_ros2_tiago = fetchgit {
      url = "https://github.com/ros2-gbp/webots_ros2-release.git";
      rev = "5f79bc35578e158dbe043e3bdf1a3488f67847b1";
      hash = "sha256-/j9c90wP3C3iLTehu0VzCh+SlKfydx4Y/2SKhs0+HKg=";
    };
    webots_ros2_turtlebot = fetchgit {
      url = "https://github.com/ros2-gbp/webots_ros2-release.git";
      rev = "490605ec8d4f5070cf9423cef892d6494dddfda3";
      hash = "sha256-2TxF0QtrOF4IKuagK9U1DtFWGg2NtFAyNg+eBtH3pBk=";
    };
    webots_ros2_universal_robot = fetchgit {
      url = "https://github.com/ros2-gbp/webots_ros2-release.git";
      rev = "5f7b25a81c295060749623b131e80967ab725b59";
      hash = "sha256-WdqufTOh9CMdN2xgzdfADgOy3gdp6UUGQk2DKVldIqk=";
    };
    wiimote = fetchgit {
      url = "https://github.com/ros2-gbp/joystick_drivers-release.git";
      rev = "511ae4275bf3980a65c8af0f85f1e07748487b7e";
      hash = "sha256-WghWanmw0GXmNOdR/EHg1/ytIXNtIKstCe5hSIgpQ/s=";
    };
    wiimote_msgs = fetchgit {
      url = "https://github.com/ros2-gbp/joystick_drivers-release.git";
      rev = "bb120b9f12f8ab0bcf9f0f9ff6edf63c0658fac6";
      hash = "sha256-CTizMiNOKAwVd/bOq8yB5s7j00cvCsHVQotPLLXwrhI=";
    };
    xacro = fetchgit {
      url = "https://github.com/ros2-gbp/xacro-release.git";
      rev = "cf73bd6240c8b19a819681498f671f0c3ca80758";
      hash = "sha256-+93WLiVZewjzhzlEzSTG/zTjYx3+ri7uv+d7nO1xdX8=";
    };
    yaml_cpp_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/yaml_cpp_vendor-release.git";
      rev = "01001306eb4361d5de3bb06a749a72769884cadd";
      hash = "sha256-+IC1J62UuHdmOjU/1+W0xO33jgHhgeC3OZXA8E8ewDw=";
    };
    zbar_ros = fetchgit {
      url = "https://github.com/ros2-gbp/zbar_ros-release.git";
      rev = "bd55b012222f2a79ae26429d1990cc2e818de827";
      hash = "sha256-WZR9JZCFn6iUWjl8bwdsbzYpvyCWFaOPEmSgu8WuO0A=";
    };
    zbar_ros_interfaces = fetchgit {
      url = "https://github.com/ros2-gbp/zbar_ros-release.git";
      rev = "fe518793f51e19584dca90504bbcabd4e0e0a549";
      hash = "sha256-SsaDsbUZ3f1a3gVgspGXknM9wXhNvAAQ9iENzeuZQgI=";
    };
    zenoh_bridge_dds = fetchgit {
      url = "https://github.com/ros2-gbp/zenoh_bridge_dds-release.git";
      rev = "9bfadd4d1132571b6ac912a2f1746d1113cf5258";
      hash = "sha256-f7l+qyV5vSYtTVBV57bVQUV49odL51NPVkvmo00gimY=";
    };
    zlib_point_cloud_transport = fetchgit {
      url = "https://github.com/ros2-gbp/point_cloud_transport_plugins-release.git";
      rev = "2441ec9bf116a62674c254cfad1811611ab5df93";
      hash = "sha256-agDsR7TmrKKFOcq/JtuQdYftIST1fDPevcsQHzXS4EY=";
    };
    zmqpp_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/zmqpp_vendor-release.git";
      rev = "b0f21543a13623f4155fbfdc7f42b0e8083e6c1b";
      hash = "sha256-OHJpSJAua016kXvKxcD1ay55wprlXnqSL19uzz/el6w=";
    };
    zstd_image_transport = fetchgit {
      url = "https://github.com/ros2-gbp/image_transport_plugins-release.git";
      rev = "a41debc5378078af711e2f5068bcac5a59a9faab";
      hash = "sha256-PRNU4i/9CZjLK+jMkRkB/40VWLK7sx0Mu6j7qyLcjXE=";
    };
    zstd_point_cloud_transport = fetchgit {
      url = "https://github.com/ros2-gbp/point_cloud_transport_plugins-release.git";
      rev = "c15ceec307f19f2ad483bc708baba0fc605bcea3";
      hash = "sha256-xqUGi2WaBdkpLROw0Z/jDu3kWEBHgIHXw9/1LB/KP0c=";
    };
    zstd_vendor = fetchgit {
      url = "https://github.com/ros2-gbp/rosbag2-release.git";
      rev = "1f96118ede75e25677ac96b0578858c0fe9928c5";
      hash = "sha256-ZBGkZHVOL91El40Sdlx3iV+kSzn3SKzWHDLGGM9FnTQ=";
    };
  }) {};
in
{
  acado_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_lint_cmake,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "acado_vendor";
      version = "1.0.0-7";
      src = sources.acado_vendor;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ackermann_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "ackermann_msgs";
      version = "2.0.2-6";
      src = sources.ackermann_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ackermann_steering_controller = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      backward_ros,
      buildRosPackage,
      control_msgs,
      controller_interface,
      controller_manager,
      generate_parameter_library,
      hardware_interface,
      hardware_interface_testing,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      ros2_control_test_assets,
      std_srvs,
      steering_controllers_library,
    }:
    buildRosPackage {
      pname = "ackermann_steering_controller";
      version = "4.11.0-1";
      src = sources.ackermann_steering_controller;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ generate_parameter_library ];
      propagatedBuildInputs = [ backward_ros control_msgs controller_interface hardware_interface pluginlib rclcpp rclcpp_lifecycle std_srvs steering_controllers_library ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  action_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_core_generators,
      rosidl_core_runtime,
      service_msgs,
      unique_identifier_msgs,
    }:
    buildRosPackage {
      pname = "action_msgs";
      version = "2.0.2-2";
      src = sources.action_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_core_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_core_runtime service_msgs unique_identifier_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  action_tutorials_cpp = self.callPackage (
    {
      action_tutorials_interfaces,
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      rclcpp_action,
      rclcpp_components,
    }:
    buildRosPackage {
      pname = "action_tutorials_cpp";
      version = "0.33.4-1";
      src = sources.action_tutorials_cpp;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_tutorials_interfaces rclcpp rclcpp_action rclcpp_components ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  action_tutorials_interfaces = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "action_tutorials_interfaces";
      version = "0.33.4-1";
      src = sources.action_tutorials_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  action_tutorials_py = self.callPackage (
    {
      action_tutorials_interfaces,
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
      rclpy,
    }:
    buildRosPackage {
      pname = "action_tutorials_py";
      version = "0.33.4-1";
      src = sources.action_tutorials_py;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_tutorials_interfaces rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  actionlib_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "actionlib_msgs";
      version = "5.3.5-1";
      src = sources.actionlib_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  actuator_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "actuator_msgs";
      version = "0.0.1-4";
      src = sources.actuator_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  adaptive_component = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      rclcpp_components,
    }:
    buildRosPackage {
      pname = "adaptive_component";
      version = "0.2.1-5";
      src = sources.adaptive_component;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rclcpp_components ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  admittance_controller = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      backward_ros,
      buildRosPackage,
      control_msgs,
      control_toolbox,
      controller_interface,
      controller_manager,
      filters,
      generate_parameter_library,
      geometry_msgs,
      hardware_interface,
      hardware_interface_testing,
      joint_trajectory_controller,
      kinematics_interface,
      kinematics_interface_kdl,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      realtime_tools,
      ros2_control_test_assets,
      tf2,
      tf2_eigen,
      tf2_geometry_msgs,
      tf2_kdl,
      tf2_ros,
      trajectory_msgs,
    }:
    buildRosPackage {
      pname = "admittance_controller";
      version = "4.11.0-1";
      src = sources.admittance_controller;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ backward_ros control_msgs control_toolbox controller_interface filters generate_parameter_library geometry_msgs hardware_interface joint_trajectory_controller kinematics_interface pluginlib rclcpp rclcpp_lifecycle realtime_tools tf2 tf2_eigen tf2_geometry_msgs tf2_kdl tf2_ros trajectory_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_acceleration = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_acceleration";
      version = "0.2.0-5";
      src = sources.ament_acceleration;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_black = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_xmllint,
      buildPackages,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_black";
      version = "0.2.4-1";
      src = sources.ament_black;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.black buildPackages.python3Packages.unidiff ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.black python3Packages.unidiff ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_clang_format = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildPackages,
      buildRosPackage,
      clang,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_clang_format";
      version = "0.17.1-1";
      src = sources.ament_clang_format;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ clang buildPackages.python3Packages.pyyaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ clang python3Packages.pyyaml ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_clang_tidy = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildPackages,
      buildRosPackage,
      clang,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_clang_tidy";
      version = "0.17.1-1";
      src = sources.ament_clang_tidy;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ clang buildPackages.python3Packages.pyyaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ clang python3Packages.pyyaml ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_export_definitions,
      ament_cmake_export_dependencies,
      ament_cmake_export_include_directories,
      ament_cmake_export_interfaces,
      ament_cmake_export_libraries,
      ament_cmake_export_link_flags,
      ament_cmake_export_targets,
      ament_cmake_gen_version_h,
      ament_cmake_libraries,
      ament_cmake_python,
      ament_cmake_target_dependencies,
      ament_cmake_test,
      ament_cmake_version,
      buildRosPackage,
      cmake,
    }:
    buildRosPackage {
      pname = "ament_cmake";
      version = "2.5.2-1";
      src = sources.ament_cmake;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ament_cmake_export_definitions ament_cmake_export_dependencies ament_cmake_export_include_directories ament_cmake_export_interfaces ament_cmake_export_libraries ament_cmake_export_link_flags ament_cmake_export_targets ament_cmake_gen_version_h ament_cmake_libraries ament_cmake_python ament_cmake_target_dependencies ament_cmake_test ament_cmake_version cmake ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ament_cmake_export_definitions ament_cmake_export_dependencies ament_cmake_export_include_directories ament_cmake_export_interfaces ament_cmake_export_libraries ament_cmake_export_link_flags ament_cmake_export_targets ament_cmake_gen_version_h ament_cmake_libraries ament_cmake_python ament_cmake_target_dependencies ament_cmake_test ament_cmake_version cmake ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_auto = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_cmake_gtest,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_auto";
      version = "2.5.2-1";
      src = sources.ament_cmake_auto;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake ament_cmake_gmock ament_cmake_gtest ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake ament_cmake_gmock ament_cmake_gtest ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_black = self.callPackage (
    {
      ament_black,
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_xmllint,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_black";
      version = "0.2.4-1";
      src = sources.ament_cmake_black;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ ament_black ament_cmake_test ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_catch2 = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_test,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_catch2";
      version = "1.4.1-1";
      src = sources.ament_cmake_catch2;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ ament_cmake_test ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_clang_format = self.callPackage (
    {
      ament_clang_format,
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_clang_format";
      version = "0.17.1-1";
      src = sources.ament_cmake_clang_format;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ ament_clang_format ament_cmake_test ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_clang_tidy = self.callPackage (
    {
      ament_clang_tidy,
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_clang_tidy";
      version = "0.17.1-1";
      src = sources.ament_cmake_clang_tidy;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ ament_clang_tidy ament_cmake_test ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_copyright = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_copyright,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_copyright";
      version = "0.17.1-1";
      src = sources.ament_cmake_copyright;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ ament_cmake_test ament_copyright ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_core = self.callPackage (
    {
      ament_package,
      buildPackages,
      buildRosPackage,
      cmake,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_cmake_core";
      version = "2.5.2-1";
      src = sources.ament_cmake_core;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_package cmake buildPackages.python3Packages.catkin-pkg ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_package cmake python3Packages.catkin-pkg ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_cppcheck = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cppcheck,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_cppcheck";
      version = "0.17.1-1";
      src = sources.ament_cmake_cppcheck;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ament_cmake_test ament_cppcheck ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ament_cmake_test ament_cppcheck ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_cpplint = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cpplint,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_cpplint";
      version = "0.17.1-1";
      src = sources.ament_cmake_cpplint;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ ament_cmake_test ament_cpplint ];
      buildInputs = [ ament_cmake_core ];
      propagatedBuildInputs = [ ament_cmake_test ament_cpplint ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_export_definitions = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_export_definitions";
      version = "2.5.2-1";
      src = sources.ament_cmake_export_definitions;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_export_dependencies = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_libraries,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_export_dependencies";
      version = "2.5.2-1";
      src = sources.ament_cmake_export_dependencies;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ament_cmake_libraries ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ament_cmake_libraries ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_export_include_directories = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_export_include_directories";
      version = "2.5.2-1";
      src = sources.ament_cmake_export_include_directories;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_export_interfaces = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_export_libraries,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_export_interfaces";
      version = "2.5.2-1";
      src = sources.ament_cmake_export_interfaces;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ament_cmake_export_libraries ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ament_cmake_export_libraries ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_export_libraries = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_export_libraries";
      version = "2.5.2-1";
      src = sources.ament_cmake_export_libraries;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_export_link_flags = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_export_link_flags";
      version = "2.5.2-1";
      src = sources.ament_cmake_export_link_flags;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_export_targets = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_export_libraries,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_export_targets";
      version = "2.5.2-1";
      src = sources.ament_cmake_export_targets;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ament_cmake_export_libraries ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ament_cmake_export_libraries ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_flake8 = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_flake8,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_flake8";
      version = "0.17.1-1";
      src = sources.ament_cmake_flake8;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ ament_cmake_test ament_flake8 ];
      buildInputs = [ ament_cmake_core ];
      propagatedBuildInputs = [ ament_cmake_test ament_flake8 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_gen_version_h = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_gtest,
      ament_package,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_gen_version_h";
      version = "2.5.2-1";
      src = sources.ament_cmake_gen_version_h;
      nativeBuildInputs = [ ament_package ];
      propagatedNativeBuildInputs = [ ament_cmake_core ];
      buildInputs = [ ament_package ];
      propagatedBuildInputs = [ ament_cmake_core ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_gmock = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_gtest,
      ament_cmake_test,
      buildRosPackage,
      gmock_vendor,
      gtest,
    }:
    buildRosPackage {
      pname = "ament_cmake_gmock";
      version = "2.5.2-1";
      src = sources.ament_cmake_gmock;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ ament_cmake_gtest ament_cmake_test gmock_vendor gtest ];
      buildInputs = [ ament_cmake_core ];
      propagatedBuildInputs = [ ament_cmake_gtest ament_cmake_test gmock_vendor gtest ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_google_benchmark = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_export_dependencies,
      ament_cmake_python,
      ament_cmake_test,
      buildRosPackage,
      google_benchmark_vendor,
    }:
    buildRosPackage {
      pname = "ament_cmake_google_benchmark";
      version = "2.5.2-1";
      src = sources.ament_cmake_google_benchmark;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_export_dependencies ament_cmake_python ];
      propagatedNativeBuildInputs = [ ament_cmake_test google_benchmark_vendor ];
      buildInputs = [ ament_cmake_core ament_cmake_export_dependencies ament_cmake_python ];
      propagatedBuildInputs = [ ament_cmake_test google_benchmark_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_gtest = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_test,
      buildRosPackage,
      gtest,
      gtest_vendor,
    }:
    buildRosPackage {
      pname = "ament_cmake_gtest";
      version = "2.5.2-1";
      src = sources.ament_cmake_gtest;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ ament_cmake_test gtest gtest_vendor ];
      buildInputs = [ ament_cmake_core ];
      propagatedBuildInputs = [ ament_cmake_test gtest gtest_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_include_directories = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_include_directories";
      version = "2.5.2-1";
      src = sources.ament_cmake_include_directories;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_libraries = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_libraries";
      version = "2.5.2-1";
      src = sources.ament_cmake_libraries;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_lint_cmake = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_test,
      ament_lint_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_lint_cmake";
      version = "0.17.1-1";
      src = sources.ament_cmake_lint_cmake;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ ament_cmake_test ament_lint_cmake ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_mypy = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_mypy,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_mypy";
      version = "0.17.1-1";
      src = sources.ament_cmake_mypy;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ ament_cmake_test ament_mypy ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_pclint = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_pclint,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_pclint";
      version = "0.17.1-1";
      src = sources.ament_cmake_pclint;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ ament_cmake_test ament_pclint ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_pep257 = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_pep257,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_pep257";
      version = "0.17.1-1";
      src = sources.ament_cmake_pep257;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ ament_cmake_test ament_pep257 ];
      buildInputs = [ ament_cmake_core ];
      propagatedBuildInputs = [ ament_cmake_test ament_pep257 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_pycodestyle = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_pycodestyle,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_pycodestyle";
      version = "0.17.1-1";
      src = sources.ament_cmake_pycodestyle;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ ament_cmake_test ament_pycodestyle ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_pyflakes = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_pyflakes,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_pyflakes";
      version = "0.17.1-1";
      src = sources.ament_cmake_pyflakes;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ ament_cmake_test ament_pyflakes ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_pytest = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_test,
      buildPackages,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_cmake_pytest";
      version = "2.5.2-1";
      src = sources.ament_cmake_pytest;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ament_cmake_test buildPackages.python3Packages.pytest ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ament_cmake_test python3Packages.pytest ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_python = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_python";
      version = "2.5.2-1";
      src = sources.ament_cmake_python;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_ros = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      domain_coordinator,
    }:
    buildRosPackage {
      pname = "ament_cmake_ros";
      version = "0.12.0-3";
      src = sources.ament_cmake_ros;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake ament_cmake_gmock ament_cmake_gtest ament_cmake_pytest domain_coordinator ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake ament_cmake_gmock ament_cmake_gtest ament_cmake_pytest domain_coordinator ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_target_dependencies = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_include_directories,
      ament_cmake_libraries,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_target_dependencies";
      version = "2.5.2-1";
      src = sources.ament_cmake_target_dependencies;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ament_cmake_include_directories ament_cmake_libraries ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ament_cmake_include_directories ament_cmake_libraries ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_test = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_python,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_test";
      version = "2.5.2-1";
      src = sources.ament_cmake_test;
      nativeBuildInputs = [ ament_cmake_python ];
      propagatedNativeBuildInputs = [ ament_cmake_core ];
      buildInputs = [ ament_cmake_python ];
      propagatedBuildInputs = [ ament_cmake_core ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_uncrustify = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_uncrustify,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_uncrustify";
      version = "0.17.1-1";
      src = sources.ament_cmake_uncrustify;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ ament_cmake_test ament_uncrustify ];
      buildInputs = [ ament_cmake_core ];
      propagatedBuildInputs = [ ament_cmake_test ament_uncrustify ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_vendor_package = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_export_dependencies,
      ament_cmake_test,
      buildRosPackage,
      vcstool,
    }:
    buildRosPackage {
      pname = "ament_cmake_vendor_package";
      version = "2.5.2-1";
      src = sources.ament_cmake_vendor_package;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ament_cmake_export_dependencies vcstool ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ament_cmake_export_dependencies vcstool ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_version = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_version";
      version = "2.5.2-1";
      src = sources.ament_cmake_version;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cmake_xmllint = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_xmllint,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_cmake_xmllint";
      version = "0.17.1-1";
      src = sources.ament_cmake_xmllint;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ ament_cmake_test ament_xmllint ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_copyright = self.callPackage (
    {
      ament_flake8,
      ament_lint,
      ament_pep257,
      buildPackages,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_copyright";
      version = "0.17.1-1";
      src = sources.ament_copyright;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_lint buildPackages.python3Packages.importlib-metadata ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint python3Packages.importlib-metadata ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cppcheck = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_pycodestyle,
      buildRosPackage,
      cppcheck,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_cppcheck";
      version = "0.17.1-1";
      src = sources.ament_cppcheck;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ cppcheck ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cppcheck ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_cpplint = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_cpplint";
      version = "0.17.1-1";
      src = sources.ament_cpplint;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_download = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_download";
      version = "0.0.5-6";
      src = sources.ament_download;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_flake8 = self.callPackage (
    {
      ament_lint,
      buildPackages,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_flake8";
      version = "0.17.1-1";
      src = sources.ament_flake8;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_lint buildPackages.python3Packages.flake8 buildPackages.python3Packages.flake8-builtins buildPackages.python3Packages.flake8-comprehensions buildPackages.python3Packages.flake8-docstrings buildPackages.python3Packages.flake8-import-order buildPackages.python3Packages.flake8-quotes ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint python3Packages.flake8 python3Packages.flake8-builtins python3Packages.flake8-comprehensions python3Packages.flake8-docstrings python3Packages.flake8-import-order python3Packages.flake8-quotes ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_index_cpp = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_index_cpp";
      version = "1.8.1-1";
      src = sources.ament_index_cpp;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_index_python = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_index_python";
      version = "1.8.1-1";
      src = sources.ament_index_python;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_lint = self.callPackage (
    {
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_lint";
      version = "0.17.1-1";
      src = sources.ament_lint;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_lint_auto = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_test,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_lint_auto";
      version = "0.17.1-1";
      src = sources.ament_lint_auto;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_core ament_cmake_test ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_core ament_cmake_test ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_lint_cmake = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_lint_cmake";
      version = "0.17.1-1";
      src = sources.ament_lint_cmake;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_lint_common = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_export_dependencies,
      ament_cmake_flake8,
      ament_cmake_lint_cmake,
      ament_cmake_pep257,
      ament_cmake_uncrustify,
      ament_cmake_xmllint,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_lint_common";
      version = "0.17.1-1";
      src = sources.ament_lint_common;
      nativeBuildInputs = [ ament_cmake_export_dependencies ];
      propagatedNativeBuildInputs = [ ament_cmake_core ament_cmake_cppcheck ament_cmake_cpplint ament_cmake_flake8 ament_cmake_pep257 ament_cmake_uncrustify ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_copyright ament_cmake_lint_cmake ament_cmake_xmllint ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_mypy = self.callPackage (
    {
      ament_flake8,
      buildPackages,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_mypy";
      version = "0.17.1-1";
      src = sources.ament_mypy;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.mypy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.mypy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_nodl = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_nodl";
      version = "0.1.0-7";
      src = sources.ament_nodl;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_package = self.callPackage (
    {
      buildPackages,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_package";
      version = "0.16.3-3";
      src = sources.ament_package;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.importlib-metadata buildPackages.python3Packages.importlib-resources buildPackages.python3Packages.setuptools ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.importlib-metadata python3Packages.importlib-resources python3Packages.setuptools ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_pclint = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_pclint";
      version = "0.17.1-1";
      src = sources.ament_pclint;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_pep257 = self.callPackage (
    {
      ament_flake8,
      ament_lint,
      buildPackages,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_pep257";
      version = "0.17.1-1";
      src = sources.ament_pep257;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_lint buildPackages.python3Packages.pydocstyle ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint python3Packages.pydocstyle ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_pycodestyle = self.callPackage (
    {
      buildPackages,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_pycodestyle";
      version = "0.17.1-1";
      src = sources.ament_pycodestyle;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.pycodestyle ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.pycodestyle ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_pyflakes = self.callPackage (
    {
      ament_pycodestyle,
      buildPackages,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_pyflakes";
      version = "0.17.1-1";
      src = sources.ament_pyflakes;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.pyflakes ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.pyflakes ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_uncrustify = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_pycodestyle,
      buildRosPackage,
      python3Packages,
      uncrustify_vendor,
    }:
    buildRosPackage {
      pname = "ament_uncrustify";
      version = "0.17.1-1";
      src = sources.ament_uncrustify;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ uncrustify_vendor ];
      buildInputs = [  ];
      propagatedBuildInputs = [ uncrustify_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_vitis = self.callPackage (
    {
      ament_acceleration,
      ament_cmake_core,
      ament_cmake_ros,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ament_vitis";
      version = "0.10.1-5";
      src = sources.ament_vitis;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_acceleration ament_cmake_core ament_cmake_ros ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_acceleration ament_cmake_core ament_cmake_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ament_xmllint = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_lint,
      ament_pep257,
      buildRosPackage,
      libxml2,
      python3Packages,
    }:
    buildRosPackage {
      pname = "ament_xmllint";
      version = "0.17.1-1";
      src = sources.ament_xmllint;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_lint libxml2 ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint libxml2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  angles = self.callPackage (
    {
      ament_cmake,
      ament_cmake_python,
      buildPackages,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "angles";
      version = "1.16.0-5";
      src = sources.angles;
      nativeBuildInputs = [ ament_cmake_python buildPackages.python3Packages.setuptools ];
      propagatedNativeBuildInputs = [ ament_cmake ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  apex_test_tools = self.callPackage (
    {
      ament_cmake,
      ament_cmake_auto,
      ament_cmake_gtest,
      ament_cmake_pclint,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      osrf_testing_tools_cpp,
    }:
    buildRosPackage {
      pname = "apex_test_tools";
      version = "0.0.2-9";
      src = sources.apex_test_tools;
      nativeBuildInputs = [ ament_cmake ament_cmake_auto ];
      propagatedNativeBuildInputs = [ ament_cmake_gtest ];
      buildInputs = [  ];
      propagatedBuildInputs = [ osrf_testing_tools_cpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  apriltag = self.callPackage (
    {
      buildPackages,
      buildRosPackage,
      cmake,
      opencv,
      python3,
    }:
    buildRosPackage {
      pname = "apriltag";
      version = "3.4.2-1";
      src = sources.apriltag;
      nativeBuildInputs = [ cmake python3 buildPackages.python3Packages.numpy ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  apriltag_detector = self.callPackage (
    {
      ament_cmake,
      ament_cmake_auto,
      ament_cmake_clang_format,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      apriltag,
      apriltag_msgs,
      buildRosPackage,
      cv_bridge,
      image_transport,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "apriltag_detector";
      version = "1.0.0-3";
      src = sources.apriltag_detector;
      nativeBuildInputs = [ ament_cmake ament_cmake_auto ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ apriltag apriltag_msgs cv_bridge image_transport rclcpp rclcpp_components sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  apriltag_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "apriltag_msgs";
      version = "2.0.1-5";
      src = sources.apriltag_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  apriltag_ros = self.callPackage (
    {
      ament_cmake,
      ament_cmake_clang_format,
      ament_cmake_cppcheck,
      ament_lint_auto,
      apriltag,
      apriltag_msgs,
      buildRosPackage,
      cv_bridge,
      eigen,
      image_transport,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "apriltag_ros";
      version = "3.2.2-1";
      src = sources.apriltag_ros;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ eigen ];
      propagatedBuildInputs = [ apriltag apriltag_msgs cv_bridge image_transport rclcpp rclcpp_components sensor_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  aruco = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      cv_bridge,
      eigen,
    }:
    buildRosPackage {
      pname = "aruco";
      version = "5.0.5-1";
      src = sources.aruco;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge eigen ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  aruco_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "aruco_msgs";
      version = "5.0.5-1";
      src = sources.aruco_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  aruco_opencv = self.callPackage (
    {
      ament_cmake,
      ament_cmake_copyright,
      ament_cmake_cpplint,
      ament_cmake_lint_cmake,
      ament_cmake_uncrustify,
      ament_cmake_xmllint,
      ament_lint_auto,
      aruco_opencv_msgs,
      buildPackages,
      buildRosPackage,
      cv_bridge,
      image_transport,
      libyamlcpp,
      python3Packages,
      rclcpp,
      rclcpp_components,
      rclcpp_lifecycle,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "aruco_opencv";
      version = "6.0.1-1";
      src = sources.aruco_opencv;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ aruco_opencv_msgs cv_bridge image_transport libyamlcpp python3Packages.opencv3 rclcpp rclcpp_components rclcpp_lifecycle tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  aruco_opencv_msgs = self.callPackage (
    {
      ament_cmake,
      ament_cmake_lint_cmake,
      ament_lint_auto,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "aruco_opencv_msgs";
      version = "6.0.1-1";
      src = sources.aruco_opencv_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  aruco_ros = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      aruco,
      aruco_msgs,
      buildRosPackage,
      cv_bridge,
      geometry_msgs,
      image_transport,
      rclcpp,
      sensor_msgs,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "aruco_ros";
      version = "5.0.5-1";
      src = sources.aruco_ros;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ aruco aruco_msgs cv_bridge geometry_msgs image_transport rclcpp sensor_msgs tf2 tf2_geometry_msgs tf2_ros visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  asio_cmake_module = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "asio_cmake_module";
      version = "1.2.0-4";
      src = sources.asio_cmake_module;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ament_cmake ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  async_web_server_cpp = self.callPackage (
    {
      ament_cmake_ros,
      boost,
      buildRosPackage,
      launch_testing,
      openssl,
    }:
    buildRosPackage {
      pname = "async_web_server_cpp";
      version = "2.0.0-6";
      src = sources.async_web_server_cpp;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ openssl ];
      propagatedBuildInputs = [ boost ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  automotive_autonomy_msgs = self.callPackage (
    {
      ament_cmake,
      automotive_navigation_msgs,
      automotive_platform_msgs,
      buildRosPackage,
      ros_environment,
    }:
    buildRosPackage {
      pname = "automotive_autonomy_msgs";
      version = "3.0.4-6";
      src = sources.automotive_autonomy_msgs;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ automotive_navigation_msgs automotive_platform_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  automotive_navigation_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "automotive_navigation_msgs";
      version = "3.0.4-6";
      src = sources.automotive_navigation_msgs;
      nativeBuildInputs = [ ament_cmake ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  automotive_platform_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "automotive_platform_msgs";
      version = "3.0.4-6";
      src = sources.automotive_platform_msgs;
      nativeBuildInputs = [ ament_cmake ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_adapi_v1_msgs = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geographic_msgs,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      shape_msgs,
      std_msgs,
      unique_identifier_msgs,
    }:
    buildRosPackage {
      pname = "autoware_adapi_v1_msgs";
      version = "1.3.0-1";
      src = sources.autoware_adapi_v1_msgs;
      nativeBuildInputs = [ ament_cmake_auto rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geographic_msgs geometry_msgs rosidl_default_runtime shape_msgs std_msgs unique_identifier_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_adapi_version_msgs = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "autoware_adapi_version_msgs";
      version = "1.3.0-1";
      src = sources.autoware_adapi_version_msgs;
      nativeBuildInputs = [ ament_cmake_auto rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_auto_msgs = self.callPackage (
    {
      action_msgs,
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "autoware_auto_msgs";
      version = "1.0.0-7";
      src = sources.autoware_auto_msgs;
      nativeBuildInputs = [ ament_cmake_auto rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs geometry_msgs rosidl_default_runtime sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_cmake = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      autoware_lint_common,
      buildRosPackage,
      ros_environment,
    }:
    buildRosPackage {
      pname = "autoware_cmake";
      version = "1.0.0-1";
      src = sources.autoware_cmake;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_auto ament_lint_auto ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_auto ament_lint_auto ros_environment ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_common_msgs = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "autoware_common_msgs";
      version = "1.1.0-1";
      src = sources.autoware_common_msgs;
      nativeBuildInputs = [ ament_cmake_auto rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_control_msgs = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "autoware_control_msgs";
      version = "1.1.0-1";
      src = sources.autoware_control_msgs;
      nativeBuildInputs = [ ament_cmake_auto rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_internal_msgs = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "autoware_internal_msgs";
      version = "1.1.0-1";
      src = sources.autoware_internal_msgs;
      nativeBuildInputs = [ ament_cmake_auto rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_lanelet2_extension = self.callPackage (
    {
      ament_cmake_auto,
      ament_cmake_ros,
      autoware_cmake,
      autoware_map_msgs,
      autoware_planning_msgs,
      autoware_utils,
      buildRosPackage,
      geographiclib,
      geometry_msgs,
      lanelet2_core,
      lanelet2_io,
      lanelet2_maps,
      lanelet2_projection,
      lanelet2_routing,
      lanelet2_traffic_rules,
      lanelet2_validation,
      pugixml,
      rclcpp,
      tf2,
      tf2_geometry_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "autoware_lanelet2_extension";
      version = "0.5.0-1";
      src = sources.autoware_lanelet2_extension;
      nativeBuildInputs = [ ament_cmake_auto autoware_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ autoware_map_msgs autoware_planning_msgs autoware_utils geographiclib geometry_msgs lanelet2_core lanelet2_io lanelet2_maps lanelet2_projection lanelet2_routing lanelet2_traffic_rules lanelet2_validation pugixml rclcpp tf2 tf2_geometry_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_lanelet2_extension_python = self.callPackage (
    {
      ament_cmake_auto,
      ament_cmake_ros,
      autoware_cmake,
      autoware_lanelet2_extension,
      boost,
      buildRosPackage,
      geometry_msgs,
      lanelet2_core,
      lanelet2_io,
      lanelet2_projection,
      lanelet2_python,
      lanelet2_routing,
      lanelet2_traffic_rules,
      lanelet2_validation,
      python_cmake_module,
      rclcpp,
    }:
    buildRosPackage {
      pname = "autoware_lanelet2_extension_python";
      version = "0.5.0-1";
      src = sources.autoware_lanelet2_extension_python;
      nativeBuildInputs = [ ament_cmake_auto autoware_cmake python_cmake_module ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ autoware_lanelet2_extension boost geometry_msgs lanelet2_core lanelet2_io lanelet2_projection lanelet2_python lanelet2_routing lanelet2_traffic_rules lanelet2_validation rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_lint_common = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_cppcheck,
      ament_cmake_export_dependencies,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_xmllint,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "autoware_lint_common";
      version = "1.0.0-1";
      src = sources.autoware_lint_common;
      nativeBuildInputs = [ ament_cmake_export_dependencies ];
      propagatedNativeBuildInputs = [ ament_cmake_core ament_cmake_cppcheck ament_cmake_test ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_copyright ament_cmake_lint_cmake ament_cmake_xmllint ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_localization_msgs = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "autoware_localization_msgs";
      version = "1.1.0-1";
      src = sources.autoware_localization_msgs;
      nativeBuildInputs = [ ament_cmake_auto rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_map_msgs = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "autoware_map_msgs";
      version = "1.1.0-1";
      src = sources.autoware_map_msgs;
      nativeBuildInputs = [ ament_cmake_auto rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_perception_msgs = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
      unique_identifier_msgs,
    }:
    buildRosPackage {
      pname = "autoware_perception_msgs";
      version = "1.1.0-1";
      src = sources.autoware_perception_msgs;
      nativeBuildInputs = [ ament_cmake_auto rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime std_msgs unique_identifier_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_planning_msgs = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      nav_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
      unique_identifier_msgs,
    }:
    buildRosPackage {
      pname = "autoware_planning_msgs";
      version = "1.1.0-1";
      src = sources.autoware_planning_msgs;
      nativeBuildInputs = [ ament_cmake_auto rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs nav_msgs rosidl_default_runtime std_msgs unique_identifier_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_sensing_msgs = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "autoware_sensing_msgs";
      version = "1.1.0-1";
      src = sources.autoware_sensing_msgs;
      nativeBuildInputs = [ ament_cmake_auto rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_system_msgs = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      diagnostic_msgs,
      geometry_msgs,
      nav_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
      unique_identifier_msgs,
    }:
    buildRosPackage {
      pname = "autoware_system_msgs";
      version = "1.1.0-1";
      src = sources.autoware_system_msgs;
      nativeBuildInputs = [ ament_cmake_auto rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces diagnostic_msgs geometry_msgs nav_msgs rosidl_default_runtime std_msgs unique_identifier_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_utils = self.callPackage (
    {
      ament_cmake_auto,
      ament_cmake_ros,
      autoware_cmake,
      boost,
      buildRosPackage,
      builtin_interfaces,
      rclcpp,
      unique_identifier_msgs,
    }:
    buildRosPackage {
      pname = "autoware_utils";
      version = "1.0.0-1";
      src = sources.autoware_utils;
      nativeBuildInputs = [ ament_cmake_auto autoware_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost builtin_interfaces rclcpp unique_identifier_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  autoware_vehicle_msgs = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      autoware_planning_msgs,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "autoware_vehicle_msgs";
      version = "1.1.0-1";
      src = sources.autoware_vehicle_msgs;
      nativeBuildInputs = [ ament_cmake_auto rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ autoware_planning_msgs builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  avt_vimba_camera = self.callPackage (
    {
      ament_cmake_auto,
      buildRosPackage,
      camera_info_manager,
      diagnostic_msgs,
      diagnostic_updater,
      image_proc,
      image_transport,
      message_filters,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      std_msgs,
      stereo_image_proc,
    }:
    buildRosPackage {
      pname = "avt_vimba_camera";
      version = "2001.1.0-6";
      src = sources.avt_vimba_camera;
      nativeBuildInputs = [ ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ camera_info_manager diagnostic_msgs diagnostic_updater image_proc image_transport message_filters rclcpp rclcpp_components sensor_msgs std_msgs stereo_image_proc ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  aws_sdk_cpp_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      curl,
      openssl,
      zlib,
    }:
    buildRosPackage {
      pname = "aws_sdk_cpp_vendor";
      version = "0.2.1-3";
      src = sources.aws_sdk_cpp_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package curl ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ openssl zlib ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  azure_iot_sdk_c = self.callPackage (
    {
      buildRosPackage,
      cmake,
      curl,
      openssl,
      util-linux,
    }:
    buildRosPackage {
      pname = "azure_iot_sdk_c";
      version = "1.13.0-2";
      src = sources.azure_iot_sdk_c;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [ curl ];
      buildInputs = [  ];
      propagatedBuildInputs = [ openssl util-linux ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  backward_ros = self.callPackage (
    {
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cmake,
      elfutils,
    }:
    buildRosPackage {
      pname = "backward_ros";
      version = "1.0.5-1";
      src = sources.backward_ros;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ elfutils ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  bag2_to_image = self.callPackage (
    {
      ament_cmake,
      ament_cmake_clang_format,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      opencv,
      rclcpp,
      rclcpp_components,
      rosbag2_cpp,
      rosbag2_storage,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "bag2_to_image";
      version = "0.1.0-5";
      src = sources.bag2_to_image;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ opencv rclcpp rclcpp_components rosbag2_cpp rosbag2_storage sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  behaviortree_cpp = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_index_cpp,
      buildRosPackage,
      cppzmq,
      rclcpp,
      ros_environment,
      sqlite,
    }:
    buildRosPackage {
      pname = "behaviortree_cpp";
      version = "4.6.2-1";
      src = sources.behaviortree_cpp;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp cppzmq rclcpp sqlite ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  behaviortree_cpp_v3 = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_index_cpp,
      boost,
      buildRosPackage,
      cppzmq,
      ncurses,
      rclcpp,
      ros_environment,
    }:
    buildRosPackage {
      pname = "behaviortree_cpp_v3";
      version = "3.8.6-3";
      src = sources.behaviortree_cpp_v3;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp boost cppzmq ncurses rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  beluga = self.callPackage (
    {
      buildRosPackage,
      clang,
      cmake,
      eigen,
      gbenchmark,
      gmock,
      gtest,
      hdf5,
      sophus,
      tbb,
    }:
    buildRosPackage {
      pname = "beluga";
      version = "2.0.2-1";
      src = sources.beluga;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen hdf5 sophus tbb ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  beluga_amcl = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_cmake_gtest,
      beluga,
      beluga_ros,
      bondcpp,
      buildRosPackage,
      message_filters,
      rclcpp,
      rclcpp_components,
      rclcpp_lifecycle,
      std_srvs,
    }:
    buildRosPackage {
      pname = "beluga_amcl";
      version = "2.0.2-1";
      src = sources.beluga_amcl;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ beluga beluga_ros bondcpp message_filters rclcpp rclcpp_components rclcpp_lifecycle std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  beluga_ros = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_python,
      beluga,
      buildPackages,
      buildRosPackage,
      geometry_msgs,
      nav_msgs,
      python3Packages,
      sensor_msgs,
      std_msgs,
      tf2,
      tf2_eigen,
      tf2_geometry_msgs,
      tf2_ros,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "beluga_ros";
      version = "2.0.2-1";
      src = sources.beluga_ros;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ beluga geometry_msgs nav_msgs python3Packages.h5py python3Packages.matplotlib python3Packages.scipy sensor_msgs std_msgs tf2 tf2_eigen tf2_geometry_msgs tf2_ros visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  bicycle_steering_controller = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      backward_ros,
      buildRosPackage,
      control_msgs,
      controller_interface,
      controller_manager,
      generate_parameter_library,
      hardware_interface,
      hardware_interface_testing,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      ros2_control_test_assets,
      std_srvs,
      steering_controllers_library,
    }:
    buildRosPackage {
      pname = "bicycle_steering_controller";
      version = "4.11.0-1";
      src = sources.bicycle_steering_controller;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ generate_parameter_library ];
      propagatedBuildInputs = [ backward_ros control_msgs controller_interface hardware_interface pluginlib rclcpp rclcpp_lifecycle std_srvs steering_controllers_library ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  bno055 = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      example_interfaces,
      python3Packages,
      rclpy,
      std_msgs,
    }:
    buildRosPackage {
      pname = "bno055";
      version = "0.5.0-3";
      src = sources.bno055;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ example_interfaces python3Packages.pyserial rclpy std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  bond = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "bond";
      version = "4.1.0-1";
      src = sources.bond;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  bond_core = self.callPackage (
    {
      ament_cmake,
      bond,
      bondcpp,
      buildRosPackage,
      smclib,
    }:
    buildRosPackage {
      pname = "bond_core";
      version = "4.1.0-1";
      src = sources.bond_core;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ bond bondcpp smclib ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  bondcpp = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      bond,
      buildRosPackage,
      pkg-config,
      rclcpp,
      rclcpp_lifecycle,
      smclib,
      util-linux,
    }:
    buildRosPackage {
      pname = "bondcpp";
      version = "4.1.0-1";
      src = sources.bondcpp;
      nativeBuildInputs = [ ament_cmake pkg-config ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ bond rclcpp rclcpp_lifecycle smclib util-linux ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  bondpy = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      bond,
      buildRosPackage,
      python3Packages,
      rclpy,
      smclib,
    }:
    buildRosPackage {
      pname = "bondpy";
      version = "4.1.0-1";
      src = sources.bondpy;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ bond rclpy smclib ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  boost_geometry_util = self.callPackage (
    {
      ament_cmake,
      ament_cmake_auto,
      ament_lint_auto,
      boost,
      buildRosPackage,
      geometry_msgs,
      ouxt_common,
      rclcpp,
    }:
    buildRosPackage {
      pname = "boost_geometry_util";
      version = "0.0.1-5";
      src = sources.boost_geometry_util;
      nativeBuildInputs = [ ament_cmake ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost geometry_msgs rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  builtin_interfaces = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      rosidl_core_generators,
      rosidl_core_runtime,
    }:
    buildRosPackage {
      pname = "builtin_interfaces";
      version = "2.0.2-2";
      src = sources.builtin_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_core_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_core_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  camera_aravis2 = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      aravis,
      buildRosPackage,
      camera_aravis2_msgs,
      camera_info_manager,
      cv_bridge,
      diagnostic_msgs,
      glib,
      image_transport,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "camera_aravis2";
      version = "1.0.0-1";
      src = sources.camera_aravis2;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ aravis glib ];
      propagatedBuildInputs = [ camera_aravis2_msgs camera_info_manager cv_bridge diagnostic_msgs image_transport rclcpp rclcpp_components sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  camera_aravis2_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      diagnostic_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "camera_aravis2_msgs";
      version = "1.0.0-1";
      src = sources.camera_aravis2_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces diagnostic_msgs rosidl_default_runtime sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  camera_calibration = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      cv_bridge,
      image_geometry,
      message_filters,
      python3Packages,
      rclpy,
      sensor_msgs,
      std_srvs,
    }:
    buildRosPackage {
      pname = "camera_calibration";
      version = "5.0.3-1";
      src = sources.camera_calibration;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge image_geometry message_filters python3Packages.opencv3 rclpy sensor_msgs std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  camera_calibration_parsers = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      sensor_msgs,
      yaml_cpp_vendor,
    }:
    buildRosPackage {
      pname = "camera_calibration_parsers";
      version = "5.1.4-1";
      src = sources.camera_calibration_parsers;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp sensor_msgs yaml_cpp_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  camera_info_manager = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_index_cpp,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      camera_calibration_parsers,
      rclcpp,
      rclcpp_lifecycle,
      rcpputils,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "camera_info_manager";
      version = "5.1.4-1";
      src = sources.camera_info_manager;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp camera_calibration_parsers rclcpp rclcpp_lifecycle rcpputils sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  can_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "can_msgs";
      version = "2.0.0-6";
      src = sources.can_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  canopen = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      canopen_402_driver,
      canopen_base_driver,
      canopen_core,
      canopen_interfaces,
      canopen_proxy_driver,
      lely_core_libraries,
    }:
    buildRosPackage {
      pname = "canopen";
      version = "0.2.9-2";
      src = sources.canopen;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ canopen_402_driver canopen_base_driver canopen_core canopen_interfaces canopen_proxy_driver lely_core_libraries ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  canopen_402_driver = self.callPackage (
    {
      ament_cmake_ros,
      ament_lint_auto,
      boost,
      buildRosPackage,
      canopen_base_driver,
      canopen_core,
      canopen_interfaces,
      canopen_proxy_driver,
      rclcpp,
      rclcpp_components,
      rclcpp_lifecycle,
      sensor_msgs,
      std_srvs,
    }:
    buildRosPackage {
      pname = "canopen_402_driver";
      version = "0.2.9-2";
      src = sources.canopen_402_driver;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost canopen_base_driver canopen_core canopen_interfaces canopen_proxy_driver rclcpp rclcpp_components rclcpp_lifecycle sensor_msgs std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  canopen_base_driver = self.callPackage (
    {
      ament_cmake_ros,
      ament_lint_auto,
      boost,
      buildRosPackage,
      canopen_core,
      canopen_interfaces,
      diagnostic_updater,
      lely_core_libraries,
      rclcpp,
      rclcpp_components,
      rclcpp_lifecycle,
      std_msgs,
      std_srvs,
    }:
    buildRosPackage {
      pname = "canopen_base_driver";
      version = "0.2.9-2";
      src = sources.canopen_base_driver;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost canopen_core canopen_interfaces diagnostic_updater lely_core_libraries rclcpp rclcpp_components rclcpp_lifecycle std_msgs std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  canopen_core = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      boost,
      buildRosPackage,
      canopen_interfaces,
      lely_core_libraries,
      lifecycle_msgs,
      rclcpp,
      rclcpp_components,
      rclcpp_lifecycle,
      yaml_cpp_vendor,
    }:
    buildRosPackage {
      pname = "canopen_core";
      version = "0.2.9-2";
      src = sources.canopen_core;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost canopen_interfaces lely_core_libraries lifecycle_msgs rclcpp rclcpp_components rclcpp_lifecycle yaml_cpp_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  canopen_fake_slaves = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      buildRosPackage,
      lely_core_libraries,
      lifecycle_msgs,
      rclcpp,
      rclcpp_lifecycle,
    }:
    buildRosPackage {
      pname = "canopen_fake_slaves";
      version = "0.2.9-2";
      src = sources.canopen_fake_slaves;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ lely_core_libraries lifecycle_msgs rclcpp rclcpp_lifecycle ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  canopen_interfaces = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "canopen_interfaces";
      version = "0.2.9-2";
      src = sources.canopen_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  canopen_master_driver = self.callPackage (
    {
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      canopen_core,
      canopen_interfaces,
      lely_core_libraries,
      rclcpp,
      rclcpp_components,
      rclcpp_lifecycle,
    }:
    buildRosPackage {
      pname = "canopen_master_driver";
      version = "0.2.9-2";
      src = sources.canopen_master_driver;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ canopen_core canopen_interfaces lely_core_libraries rclcpp rclcpp_components rclcpp_lifecycle ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  canopen_proxy_driver = self.callPackage (
    {
      ament_cmake_ros,
      ament_lint_auto,
      buildRosPackage,
      canopen_base_driver,
      canopen_core,
      canopen_interfaces,
      rclcpp,
      rclcpp_components,
      rclcpp_lifecycle,
      std_msgs,
      std_srvs,
    }:
    buildRosPackage {
      pname = "canopen_proxy_driver";
      version = "0.2.9-2";
      src = sources.canopen_proxy_driver;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ canopen_base_driver canopen_core canopen_interfaces rclcpp rclcpp_components rclcpp_lifecycle std_msgs std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  canopen_ros2_control = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      buildRosPackage,
      canopen_402_driver,
      canopen_core,
      canopen_proxy_driver,
      hardware_interface,
      pluginlib,
      rclcpp,
      rclcpp_components,
      rclcpp_lifecycle,
      ros2_control_test_assets,
    }:
    buildRosPackage {
      pname = "canopen_ros2_control";
      version = "0.2.9-2";
      src = sources.canopen_ros2_control;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ canopen_402_driver canopen_core canopen_proxy_driver hardware_interface pluginlib rclcpp rclcpp_components rclcpp_lifecycle ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  canopen_ros2_controllers = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      buildRosPackage,
      canopen_402_driver,
      canopen_interfaces,
      canopen_proxy_driver,
      controller_interface,
      controller_manager,
      hardware_interface,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      realtime_tools,
      std_msgs,
      std_srvs,
    }:
    buildRosPackage {
      pname = "canopen_ros2_controllers";
      version = "0.2.9-2";
      src = sources.canopen_ros2_controllers;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ canopen_402_driver canopen_interfaces canopen_proxy_driver controller_interface controller_manager hardware_interface pluginlib rclcpp rclcpp_lifecycle realtime_tools std_msgs std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  canopen_tests = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      buildRosPackage,
      canopen_402_driver,
      canopen_core,
      canopen_fake_slaves,
      canopen_proxy_driver,
      canopen_ros2_controllers,
      controller_manager,
      forward_command_controller,
      joint_state_broadcaster,
      joint_trajectory_controller,
      lely_core_libraries,
      robot_state_publisher,
      xacro,
    }:
    buildRosPackage {
      pname = "canopen_tests";
      version = "0.2.9-2";
      src = sources.canopen_tests;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ lely_core_libraries ];
      propagatedBuildInputs = [ canopen_402_driver canopen_core canopen_fake_slaves canopen_proxy_driver canopen_ros2_controllers controller_manager forward_command_controller joint_state_broadcaster joint_trajectory_controller robot_state_publisher xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  canopen_utils = self.callPackage (
    {
      ament_lint_auto,
      buildRosPackage,
      canopen_interfaces,
      lifecycle_msgs,
      rclpy,
      std_msgs,
    }:
    buildRosPackage {
      pname = "canopen_utils";
      version = "0.2.9-2";
      src = sources.canopen_utils;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ canopen_interfaces lifecycle_msgs rclpy std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  cartographer = self.callPackage (
    {
      abseil-cpp,
      boost,
      buildRosPackage,
      cairo,
      ceres-solver,
      cmake,
      eigen,
      gflags,
      git,
      glog,
      gtest,
      lua5,
      protobuf,
      python3Packages,
    }:
    buildRosPackage {
      pname = "cartographer";
      version = "2.0.9003-2";
      src = sources.cartographer;
      nativeBuildInputs = [ cmake git gtest ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ python3Packages.sphinx ];
      propagatedBuildInputs = [ abseil-cpp boost cairo ceres-solver eigen gflags glog lua5 protobuf ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  cartographer_ros = self.callPackage (
    {
      abseil-cpp,
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      cartographer,
      cartographer_ros_msgs,
      eigen,
      geometry_msgs,
      gflags,
      glog,
      gtest,
      launch,
      nav_msgs,
      pcl,
      pcl_conversions,
      python3Packages,
      rclcpp,
      robot_state_publisher,
      ros_environment,
      rosbag2_cpp,
      rosbag2_storage,
      sensor_msgs,
      std_msgs,
      tf2,
      tf2_eigen,
      tf2_msgs,
      tf2_ros,
      urdf,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "cartographer_ros";
      version = "2.0.9003-2";
      src = sources.cartographer_ros;
      nativeBuildInputs = [ ament_cmake gtest ros_environment ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [ python3Packages.sphinx ];
      propagatedBuildInputs = [ abseil-cpp builtin_interfaces cartographer cartographer_ros_msgs eigen geometry_msgs gflags glog nav_msgs pcl pcl_conversions rclcpp robot_state_publisher rosbag2_cpp rosbag2_storage sensor_msgs std_msgs tf2 tf2_eigen tf2_msgs tf2_ros urdf visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  cartographer_ros_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "cartographer_ros_msgs";
      version = "2.0.9003-2";
      src = sources.cartographer_ros_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  cartographer_rviz = self.callPackage (
    {
      abseil-cpp,
      ament_cmake,
      boost,
      buildRosPackage,
      cartographer,
      cartographer_ros,
      cartographer_ros_msgs,
      eigen,
      pluginlib,
      rclcpp,
      rviz_common,
      rviz_ogre_vendor,
      rviz_rendering,
    }:
    buildRosPackage {
      pname = "cartographer_rviz";
      version = "2.0.9003-2";
      src = sources.cartographer_rviz;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ abseil-cpp boost cartographer cartographer_ros cartographer_ros_msgs eigen pluginlib rclcpp rviz_common rviz_ogre_vendor rviz_rendering ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  cascade_lifecycle_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      lifecycle_msgs,
      rclcpp,
      rosidl_default_generators,
    }:
    buildRosPackage {
      pname = "cascade_lifecycle_msgs";
      version = "2.0.0-2";
      src = sources.cascade_lifecycle_msgs;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rosidl_default_generators ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces lifecycle_msgs rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  catch_ros2 = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      ros2launch,
      std_srvs,
    }:
    buildRosPackage {
      pname = "catch_ros2";
      version = "0.2.1-2";
      src = sources.catch_ros2;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp ros2launch std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  chomp_motion_planner = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      moveit_common,
      moveit_core,
      rclcpp,
      rsl,
      trajectory_msgs,
    }:
    buildRosPackage {
      pname = "chomp_motion_planner";
      version = "2.10.0-1";
      src = sources.chomp_motion_planner;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ moveit_common moveit_core rclcpp rsl trajectory_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  class_loader = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      console-bridge,
      console_bridge_vendor,
      rcpputils,
    }:
    buildRosPackage {
      pname = "class_loader";
      version = "2.7.0-3";
      src = sources.class_loader;
      nativeBuildInputs = [ ament_cmake ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ console-bridge console_bridge_vendor rcpputils ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  classic_bags = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_cmake_python,
      buildRosPackage,
      builtin_interfaces,
      rclcpp,
      rclpy,
      rosbag2_cpp,
      rosbag2_py,
      rosbag2_storage,
      rosbag2_storage_mcap,
      rosbag2_storage_sqlite3,
      rosidl_runtime_py,
      std_msgs,
    }:
    buildRosPackage {
      pname = "classic_bags";
      version = "0.4.0-1";
      src = sources.classic_bags;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rclcpp rclpy rosbag2_cpp rosbag2_py rosbag2_storage rosidl_runtime_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  cmake_generate_parameter_module_example = self.callPackage (
    {
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      generate_parameter_library,
      rclpy,
    }:
    buildRosPackage {
      pname = "cmake_generate_parameter_module_example";
      version = "0.3.8-4";
      src = sources.cmake_generate_parameter_module_example;
      nativeBuildInputs = [ ament_cmake_python ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ generate_parameter_library rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  color_names = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      buildRosPackage,
      ouxt_lint_common,
      rclcpp,
      rviz2,
      std_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "color_names";
      version = "0.0.3-6";
      src = sources.color_names;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rviz2 std_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  color_util = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      buildRosPackage,
      std_msgs,
    }:
    buildRosPackage {
      pname = "color_util";
      version = "1.0.0-4";
      src = sources.color_util;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  common_interfaces = self.callPackage (
    {
      actionlib_msgs,
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      diagnostic_msgs,
      geometry_msgs,
      nav_msgs,
      sensor_msgs,
      shape_msgs,
      std_msgs,
      std_srvs,
      stereo_msgs,
      trajectory_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "common_interfaces";
      version = "5.3.5-1";
      src = sources.common_interfaces;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ actionlib_msgs builtin_interfaces diagnostic_msgs geometry_msgs nav_msgs sensor_msgs shape_msgs std_msgs std_srvs stereo_msgs trajectory_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  composition = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      example_interfaces,
      launch,
      launch_ros,
      launch_testing,
      launch_testing_ament_cmake,
      launch_testing_ros,
      rclcpp,
      rclcpp_components,
      rcutils,
      rmw_implementation_cmake,
      std_msgs,
    }:
    buildRosPackage {
      pname = "composition";
      version = "0.33.4-1";
      src = sources.composition;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ example_interfaces launch_ros rclcpp rclcpp_components std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  composition_interfaces = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      rcl_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "composition_interfaces";
      version = "2.0.2-2";
      src = sources.composition_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rcl_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  compressed_depth_image_transport = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      buildRosPackage,
      cv_bridge,
      image_transport,
    }:
    buildRosPackage {
      pname = "compressed_depth_image_transport";
      version = "4.0.0-2";
      src = sources.compressed_depth_image_transport;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge image_transport ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  compressed_image_transport = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      cv_bridge,
      image_transport,
    }:
    buildRosPackage {
      pname = "compressed_image_transport";
      version = "4.0.0-2";
      src = sources.compressed_image_transport;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge image_transport ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  console_bridge_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      console-bridge,
      performance_test_fixture,
    }:
    buildRosPackage {
      pname = "console_bridge_vendor";
      version = "1.7.1-3";
      src = sources.console_bridge_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ console-bridge ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  control_box_rst = self.callPackage (
    {
      buildRosPackage,
      cmake,
      eigen,
    }:
    buildRosPackage {
      pname = "control_box_rst";
      version = "0.0.7-1";
      src = sources.control_box_rst;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  control_msgs = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
      trajectory_msgs,
    }:
    buildRosPackage {
      pname = "control_msgs";
      version = "5.2.0-1";
      src = sources.control_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs builtin_interfaces geometry_msgs rosidl_default_runtime sensor_msgs std_msgs trajectory_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  control_toolbox = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_cmake_gtest,
      buildRosPackage,
      control_msgs,
      filters,
      generate_parameter_library,
      geometry_msgs,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      rcutils,
      realtime_tools,
    }:
    buildRosPackage {
      pname = "control_toolbox";
      version = "3.2.0-3";
      src = sources.control_toolbox;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ control_msgs filters generate_parameter_library geometry_msgs pluginlib rclcpp realtime_tools ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  controller_interface = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gen_version_h,
      ament_cmake_gmock,
      buildRosPackage,
      hardware_interface,
      rclcpp_lifecycle,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "controller_interface";
      version = "4.13.0-1";
      src = sources.controller_interface;
      nativeBuildInputs = [ ament_cmake ament_cmake_gen_version_h ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ sensor_msgs ];
      propagatedBuildInputs = [ hardware_interface rclcpp_lifecycle ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  controller_manager = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gen_version_h,
      ament_cmake_gmock,
      ament_cmake_python,
      ament_index_cpp,
      backward_ros,
      buildRosPackage,
      controller_interface,
      controller_manager_msgs,
      diagnostic_updater,
      hardware_interface,
      hardware_interface_testing,
      launch,
      launch_ros,
      pluginlib,
      rclcpp,
      rcpputils,
      realtime_tools,
      ros2_control_test_assets,
      ros2param,
      ros2run,
      std_msgs,
    }:
    buildRosPackage {
      pname = "controller_manager";
      version = "4.13.0-1";
      src = sources.controller_manager;
      nativeBuildInputs = [ ament_cmake ament_cmake_gen_version_h ament_cmake_python ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp backward_ros controller_interface controller_manager_msgs diagnostic_updater hardware_interface launch_ros pluginlib rclcpp rcpputils realtime_tools ros2_control_test_assets ros2param ros2run std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  controller_manager_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      lifecycle_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "controller_manager_msgs";
      version = "4.13.0-1";
      src = sources.controller_manager_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces lifecycle_msgs rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  costmap_queue = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      nav2_common,
      nav2_costmap_2d,
      rclcpp,
    }:
    buildRosPackage {
      pname = "costmap_queue";
      version = "1.3.1-1";
      src = sources.costmap_queue;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ nav2_common ];
      propagatedBuildInputs = [ nav2_costmap_2d rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  cudnn_cmake_module = self.callPackage (
    {
      ament_cmake,
      ament_cmake_copyright,
      ament_cmake_lint_cmake,
      ament_cmake_xmllint,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "cudnn_cmake_module";
      version = "0.0.1-6";
      src = sources.cudnn_cmake_module;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  cv_bridge = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_cmake_ros,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      boost,
      buildPackages,
      buildRosPackage,
      opencv,
      python3Packages,
      python_cmake_module,
      rclcpp,
      rcpputils,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "cv_bridge";
      version = "4.1.0-1";
      src = sources.cv_bridge;
      nativeBuildInputs = [ ament_cmake_ros python_cmake_module ];
      propagatedNativeBuildInputs = [ ament_index_python buildPackages.python3Packages.numpy ];
      buildInputs = [ boost ];
      propagatedBuildInputs = [ boost opencv python3Packages.opencv3 rclcpp rcpputils sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  cyclonedds = self.callPackage (
    {
      buildRosPackage,
      cmake,
      iceoryx_binding_c,
      iceoryx_hoofs,
      iceoryx_posh,
      openssl,
    }:
    buildRosPackage {
      pname = "cyclonedds";
      version = "0.10.5-1";
      src = sources.cyclonedds;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ openssl ];
      propagatedBuildInputs = [ iceoryx_binding_c iceoryx_hoofs iceoryx_posh openssl ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  data_tamer_cpp = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      buildRosPackage,
      data_tamer_msgs,
      mcap_vendor,
      rclcpp,
    }:
    buildRosPackage {
      pname = "data_tamer_cpp";
      version = "0.9.4-4";
      src = sources.data_tamer_cpp;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ data_tamer_msgs mcap_vendor rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  data_tamer_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "data_tamer_msgs";
      version = "0.9.4-4";
      src = sources.data_tamer_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  delphi_esr_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "delphi_esr_msgs";
      version = "4.0.0-4";
      src = sources.delphi_esr_msgs;
      nativeBuildInputs = [ ament_cmake ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  delphi_mrr_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "delphi_mrr_msgs";
      version = "4.0.0-4";
      src = sources.delphi_mrr_msgs;
      nativeBuildInputs = [ ament_cmake ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  delphi_srr_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "delphi_srr_msgs";
      version = "4.0.0-4";
      src = sources.delphi_srr_msgs;
      nativeBuildInputs = [ ament_cmake ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  demo_nodes_cpp = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      example_interfaces,
      launch,
      launch_ros,
      launch_testing,
      launch_testing_ament_cmake,
      launch_testing_ros,
      launch_xml,
      rcl,
      rcl_interfaces,
      rclcpp,
      rclcpp_components,
      rcpputils,
      rcutils,
      rmw,
      std_msgs,
    }:
    buildRosPackage {
      pname = "demo_nodes_cpp";
      version = "0.33.4-1";
      src = sources.demo_nodes_cpp;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ launch_xml rcutils rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ example_interfaces launch_ros rcl rcl_interfaces rclcpp rclcpp_components rcpputils std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  demo_nodes_cpp_native = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      launch,
      launch_testing,
      launch_testing_ament_cmake,
      launch_testing_ros,
      rclcpp,
      rclcpp_components,
      rmw_fastrtps_cpp,
      std_msgs,
    }:
    buildRosPackage {
      pname = "demo_nodes_cpp_native";
      version = "0.33.4-1";
      src = sources.demo_nodes_cpp_native;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rclcpp_components rmw_fastrtps_cpp std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  demo_nodes_py = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_pep257,
      buildRosPackage,
      example_interfaces,
      python3Packages,
      rcl_interfaces,
      rclpy,
      std_msgs,
    }:
    buildRosPackage {
      pname = "demo_nodes_py";
      version = "0.33.4-1";
      src = sources.demo_nodes_py;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [  ];
      propagatedBuildInputs = [ example_interfaces rcl_interfaces rclpy std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  depth_image_proc = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      class_loader,
      cv_bridge,
      image_geometry,
      image_transport,
      message_filters,
      opencv,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      stereo_msgs,
      tf2,
      tf2_eigen,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "depth_image_proc";
      version = "5.0.3-1";
      src = sources.depth_image_proc;
      nativeBuildInputs = [ ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ class_loader ];
      propagatedBuildInputs = [ cv_bridge image_geometry image_transport message_filters opencv rclcpp rclcpp_components sensor_msgs stereo_msgs tf2 tf2_eigen tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  depthai = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      libusb1,
      nlohmann_json,
      opencv,
      ros_environment,
    }:
    buildRosPackage {
      pname = "depthai";
      version = "2.26.1-1";
      src = sources.depthai;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ libusb1 nlohmann_json opencv ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  depthimage_to_laserscan = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      image_geometry,
      opencv,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "depthimage_to_laserscan";
      version = "2.5.1-3";
      src = sources.depthimage_to_laserscan;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ image_geometry opencv rclcpp rclcpp_components sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  derived_object_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      shape_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "derived_object_msgs";
      version = "4.0.0-4";
      src = sources.derived_object_msgs;
      nativeBuildInputs = [ ament_cmake ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime shape_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  desktop = self.callPackage (
    {
      action_tutorials_cpp,
      action_tutorials_interfaces,
      action_tutorials_py,
      ament_cmake,
      angles,
      buildRosPackage,
      composition,
      demo_nodes_cpp,
      demo_nodes_cpp_native,
      demo_nodes_py,
      depthimage_to_laserscan,
      dummy_map_server,
      dummy_robot_bringup,
      dummy_sensors,
      examples_rclcpp_minimal_action_client,
      examples_rclcpp_minimal_action_server,
      examples_rclcpp_minimal_client,
      examples_rclcpp_minimal_composition,
      examples_rclcpp_minimal_publisher,
      examples_rclcpp_minimal_service,
      examples_rclcpp_minimal_subscriber,
      examples_rclcpp_minimal_timer,
      examples_rclcpp_multithreaded_executor,
      examples_rclpy_executors,
      examples_rclpy_minimal_action_client,
      examples_rclpy_minimal_action_server,
      examples_rclpy_minimal_client,
      examples_rclpy_minimal_publisher,
      examples_rclpy_minimal_service,
      examples_rclpy_minimal_subscriber,
      image_tools,
      intra_process_demo,
      joy,
      lifecycle,
      logging_demo,
      pcl_conversions,
      pendulum_control,
      pendulum_msgs,
      quality_of_service_demo_cpp,
      quality_of_service_demo_py,
      ros_base,
      rqt_common_plugins,
      rviz2,
      rviz_default_plugins,
      teleop_twist_joy,
      teleop_twist_keyboard,
      tlsf,
      tlsf_cpp,
      topic_monitor,
      turtlesim,
    }:
    buildRosPackage {
      pname = "desktop";
      version = "0.11.0-1";
      src = sources.desktop;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_tutorials_cpp action_tutorials_interfaces action_tutorials_py angles composition demo_nodes_cpp demo_nodes_cpp_native demo_nodes_py depthimage_to_laserscan dummy_map_server dummy_robot_bringup dummy_sensors examples_rclcpp_minimal_action_client examples_rclcpp_minimal_action_server examples_rclcpp_minimal_client examples_rclcpp_minimal_composition examples_rclcpp_minimal_publisher examples_rclcpp_minimal_service examples_rclcpp_minimal_subscriber examples_rclcpp_minimal_timer examples_rclcpp_multithreaded_executor examples_rclpy_executors examples_rclpy_minimal_action_client examples_rclpy_minimal_action_server examples_rclpy_minimal_client examples_rclpy_minimal_publisher examples_rclpy_minimal_service examples_rclpy_minimal_subscriber image_tools intra_process_demo joy lifecycle logging_demo pcl_conversions pendulum_control pendulum_msgs quality_of_service_demo_cpp quality_of_service_demo_py ros_base rqt_common_plugins rviz2 rviz_default_plugins teleop_twist_joy teleop_twist_keyboard tlsf tlsf_cpp topic_monitor turtlesim ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  desktop_full = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      desktop,
      perception,
      ros_gz_sim_demos,
      simulation,
    }:
    buildRosPackage {
      pname = "desktop_full";
      version = "0.11.0-1";
      src = sources.desktop_full;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ desktop perception ros_gz_sim_demos simulation ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  diagnostic_aggregator = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      diagnostic_msgs,
      launch_pytest,
      launch_testing_ament_cmake,
      launch_testing_ros,
      pluginlib,
      rcl_interfaces,
      rclcpp,
      rclpy,
      std_msgs,
    }:
    buildRosPackage {
      pname = "diagnostic_aggregator";
      version = "4.2.0-1";
      src = sources.diagnostic_aggregator;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ diagnostic_msgs pluginlib rcl_interfaces rclcpp std_msgs ];
      propagatedBuildInputs = [ rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  diagnostic_common_diagnostics = self.callPackage (
    {
      ament_cmake,
      ament_cmake_lint_cmake,
      ament_cmake_pytest,
      ament_cmake_python,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      diagnostic_updater,
      lm_sensors,
      rclpy,
    }:
    buildRosPackage {
      pname = "diagnostic_common_diagnostics";
      version = "4.2.0-1";
      src = sources.diagnostic_common_diagnostics;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ diagnostic_updater lm_sensors rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  diagnostic_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "diagnostic_msgs";
      version = "5.3.5-1";
      src = sources.diagnostic_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  diagnostic_updater = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      diagnostic_msgs,
      launch,
      launch_testing,
      launch_testing_ros,
      python3Packages,
      rclcpp,
      rclcpp_lifecycle,
      rclpy,
      std_msgs,
    }:
    buildRosPackage {
      pname = "diagnostic_updater";
      version = "4.2.0-1";
      src = sources.diagnostic_updater;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ diagnostic_msgs rclcpp rclpy std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  diagnostics = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      diagnostic_aggregator,
      diagnostic_common_diagnostics,
      diagnostic_updater,
      self_test,
    }:
    buildRosPackage {
      pname = "diagnostics";
      version = "4.2.0-1";
      src = sources.diagnostics;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ diagnostic_aggregator diagnostic_common_diagnostics diagnostic_updater self_test ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  diff_drive_controller = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      backward_ros,
      buildRosPackage,
      controller_interface,
      controller_manager,
      generate_parameter_library,
      geometry_msgs,
      hardware_interface,
      hardware_interface_testing,
      nav_msgs,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      rcpputils,
      realtime_tools,
      ros2_control_test_assets,
      tf2,
      tf2_msgs,
    }:
    buildRosPackage {
      pname = "diff_drive_controller";
      version = "4.11.0-1";
      src = sources.diff_drive_controller;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ generate_parameter_library ];
      propagatedBuildInputs = [ backward_ros controller_interface geometry_msgs hardware_interface nav_msgs pluginlib rclcpp rclcpp_lifecycle rcpputils realtime_tools tf2 tf2_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dolly = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      dolly_follow,
      dolly_gazebo,
      dolly_ignition,
    }:
    buildRosPackage {
      pname = "dolly";
      version = "0.4.0-6";
      src = sources.dolly;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ dolly_follow dolly_gazebo dolly_ignition ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dolly_follow = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      rclcpp,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "dolly_follow";
      version = "0.4.0-6";
      src = sources.dolly_follow;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rclcpp sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dolly_gazebo = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      dolly_follow,
      ros2launch,
      rviz2,
    }:
    buildRosPackage {
      pname = "dolly_gazebo";
      version = "0.4.0-6";
      src = sources.dolly_gazebo;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ dolly_follow ros2launch rviz2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dolly_ignition = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      dolly_follow,
      ros2launch,
      rviz2,
    }:
    buildRosPackage {
      pname = "dolly_ignition";
      version = "0.4.0-6";
      src = sources.dolly_ignition;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ dolly_follow ros2launch rviz2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  domain_bridge = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      example_interfaces,
      launch,
      launch_testing,
      launch_testing_ament_cmake,
      libyamlcpp,
      rclcpp,
      rclcpp_components,
      rcutils,
      rmw_connextdds,
      rmw_cyclonedds_cpp,
      rmw_fastrtps_cpp,
      rmw_implementation_cmake,
      rosbag2_cpp,
      rosgraph_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      rosidl_typesupport_cpp,
      test_msgs,
      zstd_vendor,
    }:
    buildRosPackage {
      pname = "domain_bridge";
      version = "0.5.0-5";
      src = sources.domain_bridge;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ libyamlcpp rclcpp rclcpp_components rosbag2_cpp rosidl_default_runtime rosidl_typesupport_cpp zstd_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  domain_coordinator = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "domain_coordinator";
      version = "0.12.0-3";
      src = sources.domain_coordinator;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  draco_point_cloud_transport = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      pluginlib,
      point_cloud_interfaces,
      point_cloud_transport,
      rclcpp,
      rcpputils,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "draco_point_cloud_transport";
      version = "4.0.0-1";
      src = sources.draco_point_cloud_transport;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ pluginlib point_cloud_interfaces point_cloud_transport rclcpp rcpputils sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dual_arm_panda_moveit_config = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      joint_state_publisher,
      joint_state_publisher_gui,
      moveit_resources_panda_description,
      robot_state_publisher,
      topic_tools,
      xacro,
    }:
    buildRosPackage {
      pname = "dual_arm_panda_moveit_config";
      version = "3.0.0-3";
      src = sources.dual_arm_panda_moveit_config;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ joint_state_publisher joint_state_publisher_gui moveit_resources_panda_description robot_state_publisher topic_tools xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dummy_map_server = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      nav_msgs,
      rclcpp,
    }:
    buildRosPackage {
      pname = "dummy_map_server";
      version = "0.33.4-1";
      src = sources.dummy_map_server;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ nav_msgs rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dummy_robot_bringup = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      dummy_map_server,
      dummy_sensors,
      launch,
      launch_ros,
      robot_state_publisher,
    }:
    buildRosPackage {
      pname = "dummy_robot_bringup";
      version = "0.33.4-1";
      src = sources.dummy_robot_bringup;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_index_python launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ dummy_map_server dummy_sensors launch_ros robot_state_publisher ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dummy_sensors = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "dummy_sensors";
      version = "0.33.4-1";
      src = sources.dummy_sensors;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dwb_core = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      dwb_msgs,
      geometry_msgs,
      nav2_common,
      nav2_core,
      nav2_costmap_2d,
      nav2_util,
      nav_2d_msgs,
      nav_2d_utils,
      nav_msgs,
      pluginlib,
      rclcpp,
      sensor_msgs,
      std_msgs,
      tf2_ros,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "dwb_core";
      version = "1.3.1-1";
      src = sources.dwb_core;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ nav2_common nav_2d_msgs sensor_msgs visualization_msgs ];
      propagatedBuildInputs = [ dwb_msgs geometry_msgs nav2_core nav2_costmap_2d nav2_util nav_2d_utils nav_msgs pluginlib rclcpp std_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dwb_critics = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      angles,
      buildRosPackage,
      costmap_queue,
      dwb_core,
      geometry_msgs,
      nav2_common,
      nav2_costmap_2d,
      nav2_util,
      nav_2d_msgs,
      nav_2d_utils,
      pluginlib,
      rclcpp,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "dwb_critics";
      version = "1.3.1-1";
      src = sources.dwb_critics;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ nav2_common ];
      propagatedBuildInputs = [ angles costmap_queue dwb_core geometry_msgs nav2_costmap_2d nav2_util nav_2d_msgs nav_2d_utils pluginlib rclcpp sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dwb_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      nav_2d_msgs,
      nav_msgs,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "dwb_msgs";
      version = "1.3.1-1";
      src = sources.dwb_msgs;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs nav_2d_msgs nav_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dwb_plugins = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      angles,
      buildRosPackage,
      dwb_core,
      nav2_common,
      nav2_util,
      nav_2d_msgs,
      nav_2d_utils,
      pluginlib,
      rclcpp,
    }:
    buildRosPackage {
      pname = "dwb_plugins";
      version = "1.3.1-1";
      src = sources.dwb_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ nav2_common ];
      propagatedBuildInputs = [ angles dwb_core nav2_util nav_2d_msgs nav_2d_utils pluginlib rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dynamic_edt_3d = self.callPackage (
    {
      buildRosPackage,
      cmake,
      octomap,
    }:
    buildRosPackage {
      pname = "dynamic_edt_3d";
      version = "1.10.0-4";
      src = sources.dynamic_edt_3d;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ octomap ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dynamixel_hardware = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      dynamixel_workbench_toolbox,
      hardware_interface,
      lifecycle_msgs,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
    }:
    buildRosPackage {
      pname = "dynamixel_hardware";
      version = "0.5.0-1";
      src = sources.dynamixel_hardware;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ dynamixel_workbench_toolbox hardware_interface lifecycle_msgs pluginlib rclcpp rclcpp_lifecycle ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dynamixel_sdk = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "dynamixel_sdk";
      version = "3.7.40-6";
      src = sources.dynamixel_sdk;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dynamixel_sdk_custom_interfaces = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "dynamixel_sdk_custom_interfaces";
      version = "3.7.40-6";
      src = sources.dynamixel_sdk_custom_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dynamixel_sdk_examples = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      dynamixel_sdk,
      dynamixel_sdk_custom_interfaces,
      rclcpp,
    }:
    buildRosPackage {
      pname = "dynamixel_sdk_examples";
      version = "3.7.40-6";
      src = sources.dynamixel_sdk_examples;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ dynamixel_sdk dynamixel_sdk_custom_interfaces rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dynamixel_workbench = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      dynamixel_workbench_toolbox,
    }:
    buildRosPackage {
      pname = "dynamixel_workbench";
      version = "2.2.3-5";
      src = sources.dynamixel_workbench;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ dynamixel_workbench_toolbox ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dynamixel_workbench_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "dynamixel_workbench_msgs";
      version = "2.0.3-5";
      src = sources.dynamixel_workbench_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  dynamixel_workbench_toolbox = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      dynamixel_sdk,
      rclcpp,
    }:
    buildRosPackage {
      pname = "dynamixel_workbench_toolbox";
      version = "2.2.3-5";
      src = sources.dynamixel_workbench_toolbox;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ dynamixel_sdk rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_build = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      ecl_license,
    }:
    buildRosPackage {
      pname = "ecl_build";
      version = "1.0.3-5";
      src = sources.ecl_build;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_license ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_command_line = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_license,
    }:
    buildRosPackage {
      pname = "ecl_command_line";
      version = "1.2.1-5";
      src = sources.ecl_command_line;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ ecl_license ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_concepts = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_config,
      ecl_license,
      ecl_type_traits,
    }:
    buildRosPackage {
      pname = "ecl_concepts";
      version = "1.2.1-5";
      src = sources.ecl_concepts;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ ecl_config ecl_license ecl_type_traits ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_config = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_license,
    }:
    buildRosPackage {
      pname = "ecl_config";
      version = "1.2.0-5";
      src = sources.ecl_config;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_build ecl_license ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_console = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      ecl_build,
      ecl_config,
      ecl_license,
    }:
    buildRosPackage {
      pname = "ecl_console";
      version = "1.2.0-5";
      src = sources.ecl_console;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_build ecl_config ecl_license ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_containers = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_config,
      ecl_converters,
      ecl_errors,
      ecl_exceptions,
      ecl_formatters,
      ecl_license,
      ecl_mpl,
      ecl_type_traits,
      ecl_utilities,
    }:
    buildRosPackage {
      pname = "ecl_containers";
      version = "1.2.1-5";
      src = sources.ecl_containers;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ ecl_config ecl_converters ecl_errors ecl_exceptions ecl_formatters ecl_license ecl_mpl ecl_type_traits ecl_utilities ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_converters = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_concepts,
      ecl_config,
      ecl_errors,
      ecl_exceptions,
      ecl_license,
      ecl_mpl,
      ecl_type_traits,
    }:
    buildRosPackage {
      pname = "ecl_converters";
      version = "1.2.1-5";
      src = sources.ecl_converters;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ ecl_concepts ecl_config ecl_errors ecl_exceptions ecl_license ecl_mpl ecl_type_traits ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_converters_lite = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_config,
      ecl_license,
    }:
    buildRosPackage {
      pname = "ecl_converters_lite";
      version = "1.2.0-5";
      src = sources.ecl_converters_lite;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_config ecl_license ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_core = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      ecl_command_line,
      ecl_concepts,
      ecl_containers,
      ecl_converters,
      ecl_core_apps,
      ecl_devices,
      ecl_eigen,
      ecl_exceptions,
      ecl_formatters,
      ecl_geometry,
      ecl_ipc,
      ecl_linear_algebra,
      ecl_math,
      ecl_mpl,
      ecl_sigslots,
      ecl_statistics,
      ecl_streams,
      ecl_threads,
      ecl_time,
      ecl_type_traits,
      ecl_utilities,
    }:
    buildRosPackage {
      pname = "ecl_core";
      version = "1.2.1-5";
      src = sources.ecl_core;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_command_line ecl_concepts ecl_containers ecl_converters ecl_core_apps ecl_devices ecl_eigen ecl_exceptions ecl_formatters ecl_geometry ecl_ipc ecl_linear_algebra ecl_math ecl_mpl ecl_sigslots ecl_statistics ecl_streams ecl_threads ecl_time ecl_type_traits ecl_utilities ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_core_apps = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      ecl_build,
      ecl_command_line,
      ecl_config,
      ecl_containers,
      ecl_converters,
      ecl_devices,
      ecl_errors,
      ecl_exceptions,
      ecl_formatters,
      ecl_geometry,
      ecl_ipc,
      ecl_license,
      ecl_linear_algebra,
      ecl_sigslots,
      ecl_streams,
      ecl_threads,
      ecl_time_lite,
      ecl_type_traits,
    }:
    buildRosPackage {
      pname = "ecl_core_apps";
      version = "1.2.1-5";
      src = sources.ecl_core_apps;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_build ecl_command_line ecl_config ecl_containers ecl_converters ecl_devices ecl_errors ecl_exceptions ecl_formatters ecl_geometry ecl_ipc ecl_license ecl_linear_algebra ecl_sigslots ecl_streams ecl_threads ecl_time_lite ecl_type_traits ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_devices = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_config,
      ecl_containers,
      ecl_errors,
      ecl_license,
      ecl_mpl,
      ecl_threads,
      ecl_type_traits,
      ecl_utilities,
    }:
    buildRosPackage {
      pname = "ecl_devices";
      version = "1.2.1-5";
      src = sources.ecl_devices;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ ecl_config ecl_containers ecl_errors ecl_license ecl_mpl ecl_threads ecl_type_traits ecl_utilities ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_eigen = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      eigen,
    }:
    buildRosPackage {
      pname = "ecl_eigen";
      version = "1.2.1-5";
      src = sources.ecl_eigen;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_errors = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      ecl_build,
      ecl_config,
      ecl_license,
    }:
    buildRosPackage {
      pname = "ecl_errors";
      version = "1.2.0-5";
      src = sources.ecl_errors;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ ecl_config ecl_license ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_exceptions = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      ecl_build,
      ecl_config,
      ecl_errors,
      ecl_license,
    }:
    buildRosPackage {
      pname = "ecl_exceptions";
      version = "1.2.1-5";
      src = sources.ecl_exceptions;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ ecl_config ecl_errors ecl_license ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_filesystem = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_config,
      ecl_errors,
      ecl_license,
    }:
    buildRosPackage {
      pname = "ecl_filesystem";
      version = "1.2.1-5";
      src = sources.ecl_filesystem;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_build ecl_config ecl_errors ecl_license ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_formatters = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      ecl_build,
      ecl_config,
      ecl_converters,
      ecl_exceptions,
      ecl_license,
    }:
    buildRosPackage {
      pname = "ecl_formatters";
      version = "1.2.1-5";
      src = sources.ecl_formatters;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ ecl_config ecl_converters ecl_exceptions ecl_license ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_geometry = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_config,
      ecl_containers,
      ecl_exceptions,
      ecl_formatters,
      ecl_license,
      ecl_linear_algebra,
      ecl_math,
      ecl_mpl,
      ecl_type_traits,
    }:
    buildRosPackage {
      pname = "ecl_geometry";
      version = "1.2.1-5";
      src = sources.ecl_geometry;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_build ecl_config ecl_containers ecl_exceptions ecl_formatters ecl_license ecl_linear_algebra ecl_math ecl_mpl ecl_type_traits ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_io = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      ecl_build,
      ecl_config,
      ecl_errors,
      ecl_license,
    }:
    buildRosPackage {
      pname = "ecl_io";
      version = "1.2.0-5";
      src = sources.ecl_io;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ ecl_config ecl_errors ecl_license ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_ipc = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_config,
      ecl_errors,
      ecl_exceptions,
      ecl_license,
      ecl_threads,
      ecl_time,
      ecl_time_lite,
    }:
    buildRosPackage {
      pname = "ecl_ipc";
      version = "1.2.1-5";
      src = sources.ecl_ipc;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_build ecl_config ecl_errors ecl_exceptions ecl_license ecl_threads ecl_time ecl_time_lite ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_license = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ecl_license";
      version = "1.0.3-5";
      src = sources.ecl_license;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_linear_algebra = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_converters,
      ecl_eigen,
      ecl_exceptions,
      ecl_formatters,
      ecl_license,
      ecl_math,
      sophus,
    }:
    buildRosPackage {
      pname = "ecl_linear_algebra";
      version = "1.2.1-5";
      src = sources.ecl_linear_algebra;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_build ecl_converters ecl_eigen ecl_exceptions ecl_formatters ecl_license ecl_math sophus ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_lite = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      ecl_config,
      ecl_converters_lite,
      ecl_errors,
      ecl_io,
      ecl_sigslots_lite,
      ecl_time_lite,
    }:
    buildRosPackage {
      pname = "ecl_lite";
      version = "1.2.0-5";
      src = sources.ecl_lite;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_config ecl_converters_lite ecl_errors ecl_io ecl_sigslots_lite ecl_time_lite ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_manipulators = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_exceptions,
      ecl_formatters,
      ecl_geometry,
      ecl_license,
    }:
    buildRosPackage {
      pname = "ecl_manipulators";
      version = "1.2.1-5";
      src = sources.ecl_manipulators;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_build ecl_exceptions ecl_formatters ecl_geometry ecl_license ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_math = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_license,
      ecl_type_traits,
    }:
    buildRosPackage {
      pname = "ecl_math";
      version = "1.2.1-5";
      src = sources.ecl_math;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ ecl_license ecl_type_traits ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_mobile_robot = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_errors,
      ecl_formatters,
      ecl_geometry,
      ecl_license,
      ecl_linear_algebra,
      ecl_math,
    }:
    buildRosPackage {
      pname = "ecl_mobile_robot";
      version = "1.2.1-5";
      src = sources.ecl_mobile_robot;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_build ecl_errors ecl_formatters ecl_geometry ecl_license ecl_linear_algebra ecl_math ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_mpl = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_license,
    }:
    buildRosPackage {
      pname = "ecl_mpl";
      version = "1.2.1-5";
      src = sources.ecl_mpl;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ ecl_license ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_sigslots = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_config,
      ecl_license,
      ecl_threads,
    }:
    buildRosPackage {
      pname = "ecl_sigslots";
      version = "1.2.1-5";
      src = sources.ecl_sigslots;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ ecl_config ecl_license ecl_threads ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_sigslots_lite = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      ecl_build,
      ecl_config,
      ecl_errors,
      ecl_license,
    }:
    buildRosPackage {
      pname = "ecl_sigslots_lite";
      version = "1.2.0-5";
      src = sources.ecl_sigslots_lite;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ ecl_config ecl_errors ecl_license ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_statistics = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_config,
      ecl_license,
      ecl_linear_algebra,
      ecl_mpl,
      ecl_type_traits,
    }:
    buildRosPackage {
      pname = "ecl_statistics";
      version = "1.2.1-5";
      src = sources.ecl_statistics;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_build ecl_config ecl_license ecl_linear_algebra ecl_mpl ecl_type_traits ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_streams = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_concepts,
      ecl_converters,
      ecl_devices,
      ecl_errors,
      ecl_license,
      ecl_time,
      ecl_type_traits,
    }:
    buildRosPackage {
      pname = "ecl_streams";
      version = "1.2.1-5";
      src = sources.ecl_streams;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ ecl_concepts ecl_converters ecl_devices ecl_errors ecl_license ecl_time ecl_type_traits ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_threads = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_concepts,
      ecl_config,
      ecl_errors,
      ecl_exceptions,
      ecl_license,
      ecl_time,
      ecl_utilities,
    }:
    buildRosPackage {
      pname = "ecl_threads";
      version = "1.2.1-5";
      src = sources.ecl_threads;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_build ecl_concepts ecl_config ecl_errors ecl_exceptions ecl_license ecl_time ecl_utilities ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_time = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_config,
      ecl_errors,
      ecl_exceptions,
      ecl_license,
      ecl_time_lite,
    }:
    buildRosPackage {
      pname = "ecl_time";
      version = "1.2.1-5";
      src = sources.ecl_time;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_build ecl_config ecl_errors ecl_exceptions ecl_license ecl_time_lite ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_time_lite = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      ecl_build,
      ecl_config,
      ecl_errors,
      ecl_license,
    }:
    buildRosPackage {
      pname = "ecl_time_lite";
      version = "1.2.0-5";
      src = sources.ecl_time_lite;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_build ecl_config ecl_errors ecl_license ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_tools = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      ecl_build,
      ecl_license,
    }:
    buildRosPackage {
      pname = "ecl_tools";
      version = "1.0.3-5";
      src = sources.ecl_tools;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ecl_build ecl_license ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_type_traits = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_config,
      ecl_license,
      ecl_mpl,
    }:
    buildRosPackage {
      pname = "ecl_type_traits";
      version = "1.2.1-5";
      src = sources.ecl_type_traits;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ ecl_config ecl_license ecl_mpl ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ecl_utilities = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ecl_build,
      ecl_concepts,
      ecl_license,
      ecl_mpl,
    }:
    buildRosPackage {
      pname = "ecl_utilities";
      version = "1.2.1-5";
      src = sources.ecl_utilities;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ ecl_concepts ecl_license ecl_mpl ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  effort_controllers = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      backward_ros,
      buildRosPackage,
      controller_manager,
      forward_command_controller,
      hardware_interface,
      hardware_interface_testing,
      pluginlib,
      rclcpp,
      ros2_control_test_assets,
    }:
    buildRosPackage {
      pname = "effort_controllers";
      version = "4.11.0-1";
      src = sources.effort_controllers;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ backward_ros forward_command_controller pluginlib rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  eigen3_cmake_module = self.callPackage (
    {
      ament_cmake,
      ament_cmake_copyright,
      ament_cmake_lint_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "eigen3_cmake_module";
      version = "0.3.0-3";
      src = sources.eigen3_cmake_module;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ament_cmake ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  eigen_stl_containers = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      eigen,
    }:
    buildRosPackage {
      pname = "eigen_stl_containers";
      version = "1.0.0-7";
      src = sources.eigen_stl_containers;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  eigenpy = self.callPackage (
    {
      boost,
      buildPackages,
      buildRosPackage,
      cmake,
      doxygen,
      eigen,
      git,
      python3,
      python3Packages,
    }:
    buildRosPackage {
      pname = "eigenpy";
      version = "3.7.0-1";
      src = sources.eigenpy;
      nativeBuildInputs = [ cmake doxygen git ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost eigen python3 python3Packages.scipy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  etsi_its_cam_coding = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      ros_environment,
    }:
    buildRosPackage {
      pname = "etsi_its_cam_coding";
      version = "2.1.0-1";
      src = sources.etsi_its_cam_coding;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  etsi_its_cam_conversion = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      etsi_its_cam_coding,
      etsi_its_cam_msgs,
      etsi_its_primitives_conversion,
      ros_environment,
    }:
    buildRosPackage {
      pname = "etsi_its_cam_conversion";
      version = "2.1.0-1";
      src = sources.etsi_its_cam_conversion;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ etsi_its_cam_coding etsi_its_cam_msgs etsi_its_primitives_conversion ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  etsi_its_cam_msgs = self.callPackage (
    {
      buildRosPackage,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "etsi_its_cam_msgs";
      version = "2.1.0-1";
      src = sources.etsi_its_cam_msgs;
      nativeBuildInputs = [ rosidl_default_generators ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  etsi_its_coding = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      etsi_its_cam_coding,
      etsi_its_cpm_ts_coding,
      etsi_its_denm_coding,
      ros_environment,
    }:
    buildRosPackage {
      pname = "etsi_its_coding";
      version = "2.1.0-1";
      src = sources.etsi_its_coding;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ etsi_its_cam_coding etsi_its_cpm_ts_coding etsi_its_denm_coding ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  etsi_its_conversion = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      etsi_its_cam_conversion,
      etsi_its_cpm_ts_conversion,
      etsi_its_denm_conversion,
      rclcpp,
      rclcpp_components,
      ros_environment,
      std_msgs,
      udp_msgs,
    }:
    buildRosPackage {
      pname = "etsi_its_conversion";
      version = "2.1.0-1";
      src = sources.etsi_its_conversion;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ etsi_its_cam_conversion etsi_its_cpm_ts_conversion etsi_its_denm_conversion rclcpp rclcpp_components std_msgs udp_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  etsi_its_cpm_ts_coding = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      ros_environment,
    }:
    buildRosPackage {
      pname = "etsi_its_cpm_ts_coding";
      version = "2.1.0-1";
      src = sources.etsi_its_cpm_ts_coding;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  etsi_its_cpm_ts_conversion = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      etsi_its_cpm_ts_coding,
      etsi_its_cpm_ts_msgs,
      etsi_its_primitives_conversion,
      ros_environment,
    }:
    buildRosPackage {
      pname = "etsi_its_cpm_ts_conversion";
      version = "2.1.0-1";
      src = sources.etsi_its_cpm_ts_conversion;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ etsi_its_cpm_ts_coding etsi_its_cpm_ts_msgs etsi_its_primitives_conversion ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  etsi_its_cpm_ts_msgs = self.callPackage (
    {
      buildRosPackage,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "etsi_its_cpm_ts_msgs";
      version = "2.1.0-1";
      src = sources.etsi_its_cpm_ts_msgs;
      nativeBuildInputs = [ rosidl_default_generators ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  etsi_its_denm_coding = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      ros_environment,
    }:
    buildRosPackage {
      pname = "etsi_its_denm_coding";
      version = "2.1.0-1";
      src = sources.etsi_its_denm_coding;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  etsi_its_denm_conversion = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      etsi_its_denm_coding,
      etsi_its_denm_msgs,
      etsi_its_primitives_conversion,
      ros_environment,
    }:
    buildRosPackage {
      pname = "etsi_its_denm_conversion";
      version = "2.1.0-1";
      src = sources.etsi_its_denm_conversion;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ etsi_its_denm_coding etsi_its_denm_msgs etsi_its_primitives_conversion ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  etsi_its_denm_msgs = self.callPackage (
    {
      buildRosPackage,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "etsi_its_denm_msgs";
      version = "2.1.0-1";
      src = sources.etsi_its_denm_msgs;
      nativeBuildInputs = [ rosidl_default_generators ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  etsi_its_messages = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      etsi_its_coding,
      etsi_its_conversion,
      etsi_its_msgs,
      etsi_its_msgs_utils,
      ros_environment,
    }:
    buildRosPackage {
      pname = "etsi_its_messages";
      version = "2.1.0-1";
      src = sources.etsi_its_messages;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ etsi_its_coding etsi_its_conversion etsi_its_msgs etsi_its_msgs_utils ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  etsi_its_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      etsi_its_cam_msgs,
      etsi_its_cpm_ts_msgs,
      etsi_its_denm_msgs,
      ros_environment,
    }:
    buildRosPackage {
      pname = "etsi_its_msgs";
      version = "2.1.0-1";
      src = sources.etsi_its_msgs;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ etsi_its_cam_msgs etsi_its_cpm_ts_msgs etsi_its_denm_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  etsi_its_msgs_utils = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      etsi_its_msgs,
      geographiclib,
      geometry_msgs,
      ros_environment,
    }:
    buildRosPackage {
      pname = "etsi_its_msgs_utils";
      version = "2.1.0-1";
      src = sources.etsi_its_msgs_utils;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ etsi_its_msgs geographiclib geometry_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  etsi_its_primitives_conversion = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      ros_environment,
    }:
    buildRosPackage {
      pname = "etsi_its_primitives_conversion";
      version = "2.1.0-1";
      src = sources.etsi_its_primitives_conversion;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  etsi_its_rviz_plugins = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      etsi_its_msgs,
      etsi_its_msgs_utils,
      pluginlib,
      qt5,
      rclcpp,
      ros_environment,
      rviz2,
      rviz_common,
      rviz_default_plugins,
      rviz_ogre_vendor,
      rviz_rendering,
      rviz_satellite,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "etsi_its_rviz_plugins";
      version = "2.1.0-1";
      src = sources.etsi_its_rviz_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ etsi_its_msgs etsi_its_msgs_utils pluginlib qt5.qtbase rclcpp rviz2 rviz_common rviz_default_plugins rviz_ogre_vendor rviz_rendering rviz_satellite tf2 tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  event_camera_codecs = self.callPackage (
    {
      ament_cmake,
      ament_cmake_auto,
      ament_cmake_clang_format,
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      class_loader,
      event_camera_msgs,
      rclcpp,
      ros_environment,
      rosbag2_cpp,
    }:
    buildRosPackage {
      pname = "event_camera_codecs";
      version = "1.3.5-1";
      src = sources.event_camera_codecs;
      nativeBuildInputs = [ ament_cmake ament_cmake_auto ament_cmake_ros ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ class_loader event_camera_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  event_camera_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "event_camera_msgs";
      version = "1.3.6-1";
      src = sources.event_camera_msgs;
      nativeBuildInputs = [ ament_cmake ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  event_camera_py = self.callPackage (
    {
      ament_cmake,
      ament_cmake_auto,
      ament_cmake_clang_format,
      ament_cmake_pytest,
      ament_cmake_python,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      event_camera_codecs,
      event_camera_msgs,
      pybind11_vendor,
      python3Packages,
      python_cmake_module,
      rclpy,
      ros_environment,
      rosbag2_py,
      rosbag2_storage_default_plugins,
      rosidl_runtime_py,
      rpyutils,
    }:
    buildRosPackage {
      pname = "event_camera_py";
      version = "1.3.6-1";
      src = sources.event_camera_py;
      nativeBuildInputs = [ ament_cmake ament_cmake_auto ament_cmake_python ament_cmake_ros python_cmake_module ];
      propagatedNativeBuildInputs = [ ros_environment rpyutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ event_camera_codecs event_camera_msgs pybind11_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  event_camera_renderer = self.callPackage (
    {
      ament_cmake,
      ament_cmake_auto,
      ament_cmake_clang_format,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      event_camera_codecs,
      event_camera_msgs,
      image_transport,
      rclcpp,
      rclcpp_components,
      ros_environment,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "event_camera_renderer";
      version = "1.3.4-1";
      src = sources.event_camera_renderer;
      nativeBuildInputs = [ ament_cmake ament_cmake_auto ament_cmake_ros ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ event_camera_codecs event_camera_msgs image_transport rclcpp rclcpp_components sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  example_interfaces = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "example_interfaces";
      version = "0.12.0-3";
      src = sources.example_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclcpp_async_client = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      example_interfaces,
      rclcpp,
    }:
    buildRosPackage {
      pname = "examples_rclcpp_async_client";
      version = "0.19.4-1";
      src = sources.examples_rclcpp_async_client;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ example_interfaces rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclcpp_cbg_executor = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      std_msgs,
    }:
    buildRosPackage {
      pname = "examples_rclcpp_cbg_executor";
      version = "0.19.4-1";
      src = sources.examples_rclcpp_cbg_executor;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclcpp_minimal_action_client = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      example_interfaces,
      rclcpp,
      rclcpp_action,
    }:
    buildRosPackage {
      pname = "examples_rclcpp_minimal_action_client";
      version = "0.19.4-1";
      src = sources.examples_rclcpp_minimal_action_client;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ example_interfaces rclcpp rclcpp_action ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclcpp_minimal_action_server = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      example_interfaces,
      rclcpp,
      rclcpp_action,
    }:
    buildRosPackage {
      pname = "examples_rclcpp_minimal_action_server";
      version = "0.19.4-1";
      src = sources.examples_rclcpp_minimal_action_server;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ example_interfaces rclcpp rclcpp_action ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclcpp_minimal_client = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      example_interfaces,
      rclcpp,
    }:
    buildRosPackage {
      pname = "examples_rclcpp_minimal_client";
      version = "0.19.4-1";
      src = sources.examples_rclcpp_minimal_client;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ example_interfaces rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclcpp_minimal_composition = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      rclcpp_components,
      std_msgs,
    }:
    buildRosPackage {
      pname = "examples_rclcpp_minimal_composition";
      version = "0.19.4-1";
      src = sources.examples_rclcpp_minimal_composition;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rclcpp_components std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclcpp_minimal_publisher = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      std_msgs,
    }:
    buildRosPackage {
      pname = "examples_rclcpp_minimal_publisher";
      version = "0.19.4-1";
      src = sources.examples_rclcpp_minimal_publisher;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclcpp_minimal_service = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      example_interfaces,
      rclcpp,
    }:
    buildRosPackage {
      pname = "examples_rclcpp_minimal_service";
      version = "0.19.4-1";
      src = sources.examples_rclcpp_minimal_service;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ example_interfaces rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclcpp_minimal_subscriber = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      rclcpp_components,
      std_msgs,
    }:
    buildRosPackage {
      pname = "examples_rclcpp_minimal_subscriber";
      version = "0.19.4-1";
      src = sources.examples_rclcpp_minimal_subscriber;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rclcpp_components std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclcpp_minimal_timer = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
    }:
    buildRosPackage {
      pname = "examples_rclcpp_minimal_timer";
      version = "0.19.4-1";
      src = sources.examples_rclcpp_minimal_timer;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclcpp_multithreaded_executor = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      std_msgs,
    }:
    buildRosPackage {
      pname = "examples_rclcpp_multithreaded_executor";
      version = "0.19.4-1";
      src = sources.examples_rclcpp_multithreaded_executor;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclcpp_wait_set = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      example_interfaces,
      rclcpp,
      rclcpp_components,
      std_msgs,
    }:
    buildRosPackage {
      pname = "examples_rclcpp_wait_set";
      version = "0.19.4-1";
      src = sources.examples_rclcpp_wait_set;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ example_interfaces rclcpp rclcpp_components std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclpy_executors = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
      rclpy,
      std_msgs,
    }:
    buildRosPackage {
      pname = "examples_rclpy_executors";
      version = "0.19.4-1";
      src = sources.examples_rclpy_executors;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclpy_guard_conditions = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
      rclpy,
    }:
    buildRosPackage {
      pname = "examples_rclpy_guard_conditions";
      version = "0.19.4-1";
      src = sources.examples_rclpy_guard_conditions;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclpy_minimal_action_client = self.callPackage (
    {
      action_msgs,
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      example_interfaces,
      python3Packages,
      rclpy,
    }:
    buildRosPackage {
      pname = "examples_rclpy_minimal_action_client";
      version = "0.19.4-1";
      src = sources.examples_rclpy_minimal_action_client;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs example_interfaces rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclpy_minimal_action_server = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      example_interfaces,
      python3Packages,
      rclpy,
    }:
    buildRosPackage {
      pname = "examples_rclpy_minimal_action_server";
      version = "0.19.4-1";
      src = sources.examples_rclpy_minimal_action_server;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ example_interfaces rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclpy_minimal_client = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      example_interfaces,
      python3Packages,
      rclpy,
      std_msgs,
    }:
    buildRosPackage {
      pname = "examples_rclpy_minimal_client";
      version = "0.19.4-1";
      src = sources.examples_rclpy_minimal_client;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ example_interfaces rclpy std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclpy_minimal_publisher = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
      rclpy,
      std_msgs,
    }:
    buildRosPackage {
      pname = "examples_rclpy_minimal_publisher";
      version = "0.19.4-1";
      src = sources.examples_rclpy_minimal_publisher;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclpy_minimal_service = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      example_interfaces,
      python3Packages,
      rclpy,
      std_msgs,
    }:
    buildRosPackage {
      pname = "examples_rclpy_minimal_service";
      version = "0.19.4-1";
      src = sources.examples_rclpy_minimal_service;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ example_interfaces rclpy std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclpy_minimal_subscriber = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
      rclpy,
      std_msgs,
    }:
    buildRosPackage {
      pname = "examples_rclpy_minimal_subscriber";
      version = "0.19.4-1";
      src = sources.examples_rclpy_minimal_subscriber;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_rclpy_pointcloud_publisher = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildPackages,
      buildRosPackage,
      python3Packages,
      rclpy,
      sensor_msgs,
      sensor_msgs_py,
      std_msgs,
    }:
    buildRosPackage {
      pname = "examples_rclpy_pointcloud_publisher";
      version = "0.19.4-1";
      src = sources.examples_rclpy_pointcloud_publisher;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy sensor_msgs sensor_msgs_py std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  examples_tf2_py = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      geometry_msgs,
      launch_ros,
      python3Packages,
      rclpy,
      sensor_msgs,
      tf2_ros_py,
    }:
    buildRosPackage {
      pname = "examples_tf2_py";
      version = "0.36.4-1";
      src = sources.examples_tf2_py;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs launch_ros rclpy sensor_msgs tf2_ros_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  executive_smach = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      smach,
      smach_msgs,
      smach_ros,
    }:
    buildRosPackage {
      pname = "executive_smach";
      version = "3.0.3-3";
      src = sources.executive_smach;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ smach smach_msgs smach_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fastcdr = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      buildRosPackage,
      cmake,
    }:
    buildRosPackage {
      pname = "fastcdr";
      version = "2.2.2-1";
      src = sources.fastcdr;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fastrtps = self.callPackage (
    {
      asio,
      buildRosPackage,
      cmake,
      fastcdr,
      foonathan_memory_vendor,
      openssl,
      python3,
      tinyxml-2,
    }:
    buildRosPackage {
      pname = "fastrtps";
      version = "2.14.1-1";
      src = sources.fastrtps;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ asio ];
      propagatedBuildInputs = [ fastcdr foonathan_memory_vendor openssl python3 tinyxml-2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fastrtps_cmake_module = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "fastrtps_cmake_module";
      version = "3.6.0-2";
      src = sources.fastrtps_cmake_module;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ament_cmake ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ffmpeg_image_transport = self.callPackage (
    {
      ament_cmake,
      ament_cmake_clang_format,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cv_bridge,
      ffmpeg,
      ffmpeg_image_transport_msgs,
      image_transport,
      libogg,
      pkg-config,
      pluginlib,
      rclcpp,
      rcutils,
      ros_environment,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "ffmpeg_image_transport";
      version = "1.0.1-2";
      src = sources.ffmpeg_image_transport;
      nativeBuildInputs = [ ament_cmake ament_cmake_ros pkg-config ros_environment ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge ffmpeg ffmpeg_image_transport_msgs image_transport libogg pluginlib rclcpp sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ffmpeg_image_transport_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "ffmpeg_image_transport_msgs";
      version = "1.0.2-3";
      src = sources.ffmpeg_image_transport_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ffmpeg_image_transport_tools = self.callPackage (
    {
      ament_cmake,
      ament_cmake_clang_format,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cv_bridge,
      ffmpeg_image_transport,
      ffmpeg_image_transport_msgs,
      rclcpp,
      ros_environment,
      rosbag2_cpp,
      rosbag2_storage,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "ffmpeg_image_transport_tools";
      version = "1.0.1-2";
      src = sources.ffmpeg_image_transport_tools;
      nativeBuildInputs = [ ament_cmake ament_cmake_ros ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge ffmpeg_image_transport ffmpeg_image_transport_msgs rclcpp rosbag2_cpp rosbag2_storage sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fields2cover = self.callPackage (
    {
      boost,
      buildRosPackage,
      cmake,
      eigen,
      gdal,
      geos,
      git,
      gtest,
      lcov,
      protobuf,
      python3,
      python3Packages,
      swig,
      tbb,
      tinyxml-2,
    }:
    buildRosPackage {
      pname = "fields2cover";
      version = "2.0.0-9";
      src = sources.fields2cover;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [ git gtest python3 ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost eigen gdal geos protobuf python3 python3Packages.matplotlib python3Packages.tkinter swig tbb tinyxml-2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  filters = self.callPackage (
    {
      ament_cmake,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_gtest,
      ament_cmake_uncrustify,
      ament_cmake_xmllint,
      boost,
      buildRosPackage,
      pluginlib,
      rclcpp,
    }:
    buildRosPackage {
      pname = "filters";
      version = "2.1.2-2";
      src = sources.filters;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost pluginlib rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  find_object_2d = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      cv_bridge,
      geometry_msgs,
      image_transport,
      message_filters,
      qt5,
      rclcpp,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
      std_srvs,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
      zlib,
    }:
    buildRosPackage {
      pname = "find_object_2d";
      version = "0.7.1-2";
      src = sources.find_object_2d;
      nativeBuildInputs = [ ament_cmake ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces cv_bridge geometry_msgs image_transport message_filters qt5.qtbase rclcpp rosidl_default_runtime sensor_msgs std_msgs std_srvs tf2 tf2_geometry_msgs tf2_ros zlib ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  flex_sync = self.callPackage (
    {
      ament_clang_format,
      ament_cmake,
      ament_cmake_clang_format,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      rclcpp,
      rclcpp_components,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "flex_sync";
      version = "2.0.0-1";
      src = sources.flex_sync;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_clang_format rclcpp rclcpp_components rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  flexbe_behavior_engine = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      flexbe_core,
      flexbe_input,
      flexbe_mirror,
      flexbe_msgs,
      flexbe_onboard,
      flexbe_states,
      flexbe_testing,
      flexbe_widget,
    }:
    buildRosPackage {
      pname = "flexbe_behavior_engine";
      version = "3.0.3-1";
      src = sources.flexbe_behavior_engine;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ flexbe_core flexbe_input flexbe_mirror flexbe_msgs flexbe_onboard flexbe_states flexbe_testing flexbe_widget ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  flexbe_core = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      flexbe_msgs,
      launch_ros,
      launch_testing,
      python3Packages,
      rclpy,
      std_msgs,
      std_srvs,
      tf2_ros_py,
    }:
    buildRosPackage {
      pname = "flexbe_core";
      version = "3.0.3-1";
      src = sources.flexbe_core;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ flexbe_msgs rclpy std_msgs std_srvs tf2_ros_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  flexbe_input = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      flexbe_core,
      flexbe_msgs,
      python3Packages,
      rclpy,
    }:
    buildRosPackage {
      pname = "flexbe_input";
      version = "3.0.3-1";
      src = sources.flexbe_input;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ flexbe_core flexbe_msgs rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  flexbe_mirror = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      flexbe_core,
      flexbe_msgs,
      python3Packages,
      rclpy,
    }:
    buildRosPackage {
      pname = "flexbe_mirror";
      version = "3.0.3-1";
      src = sources.flexbe_mirror;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ flexbe_core flexbe_msgs rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  flexbe_msgs = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "flexbe_msgs";
      version = "3.0.3-1";
      src = sources.flexbe_msgs;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rosidl_default_generators ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  flexbe_onboard = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      flexbe_core,
      flexbe_msgs,
      flexbe_states,
      launch_ros,
      launch_testing,
      python3Packages,
      rclpy,
    }:
    buildRosPackage {
      pname = "flexbe_onboard";
      version = "3.0.3-1";
      src = sources.flexbe_onboard;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ flexbe_core flexbe_msgs flexbe_states launch_ros rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  flexbe_states = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      flexbe_core,
      flexbe_msgs,
      flexbe_testing,
      geometry_msgs,
      python3Packages,
      rclpy,
    }:
    buildRosPackage {
      pname = "flexbe_states";
      version = "3.0.3-1";
      src = sources.flexbe_states;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ flexbe_core flexbe_msgs flexbe_testing rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  flexbe_testing = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_cmake_python,
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      flexbe_core,
      flexbe_msgs,
      launch_ros,
      launch_testing,
      python3Packages,
      rclpy,
      std_msgs,
    }:
    buildRosPackage {
      pname = "flexbe_testing";
      version = "3.0.3-1";
      src = sources.flexbe_testing;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ flexbe_core flexbe_msgs launch_ros rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  flexbe_widget = self.callPackage (
    {
      ament_cmake,
      ament_cmake_python,
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      flexbe_core,
      flexbe_mirror,
      flexbe_msgs,
      flexbe_onboard,
      launch_ros,
      python3Packages,
      rclpy,
    }:
    buildRosPackage {
      pname = "flexbe_widget";
      version = "3.0.3-1";
      src = sources.flexbe_widget;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ flexbe_core flexbe_mirror flexbe_msgs flexbe_onboard launch_ros rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  flir_camera_description = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      robot_state_publisher,
      urdf,
      xacro,
    }:
    buildRosPackage {
      pname = "flir_camera_description";
      version = "2.0.20-1";
      src = sources.flir_camera_description;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ robot_state_publisher urdf xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  flir_camera_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "flir_camera_msgs";
      version = "2.0.20-1";
      src = sources.flir_camera_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fluent_rviz = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      buildRosPackage,
      geometry_msgs,
      ouxt_lint_common,
      rclcpp,
      std_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "fluent_rviz";
      version = "0.0.3-5";
      src = sources.fluent_rviz;
      nativeBuildInputs = [ ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rclcpp std_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fmi_adapter = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      fmilibrary_vendor,
      launch,
      launch_ros,
      launch_testing,
      rcl_interfaces,
      rclcpp,
      rclcpp_components,
      rclcpp_lifecycle,
      rcutils,
      std_msgs,
    }:
    buildRosPackage {
      pname = "fmi_adapter";
      version = "2.1.2-1";
      src = sources.fmi_adapter;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [ fmilibrary_vendor ];
      propagatedBuildInputs = [ launch_ros rcl_interfaces rclcpp rclcpp_components rclcpp_lifecycle std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fmi_adapter_examples = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      fmi_adapter,
      launch,
      launch_ros,
    }:
    buildRosPackage {
      pname = "fmi_adapter_examples";
      version = "2.1.2-1";
      src = sources.fmi_adapter_examples;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ fmi_adapter launch_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fmilibrary_vendor = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      git,
    }:
    buildRosPackage {
      pname = "fmilibrary_vendor";
      version = "1.0.1-1";
      src = sources.fmilibrary_vendor;
      nativeBuildInputs = [ ament_cmake git ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  foonathan_memory_vendor = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_xmllint,
      buildRosPackage,
      cmake,
      git,
    }:
    buildRosPackage {
      pname = "foonathan_memory_vendor";
      version = "1.3.1-3";
      src = sources.foonathan_memory_vendor;
      nativeBuildInputs = [ git ];
      propagatedNativeBuildInputs = [ cmake ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  force_torque_sensor_broadcaster = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      backward_ros,
      buildRosPackage,
      controller_interface,
      controller_manager,
      generate_parameter_library,
      geometry_msgs,
      hardware_interface,
      hardware_interface_testing,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      realtime_tools,
      ros2_control_test_assets,
    }:
    buildRosPackage {
      pname = "force_torque_sensor_broadcaster";
      version = "4.11.0-1";
      src = sources.force_torque_sensor_broadcaster;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ backward_ros controller_interface generate_parameter_library geometry_msgs hardware_interface pluginlib rclcpp rclcpp_lifecycle realtime_tools ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  forward_command_controller = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      backward_ros,
      buildRosPackage,
      controller_interface,
      controller_manager,
      generate_parameter_library,
      hardware_interface,
      hardware_interface_testing,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      realtime_tools,
      ros2_control_test_assets,
      std_msgs,
    }:
    buildRosPackage {
      pname = "forward_command_controller";
      version = "4.11.0-1";
      src = sources.forward_command_controller;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ backward_ros controller_interface generate_parameter_library hardware_interface pluginlib rclcpp rclcpp_lifecycle realtime_tools std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  four_wheel_steering_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "four_wheel_steering_msgs";
      version = "2.0.1-6";
      src = sources.four_wheel_steering_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  foxglove_bridge = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_index_cpp,
      ament_lint_auto,
      asio,
      buildRosPackage,
      nlohmann_json,
      openssl,
      rclcpp,
      rclcpp_components,
      resource_retriever,
      ros_environment,
      rosgraph_msgs,
      std_msgs,
      std_srvs,
      websocketpp,
      zlib,
    }:
    buildRosPackage {
      pname = "foxglove_bridge";
      version = "0.7.9-1";
      src = sources.foxglove_bridge;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ asio nlohmann_json openssl websocketpp ];
      propagatedBuildInputs = [ ament_index_cpp openssl rclcpp rclcpp_components resource_retriever rosgraph_msgs zlib ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  foxglove_msgs = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "foxglove_msgs";
      version = "3.0.0-3";
      src = sources.foxglove_msgs;
      nativeBuildInputs = [ ament_cmake ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fuse = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      fuse_constraints,
      fuse_core,
      fuse_doc,
      fuse_graphs,
      fuse_models,
      fuse_msgs,
      fuse_optimizers,
      fuse_publishers,
      fuse_variables,
      fuse_viz,
    }:
    buildRosPackage {
      pname = "fuse";
      version = "1.1.1-1";
      src = sources.fuse;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ fuse_constraints fuse_core fuse_doc fuse_graphs fuse_models fuse_msgs fuse_optimizers fuse_publishers fuse_variables fuse_viz ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fuse_constraints = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ceres-solver,
      eigen,
      fuse_core,
      fuse_graphs,
      fuse_variables,
      gbenchmark,
      geometry_msgs,
      pluginlib,
      rclcpp,
      suitesparse,
    }:
    buildRosPackage {
      pname = "fuse_constraints";
      version = "1.1.1-1";
      src = sources.fuse_constraints;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ceres-solver eigen fuse_core fuse_graphs fuse_variables geometry_msgs pluginlib rclcpp suitesparse ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fuse_core = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      boost,
      buildRosPackage,
      ceres-solver,
      eigen,
      fuse_msgs,
      geometry_msgs,
      glog,
      launch,
      launch_pytest,
      pluginlib,
      rcl_interfaces,
      rclcpp,
      rclcpp_components,
    }:
    buildRosPackage {
      pname = "fuse_core";
      version = "1.1.1-1";
      src = sources.fuse_core;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost ceres-solver eigen fuse_msgs glog pluginlib rcl_interfaces rclcpp rclcpp_components ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fuse_doc = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "fuse_doc";
      version = "1.1.1-1";
      src = sources.fuse_doc;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fuse_graphs = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ceres-solver,
      fuse_core,
      gbenchmark,
      pluginlib,
      rclcpp,
    }:
    buildRosPackage {
      pname = "fuse_graphs";
      version = "1.1.1-1";
      src = sources.fuse_graphs;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ceres-solver fuse_core pluginlib rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fuse_loss = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ceres-solver,
      fuse_core,
      libsForQt5,
      pluginlib,
      qt5,
      rclcpp,
    }:
    buildRosPackage {
      pname = "fuse_loss";
      version = "1.1.1-1";
      src = sources.fuse_loss;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ceres-solver fuse_core pluginlib rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fuse_models = self.callPackage (
    {
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      boost,
      buildRosPackage,
      ceres-solver,
      eigen,
      fuse_constraints,
      fuse_core,
      fuse_graphs,
      fuse_msgs,
      fuse_publishers,
      fuse_variables,
      gbenchmark,
      geometry_msgs,
      nav_msgs,
      pluginlib,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      std_srvs,
      tf2,
      tf2_2d,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "fuse_models";
      version = "1.1.1-1";
      src = sources.fuse_models;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost ceres-solver eigen fuse_constraints fuse_core fuse_graphs fuse_msgs fuse_publishers fuse_variables geometry_msgs nav_msgs pluginlib rclcpp rclcpp_components sensor_msgs std_srvs tf2 tf2_2d tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fuse_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "fuse_msgs";
      version = "1.1.1-1";
      src = sources.fuse_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fuse_optimizers = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      boost,
      buildRosPackage,
      ceres-solver,
      diagnostic_updater,
      eigen,
      fuse_constraints,
      fuse_core,
      fuse_graphs,
      fuse_models,
      fuse_msgs,
      fuse_variables,
      geometry_msgs,
      launch,
      launch_pytest,
      launch_ros,
      nav_msgs,
      pluginlib,
      rclcpp,
      rclcpp_components,
      std_srvs,
    }:
    buildRosPackage {
      pname = "fuse_optimizers";
      version = "1.1.1-1";
      src = sources.fuse_optimizers;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost ceres-solver diagnostic_updater eigen fuse_constraints fuse_core fuse_graphs fuse_msgs fuse_variables pluginlib rclcpp rclcpp_components std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fuse_publishers = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      fuse_constraints,
      fuse_core,
      fuse_graphs,
      fuse_msgs,
      fuse_variables,
      geometry_msgs,
      nav_msgs,
      pluginlib,
      rclcpp,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "fuse_publishers";
      version = "1.1.1-1";
      src = sources.fuse_publishers;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ fuse_core fuse_msgs fuse_variables geometry_msgs nav_msgs pluginlib rclcpp tf2 tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fuse_tutorials = self.callPackage (
    {
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      fuse_constraints,
      fuse_core,
      fuse_models,
      fuse_optimizers,
      fuse_publishers,
      fuse_variables,
      nav_msgs,
      rclcpp,
      rviz2,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "fuse_tutorials";
      version = "1.1.1-1";
      src = sources.fuse_tutorials;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ fuse_constraints fuse_core fuse_models fuse_optimizers fuse_publishers fuse_variables nav_msgs rclcpp rviz2 sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fuse_variables = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ceres-solver,
      fuse_core,
      pluginlib,
      rclcpp,
    }:
    buildRosPackage {
      pname = "fuse_variables";
      version = "1.1.1-1";
      src = sources.fuse_variables;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ceres-solver fuse_core pluginlib rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  fuse_viz = self.callPackage (
    {
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      eigen,
      fuse_constraints,
      fuse_core,
      fuse_msgs,
      fuse_variables,
      geometry_msgs,
      qt5,
      rviz_common,
      rviz_rendering,
      tf2_geometry_msgs,
    }:
    buildRosPackage {
      pname = "fuse_viz";
      version = "1.1.1-1";
      src = sources.fuse_viz;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ eigen fuse_constraints fuse_core fuse_msgs fuse_variables geometry_msgs rviz_common rviz_rendering tf2_geometry_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  game_controller_spl = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      game_controller_spl_interfaces,
      python3Packages,
      rclpy,
    }:
    buildRosPackage {
      pname = "game_controller_spl";
      version = "4.0.1-1";
      src = sources.game_controller_spl;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ game_controller_spl_interfaces python3Packages.construct rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  game_controller_spl_interfaces = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "game_controller_spl_interfaces";
      version = "4.0.1-1";
      src = sources.game_controller_spl_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gazebo_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
      trajectory_msgs,
    }:
    buildRosPackage {
      pname = "gazebo_msgs";
      version = "3.8.0-1";
      src = sources.gazebo_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime std_msgs trajectory_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gc_spl = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      gc_spl_interfaces,
      python3Packages,
      rclpy,
    }:
    buildRosPackage {
      pname = "gc_spl";
      version = "4.0.1-1";
      src = sources.gc_spl;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gc_spl_interfaces python3Packages.construct rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gc_spl_2022 = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
      rcgcd_spl_14,
      rcgcd_spl_14_conversion,
      rcgcrd_spl_4,
      rcgcrd_spl_4_conversion,
      rclpy,
    }:
    buildRosPackage {
      pname = "gc_spl_2022";
      version = "4.0.1-1";
      src = sources.gc_spl_2022;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rcgcd_spl_14 rcgcd_spl_14_conversion rcgcrd_spl_4 rcgcrd_spl_4_conversion rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gc_spl_interfaces = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "gc_spl_interfaces";
      version = "4.0.1-1";
      src = sources.gc_spl_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  generate_parameter_library = self.callPackage (
    {
      ament_cmake,
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      fmt,
      generate_parameter_library_py,
      parameter_traits,
      rclcpp,
      rclcpp_lifecycle,
      rclpy,
      rsl,
      tcb_span,
      tl_expected,
    }:
    buildRosPackage {
      pname = "generate_parameter_library";
      version = "0.3.8-4";
      src = sources.generate_parameter_library;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [ generate_parameter_library_py ];
      buildInputs = [  ];
      propagatedBuildInputs = [ fmt parameter_traits rclcpp rclcpp_lifecycle rclpy rsl tcb_span tl_expected ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  generate_parameter_library_example = self.callPackage (
    {
      ament_cmake,
      ament_cmake_core,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      generate_parameter_library,
      rclcpp,
      rclcpp_components,
    }:
    buildRosPackage {
      pname = "generate_parameter_library_example";
      version = "0.3.8-4";
      src = sources.generate_parameter_library_example;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_cmake_core ];
      buildInputs = [  ];
      propagatedBuildInputs = [ generate_parameter_library rclcpp rclcpp_components ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  generate_parameter_library_py = self.callPackage (
    {
      ament_copyright,
      buildPackages,
      buildRosPackage,
      python3,
      python3Packages,
    }:
    buildRosPackage {
      pname = "generate_parameter_library_py";
      version = "0.3.8-4";
      src = sources.generate_parameter_library_py;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.jinja2 buildPackages.python3Packages.pyyaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3 python3Packages.jinja2 python3Packages.pyyaml ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  generate_parameter_module_example = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      generate_parameter_library,
      generate_parameter_library_py,
      python3Packages,
      rclpy,
    }:
    buildRosPackage {
      pname = "generate_parameter_module_example";
      version = "0.3.8-4";
      src = sources.generate_parameter_module_example;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ generate_parameter_library_py ];
      buildInputs = [  ];
      propagatedBuildInputs = [ generate_parameter_library rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  geodesy = self.callPackage (
    {
      ament_cmake,
      angles,
      buildRosPackage,
      geographic_msgs,
      geometry_msgs,
      python3Packages,
      sensor_msgs,
      unique_identifier_msgs,
    }:
    buildRosPackage {
      pname = "geodesy";
      version = "1.0.6-2";
      src = sources.geodesy;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ python3Packages.catkin-pkg ];
      propagatedBuildInputs = [ angles geographic_msgs geometry_msgs python3Packages.pyproj sensor_msgs unique_identifier_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  geographic_info = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      geodesy,
      geographic_msgs,
    }:
    buildRosPackage {
      pname = "geographic_info";
      version = "1.0.6-2";
      src = sources.geographic_info;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geodesy geographic_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  geographic_msgs = self.callPackage (
    {
      ament_cmake,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_gtest,
      ament_cmake_lint_cmake,
      ament_cmake_uncrustify,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
      unique_identifier_msgs,
    }:
    buildRosPackage {
      pname = "geographic_msgs";
      version = "1.0.6-2";
      src = sources.geographic_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime std_msgs unique_identifier_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  geometric_shapes = self.callPackage (
    {
      ament_cmake,
      ament_cmake_copyright,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_cmake,
      assimp,
      boost,
      buildRosPackage,
      console_bridge_vendor,
      eigen,
      eigen3_cmake_module,
      eigen_stl_containers,
      geometry_msgs,
      pkg-config,
      qhull,
      random_numbers,
      rclcpp,
      resource_retriever,
      rosidl_default_generators,
      rosidl_default_runtime,
      shape_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "geometric_shapes";
      version = "2.2.1-1";
      src = sources.geometric_shapes;
      nativeBuildInputs = [ ament_cmake pkg-config rosidl_default_generators ];
      propagatedNativeBuildInputs = [ eigen3_cmake_module ];
      buildInputs = [ assimp boost ];
      propagatedBuildInputs = [ assimp boost console_bridge_vendor eigen eigen_stl_containers geometry_msgs qhull random_numbers rclcpp resource_retriever rosidl_default_runtime shape_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  geometry2 = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      tf2,
      tf2_bullet,
      tf2_eigen,
      tf2_eigen_kdl,
      tf2_geometry_msgs,
      tf2_kdl,
      tf2_msgs,
      tf2_py,
      tf2_ros,
      tf2_sensor_msgs,
      tf2_tools,
    }:
    buildRosPackage {
      pname = "geometry2";
      version = "0.36.4-1";
      src = sources.geometry2;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ tf2 tf2_bullet tf2_eigen tf2_eigen_kdl tf2_geometry_msgs tf2_kdl tf2_msgs tf2_py tf2_ros tf2_sensor_msgs tf2_tools ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  geometry_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "geometry_msgs";
      version = "5.3.5-1";
      src = sources.geometry_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  geometry_tutorials = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "geometry_tutorials";
      version = "0.5.0-1";
      src = sources.geometry_tutorials;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gmock_vendor = self.callPackage (
    {
      buildRosPackage,
      cmake,
      gtest_vendor,
    }:
    buildRosPackage {
      pname = "gmock_vendor";
      version = "1.14.9000-2";
      src = sources.gmock_vendor;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [ gtest_vendor ];
      buildInputs = [ cmake ];
      propagatedBuildInputs = [ gtest_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  google_benchmark_vendor = self.callPackage (
    {
      buildRosPackage,
      cmake,
      gbenchmark,
      git,
    }:
    buildRosPackage {
      pname = "google_benchmark_vendor";
      version = "0.5.0-2";
      src = sources.google_benchmark_vendor;
      nativeBuildInputs = [ cmake git ];
      propagatedNativeBuildInputs = [ gbenchmark ];
      buildInputs = [ cmake git ];
      propagatedBuildInputs = [ gbenchmark ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gps_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "gps_msgs";
      version = "2.0.3-2";
      src = sources.gps_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gps_tools = self.callPackage (
    {
      ament_cmake,
      ament_cmake_python,
      buildRosPackage,
      gps_msgs,
      nav_msgs,
      rclcpp,
      rclcpp_components,
      rclpy,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "gps_tools";
      version = "2.0.3-2";
      src = sources.gps_tools;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gps_msgs nav_msgs rclcpp rclcpp_components rclpy sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gps_umd = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      gps_msgs,
      gps_tools,
      gpsd_client,
    }:
    buildRosPackage {
      pname = "gps_umd";
      version = "2.0.3-2";
      src = sources.gps_umd;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gps_msgs gps_tools gpsd_client ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gpsd_client = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      gps_msgs,
      gpsd,
      pkg-config,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "gpsd_client";
      version = "2.0.3-2";
      src = sources.gpsd_client;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ pkg-config ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gps_msgs gpsd rclcpp rclcpp_components sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  graph_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_cmake,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "graph_msgs";
      version = "0.2.0-6";
      src = sources.graph_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  grbl_msgs = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "grbl_msgs";
      version = "0.0.2-9";
      src = sources.grbl_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  grbl_ros = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      grbl_msgs,
      python3Packages,
      rclpy,
      std_msgs,
    }:
    buildRosPackage {
      pname = "grbl_ros";
      version = "0.0.16-7";
      src = sources.grbl_ros;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ python3Packages.pyserial ];
      propagatedBuildInputs = [ grbl_msgs rclpy std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gripper_controllers = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      backward_ros,
      buildRosPackage,
      control_msgs,
      control_toolbox,
      controller_interface,
      controller_manager,
      generate_parameter_library,
      hardware_interface,
      hardware_interface_testing,
      pluginlib,
      rclcpp,
      rclcpp_action,
      realtime_tools,
      ros2_control_test_assets,
    }:
    buildRosPackage {
      pname = "gripper_controllers";
      version = "4.11.0-1";
      src = sources.gripper_controllers;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ backward_ros control_msgs control_toolbox controller_interface generate_parameter_library hardware_interface pluginlib rclcpp rclcpp_action realtime_tools ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gscam = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      camera_calibration_parsers,
      camera_info_manager,
      class_loader,
      cv_bridge,
      gst_all_1,
      image_transport,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "gscam";
      version = "2.0.2-5";
      src = sources.gscam;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ camera_calibration_parsers camera_info_manager class_loader cv_bridge gst_all_1.gst-plugins-base gst_all_1.gstreamer image_transport rclcpp rclcpp_components sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gtest_vendor = self.callPackage (
    {
      buildRosPackage,
      cmake,
    }:
    buildRosPackage {
      pname = "gtest_vendor";
      version = "1.14.9000-2";
      src = sources.gtest_vendor;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ cmake ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gtsam = self.callPackage (
    {
      boost,
      buildRosPackage,
      cmake,
      eigen,
      tbb,
    }:
    buildRosPackage {
      pname = "gtsam";
      version = "4.2.0-2";
      src = sources.gtsam;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ boost eigen tbb ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_cmake_vendor = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      buildRosPackage,
      cmake,
    }:
    buildRosPackage {
      pname = "gz_cmake_vendor";
      version = "0.0.8-1";
      src = sources.gz_cmake_vendor;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_test ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_common_vendor = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      assimp,
      buildRosPackage,
      gdal,
      gts,
      gz_cmake_vendor,
      gz_math_vendor,
      gz_utils_vendor,
      tinyxml-2,
      util-linux,
    }:
    buildRosPackage {
      pname = "gz_common_vendor";
      version = "0.0.5-1";
      src = sources.gz_common_vendor;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_test ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ assimp gdal gts gz_cmake_vendor gz_math_vendor gz_utils_vendor tinyxml-2 util-linux ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_dartsim_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      ament_lint_auto,
      assimp,
      boost,
      buildRosPackage,
      bullet,
      eigen,
      fcl,
      fmt,
      libccd,
      lz4,
      ode,
      tinyxml-2,
      urdfdom,
    }:
    buildRosPackage {
      pname = "gz_dartsim_vendor";
      version = "0.0.2-1";
      src = sources.gz_dartsim_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ assimp boost bullet eigen fcl fmt libccd lz4 ode tinyxml-2 urdfdom ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_fuel_tools_vendor = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      buildRosPackage,
      curl,
      gflags,
      gz_cmake_vendor,
      gz_common_vendor,
      gz_math_vendor,
      gz_msgs_vendor,
      gz_tools_vendor,
      gz_utils_vendor,
      jsoncpp,
      libyaml,
      tinyxml-2,
    }:
    buildRosPackage {
      pname = "gz_fuel_tools_vendor";
      version = "0.0.4-1";
      src = sources.gz_fuel_tools_vendor;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_test ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ curl gflags gz_cmake_vendor gz_common_vendor gz_math_vendor gz_msgs_vendor gz_tools_vendor gz_utils_vendor jsoncpp libyaml tinyxml-2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_gui_vendor = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      buildRosPackage,
      gz_cmake_vendor,
      gz_common_vendor,
      gz_math_vendor,
      gz_msgs_vendor,
      gz_plugin_vendor,
      gz_rendering_vendor,
      gz_tools_vendor,
      gz_transport_vendor,
      gz_utils_vendor,
      protobuf,
      qt5,
      tinyxml-2,
      xorg,
    }:
    buildRosPackage {
      pname = "gz_gui_vendor";
      version = "0.0.4-1";
      src = sources.gz_gui_vendor;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_test ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gz_cmake_vendor gz_common_vendor gz_math_vendor gz_msgs_vendor gz_plugin_vendor gz_rendering_vendor gz_tools_vendor gz_transport_vendor gz_utils_vendor protobuf qt5.qtbase qt5.qtdeclarative tinyxml-2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_launch_vendor = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      binutils,
      buildRosPackage,
      gflags,
      gz_cmake_vendor,
      gz_common_vendor,
      gz_gui_vendor,
      gz_math_vendor,
      gz_msgs_vendor,
      gz_plugin_vendor,
      gz_sim_vendor,
      gz_tools_vendor,
      gz_transport_vendor,
      libwebsockets,
      libyaml,
      tinyxml-2,
      util-linux,
      xorg,
    }:
    buildRosPackage {
      pname = "gz_launch_vendor";
      version = "0.0.4-1";
      src = sources.gz_launch_vendor;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_test ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ binutils gflags gz_cmake_vendor gz_common_vendor gz_gui_vendor gz_math_vendor gz_msgs_vendor gz_plugin_vendor gz_sim_vendor gz_tools_vendor gz_transport_vendor libwebsockets libyaml tinyxml-2 util-linux xorg.libXi xorg.libXmu ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_math_vendor = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      buildRosPackage,
      eigen,
      gz_cmake_vendor,
      gz_utils_vendor,
      python3Packages,
    }:
    buildRosPackage {
      pname = "gz_math_vendor";
      version = "0.0.6-1";
      src = sources.gz_math_vendor;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_test ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ python3Packages.pybind11 ];
      propagatedBuildInputs = [ eigen gz_cmake_vendor gz_utils_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_msgs_vendor = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      buildRosPackage,
      gz_cmake_vendor,
      gz_math_vendor,
      gz_tools_vendor,
      protobuf,
      python3,
      python3Packages,
      tinyxml-2,
    }:
    buildRosPackage {
      pname = "gz_msgs_vendor";
      version = "0.0.4-1";
      src = sources.gz_msgs_vendor;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_test ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gz_cmake_vendor gz_math_vendor gz_tools_vendor protobuf python3 python3Packages.protobuf tinyxml-2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_ogre_next_vendor = self.callPackage (
    {
      SDL2,
      ament_cmake,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      ament_lint_auto,
      boost,
      buildRosPackage,
      freetype,
      libGL,
      libGLU,
      poco,
      rapidjson,
      tbb,
      tinyxml-2,
      vulkan-loader,
      xorg,
      zziplib,
    }:
    buildRosPackage {
      pname = "gz_ogre_next_vendor";
      version = "0.0.5-1";
      src = sources.gz_ogre_next_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ SDL2 boost freetype libGL libGLU poco rapidjson tbb tinyxml-2 vulkan-loader xorg.libX11 xorg.libXaw xorg.libXrandr zziplib ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_physics_vendor = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      buildRosPackage,
      bullet,
      eigen,
      gbenchmark,
      gz_cmake_vendor,
      gz_common_vendor,
      gz_dartsim_vendor,
      gz_math_vendor,
      gz_plugin_vendor,
      gz_utils_vendor,
      sdformat_vendor,
    }:
    buildRosPackage {
      pname = "gz_physics_vendor";
      version = "0.0.4-1";
      src = sources.gz_physics_vendor;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_test ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [ gbenchmark ];
      buildInputs = [  ];
      propagatedBuildInputs = [ bullet eigen gz_cmake_vendor gz_common_vendor gz_dartsim_vendor gz_math_vendor gz_plugin_vendor gz_utils_vendor sdformat_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_plugin_vendor = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      buildRosPackage,
      gz_cmake_vendor,
      gz_tools_vendor,
      gz_utils_vendor,
    }:
    buildRosPackage {
      pname = "gz_plugin_vendor";
      version = "0.0.4-1";
      src = sources.gz_plugin_vendor;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_test ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gz_cmake_vendor gz_tools_vendor gz_utils_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_rendering_vendor = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      buildRosPackage,
      freeglut,
      glew,
      gz_cmake_vendor,
      gz_common_vendor,
      gz_math_vendor,
      gz_ogre_next_vendor,
      gz_plugin_vendor,
      gz_utils_vendor,
      ogre1_9,
      util-linux,
      vulkan-loader,
      xorg,
    }:
    buildRosPackage {
      pname = "gz_rendering_vendor";
      version = "0.0.4-1";
      src = sources.gz_rendering_vendor;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_test ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ freeglut glew gz_cmake_vendor gz_common_vendor gz_math_vendor gz_ogre_next_vendor gz_plugin_vendor gz_utils_vendor ogre1_9 util-linux vulkan-loader xorg.libXi xorg.libXmu ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_ros2_control = self.callPackage (
    {
      ament_cmake,
      ament_index_cpp,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      controller_manager,
      gz_plugin_vendor,
      gz_sim_vendor,
      hardware_interface,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      yaml_cpp_vendor,
    }:
    buildRosPackage {
      pname = "gz_ros2_control";
      version = "1.2.6-1";
      src = sources.gz_ros2_control;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp controller_manager gz_plugin_vendor gz_sim_vendor hardware_interface pluginlib rclcpp rclcpp_lifecycle yaml_cpp_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_ros2_control_demos = self.callPackage (
    {
      ackermann_steering_controller,
      ament_cmake,
      ament_cmake_gtest,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      control_msgs,
      diff_drive_controller,
      effort_controllers,
      geometry_msgs,
      gz_ros2_control,
      hardware_interface,
      imu_sensor_broadcaster,
      joint_state_broadcaster,
      joint_trajectory_controller,
      launch,
      launch_ros,
      rclcpp,
      rclcpp_action,
      robot_state_publisher,
      ros2controlcli,
      ros2launch,
      ros_gz_bridge,
      ros_gz_sim,
      std_msgs,
      tricycle_controller,
      velocity_controllers,
      xacro,
    }:
    buildRosPackage {
      pname = "gz_ros2_control_demos";
      version = "1.2.6-1";
      src = sources.gz_ros2_control_demos;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_index_python launch ];
      buildInputs = [ rclcpp_action ];
      propagatedBuildInputs = [ ackermann_steering_controller control_msgs diff_drive_controller effort_controllers geometry_msgs gz_ros2_control hardware_interface imu_sensor_broadcaster joint_state_broadcaster joint_trajectory_controller launch_ros rclcpp robot_state_publisher ros2controlcli ros2launch ros_gz_bridge ros_gz_sim std_msgs tricycle_controller velocity_controllers xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_sensors_vendor = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      buildRosPackage,
      gz_cmake_vendor,
      gz_common_vendor,
      gz_math_vendor,
      gz_msgs_vendor,
      gz_rendering_vendor,
      gz_tools_vendor,
      gz_transport_vendor,
      sdformat_vendor,
      xorg,
    }:
    buildRosPackage {
      pname = "gz_sensors_vendor";
      version = "0.0.4-1";
      src = sources.gz_sensors_vendor;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_test ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gz_cmake_vendor gz_common_vendor gz_math_vendor gz_msgs_vendor gz_rendering_vendor gz_tools_vendor gz_transport_vendor sdformat_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_sim_vendor = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      buildRosPackage,
      freeglut,
      gbenchmark,
      glew,
      gz_cmake_vendor,
      gz_common_vendor,
      gz_fuel_tools_vendor,
      gz_gui_vendor,
      gz_math_vendor,
      gz_msgs_vendor,
      gz_physics_vendor,
      gz_plugin_vendor,
      gz_rendering_vendor,
      gz_sensors_vendor,
      gz_tools_vendor,
      gz_transport_vendor,
      gz_utils_vendor,
      protobuf,
      python3Packages,
      qt5,
      sdformat_vendor,
      tinyxml-2,
      util-linux,
      xorg,
    }:
    buildRosPackage {
      pname = "gz_sim_vendor";
      version = "0.0.4-1";
      src = sources.gz_sim_vendor;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_test ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [ gbenchmark ];
      buildInputs = [  ];
      propagatedBuildInputs = [ freeglut glew gz_cmake_vendor gz_common_vendor gz_fuel_tools_vendor gz_gui_vendor gz_math_vendor gz_msgs_vendor gz_physics_vendor gz_plugin_vendor gz_rendering_vendor gz_sensors_vendor gz_tools_vendor gz_transport_vendor gz_utils_vendor protobuf python3Packages.pybind11 qt5.qtbase qt5.qtdeclarative sdformat_vendor tinyxml-2 util-linux xorg.libXi xorg.libXmu ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_tools_vendor = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      buildRosPackage,
      gz_cmake_vendor,
    }:
    buildRosPackage {
      pname = "gz_tools_vendor";
      version = "0.0.4-1";
      src = sources.gz_tools_vendor;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_test ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gz_cmake_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_transport_vendor = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      buildPackages,
      buildRosPackage,
      cppzmq,
      gz_cmake_vendor,
      gz_math_vendor,
      gz_msgs_vendor,
      gz_tools_vendor,
      gz_utils_vendor,
      pkg-config,
      protobuf,
      python3,
      python3Packages,
      sqlite,
      util-linux,
    }:
    buildRosPackage {
      pname = "gz_transport_vendor";
      version = "0.0.5-1";
      src = sources.gz_transport_vendor;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_test ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [ pkg-config python3 buildPackages.python3Packages.pytest ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cppzmq gz_cmake_vendor gz_math_vendor gz_msgs_vendor gz_tools_vendor gz_utils_vendor protobuf python3Packages.psutil python3Packages.pybind11 sqlite util-linux ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  gz_utils_vendor = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      buildRosPackage,
      gz_cmake_vendor,
    }:
    buildRosPackage {
      pname = "gz_utils_vendor";
      version = "0.0.4-1";
      src = sources.gz_utils_vendor;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_test ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gz_cmake_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  hardware_interface = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gen_version_h,
      ament_cmake_gmock,
      buildRosPackage,
      control_msgs,
      joint_limits,
      lifecycle_msgs,
      pluginlib,
      rclcpp_lifecycle,
      rcpputils,
      rcutils,
      ros2_control_test_assets,
      tinyxml2_vendor,
      urdf,
    }:
    buildRosPackage {
      pname = "hardware_interface";
      version = "4.13.0-1";
      src = sources.hardware_interface;
      nativeBuildInputs = [ ament_cmake ament_cmake_gen_version_h ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ control_msgs joint_limits lifecycle_msgs pluginlib rclcpp_lifecycle rcpputils tinyxml2_vendor urdf ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  hardware_interface_testing = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      buildRosPackage,
      control_msgs,
      hardware_interface,
      lifecycle_msgs,
      pluginlib,
      rclcpp_lifecycle,
      ros2_control_test_assets,
    }:
    buildRosPackage {
      pname = "hardware_interface_testing";
      version = "4.13.0-1";
      src = sources.hardware_interface_testing;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ control_msgs hardware_interface lifecycle_msgs pluginlib rclcpp_lifecycle ros2_control_test_assets ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  hash_library_vendor = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      git,
    }:
    buildRosPackage {
      pname = "hash_library_vendor";
      version = "0.1.1-7";
      src = sources.hash_library_vendor;
      nativeBuildInputs = [ ament_cmake_auto git ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  heaphook = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      tlsf,
    }:
    buildRosPackage {
      pname = "heaphook";
      version = "0.1.1-3";
      src = sources.heaphook;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ tlsf ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  hls_lfcd_lds_driver = self.callPackage (
    {
      ament_cmake,
      boost,
      buildRosPackage,
      rclcpp,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "hls_lfcd_lds_driver";
      version = "2.0.4-6";
      src = sources.hls_lfcd_lds_driver;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost rclcpp sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  hpp-fcl = self.callPackage (
    {
      assimp,
      boost,
      buildPackages,
      buildRosPackage,
      cmake,
      doxygen,
      eigen,
      eigenpy,
      git,
      octomap,
      python3,
      python3Packages,
    }:
    buildRosPackage {
      pname = "hpp-fcl";
      version = "2.4.4-3";
      src = sources.hpp-fcl;
      nativeBuildInputs = [ cmake doxygen git ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy ];
      buildInputs = [ python3Packages.lxml ];
      propagatedBuildInputs = [ assimp boost eigen eigenpy octomap python3 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ibeo_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "ibeo_msgs";
      version = "4.0.0-4";
      src = sources.ibeo_msgs;
      nativeBuildInputs = [ ament_cmake ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  iceoryx_binding_c = self.callPackage (
    {
      buildRosPackage,
      cmake,
      iceoryx_hoofs,
      iceoryx_posh,
    }:
    buildRosPackage {
      pname = "iceoryx_binding_c";
      version = "2.0.5-6";
      src = sources.iceoryx_binding_c;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ iceoryx_hoofs iceoryx_posh ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  iceoryx_hoofs = self.callPackage (
    {
      acl,
      buildRosPackage,
      cmake,
    }:
    buildRosPackage {
      pname = "iceoryx_hoofs";
      version = "2.0.5-6";
      src = sources.iceoryx_hoofs;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ acl ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  iceoryx_introspection = self.callPackage (
    {
      buildRosPackage,
      cmake,
      iceoryx_hoofs,
      iceoryx_posh,
      ncurses,
    }:
    buildRosPackage {
      pname = "iceoryx_introspection";
      version = "2.0.5-6";
      src = sources.iceoryx_introspection;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ iceoryx_hoofs iceoryx_posh ncurses ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  iceoryx_posh = self.callPackage (
    {
      buildRosPackage,
      cmake,
      git,
      iceoryx_hoofs,
    }:
    buildRosPackage {
      pname = "iceoryx_posh";
      version = "2.0.5-6";
      src = sources.iceoryx_posh;
      nativeBuildInputs = [ cmake git ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ iceoryx_hoofs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ifm3d_core = self.callPackage (
    {
      boost,
      buildRosPackage,
      cmake,
      curl,
      cv_bridge,
      glog,
      pcl,
      xmlrpc_c,
    }:
    buildRosPackage {
      pname = "ifm3d_core";
      version = "0.18.0-10";
      src = sources.ifm3d_core;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [ curl ];
      buildInputs = [ boost ];
      propagatedBuildInputs = [ cv_bridge glog pcl xmlrpc_c ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  image_common = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      camera_calibration_parsers,
      camera_info_manager,
      image_transport,
    }:
    buildRosPackage {
      pname = "image_common";
      version = "5.1.4-1";
      src = sources.image_common;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ camera_calibration_parsers camera_info_manager image_transport ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  image_geometry = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_cmake_python,
      ament_cmake_ros,
      buildRosPackage,
      opencv,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "image_geometry";
      version = "4.1.0-1";
      src = sources.image_geometry;
      nativeBuildInputs = [ ament_cmake_python ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ opencv sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  image_pipeline = self.callPackage (
    {
      ament_cmake,
      ament_cmake_lint_cmake,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      camera_calibration,
      depth_image_proc,
      image_proc,
      image_publisher,
      image_rotate,
      image_view,
      stereo_image_proc,
    }:
    buildRosPackage {
      pname = "image_pipeline";
      version = "5.0.3-1";
      src = sources.image_pipeline;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ camera_calibration depth_image_proc image_proc image_publisher image_rotate image_view stereo_image_proc ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  image_proc = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      camera_calibration_parsers,
      cv_bridge,
      geometry_msgs,
      image_geometry,
      image_transport,
      opencv,
      rclcpp,
      rclcpp_components,
      rcutils,
      sensor_msgs,
      tracetools_image_pipeline,
    }:
    buildRosPackage {
      pname = "image_proc";
      version = "5.0.3-1";
      src = sources.image_proc;
      nativeBuildInputs = [ ament_cmake_auto ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ camera_calibration_parsers cv_bridge geometry_msgs image_geometry image_transport opencv rclcpp rclcpp_components sensor_msgs tracetools_image_pipeline ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  image_publisher = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      camera_info_manager,
      cv_bridge,
      image_transport,
      rcl_interfaces,
      rclcpp,
      rclcpp_components,
    }:
    buildRosPackage {
      pname = "image_publisher";
      version = "5.0.3-1";
      src = sources.image_publisher;
      nativeBuildInputs = [ ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ camera_info_manager cv_bridge image_transport rcl_interfaces rclcpp rclcpp_components ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  image_rotate = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      class_loader,
      cv_bridge,
      geometry_msgs,
      image_transport,
      opencv,
      rcl_interfaces,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "image_rotate";
      version = "5.0.3-1";
      src = sources.image_rotate;
      nativeBuildInputs = [ ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ class_loader ];
      propagatedBuildInputs = [ cv_bridge geometry_msgs image_transport opencv rcl_interfaces rclcpp rclcpp_components sensor_msgs tf2 tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  image_tools = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      launch,
      launch_ros,
      launch_testing,
      launch_testing_ament_cmake,
      launch_testing_ros,
      opencv,
      rclcpp,
      rclcpp_components,
      rmw_implementation_cmake,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "image_tools";
      version = "0.33.4-1";
      src = sources.image_tools;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ opencv rclcpp rclcpp_components sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  image_transport = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      message_filters,
      pluginlib,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "image_transport";
      version = "5.1.4-1";
      src = sources.image_transport;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ message_filters pluginlib rclcpp rclcpp_components sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  image_transport_plugins = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      compressed_depth_image_transport,
      compressed_image_transport,
      theora_image_transport,
      zstd_image_transport,
    }:
    buildRosPackage {
      pname = "image_transport_plugins";
      version = "4.0.0-2";
      src = sources.image_transport_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ compressed_depth_image_transport compressed_image_transport theora_image_transport zstd_image_transport ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  image_view = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      camera_calibration_parsers,
      cv_bridge,
      image_transport,
      message_filters,
      rclcpp,
      rclcpp_components,
      rclpy,
      sensor_msgs,
      std_srvs,
      stereo_msgs,
    }:
    buildRosPackage {
      pname = "image_view";
      version = "5.0.3-1";
      src = sources.image_view;
      nativeBuildInputs = [ ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ camera_calibration_parsers cv_bridge image_transport message_filters rclcpp rclcpp_components rclpy sensor_msgs std_srvs stereo_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  imu_complementary_filter = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      geometry_msgs,
      message_filters,
      rclcpp,
      sensor_msgs,
      std_msgs,
      tf2,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "imu_complementary_filter";
      version = "2.1.3-4";
      src = sources.imu_complementary_filter;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ geometry_msgs message_filters rclcpp sensor_msgs std_msgs tf2 tf2_ros ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  imu_filter_madgwick = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      nav_msgs,
      rclcpp,
      rclcpp_action,
      rclcpp_lifecycle,
      sensor_msgs,
      tf2_geometry_msgs,
      tf2_ros,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "imu_filter_madgwick";
      version = "2.1.3-4";
      src = sources.imu_filter_madgwick;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs nav_msgs rclcpp rclcpp_action rclcpp_lifecycle sensor_msgs tf2_geometry_msgs tf2_ros visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  imu_pipeline = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      imu_processors,
      imu_transformer,
    }:
    buildRosPackage {
      pname = "imu_pipeline";
      version = "0.5.0-3";
      src = sources.imu_pipeline;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ imu_processors imu_transformer ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  imu_processors = self.callPackage (
    {
      ament_cmake,
      ament_cmake_cpplint,
      buildRosPackage,
      geometry_msgs,
      nav_msgs,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "imu_processors";
      version = "0.5.0-3";
      src = sources.imu_processors;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs nav_msgs rclcpp rclcpp_components sensor_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  imu_sensor_broadcaster = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_lint_auto,
      ament_lint_common,
      backward_ros,
      buildRosPackage,
      controller_interface,
      controller_manager,
      generate_parameter_library,
      hardware_interface,
      hardware_interface_testing,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      realtime_tools,
      ros2_control_test_assets,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "imu_sensor_broadcaster";
      version = "4.11.0-1";
      src = sources.imu_sensor_broadcaster;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ backward_ros controller_interface generate_parameter_library hardware_interface pluginlib rclcpp rclcpp_lifecycle realtime_tools sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  imu_tools = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      imu_complementary_filter,
      imu_filter_madgwick,
      rviz_imu_plugin,
    }:
    buildRosPackage {
      pname = "imu_tools";
      version = "2.1.3-4";
      src = sources.imu_tools;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ imu_complementary_filter imu_filter_madgwick rviz_imu_plugin ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  imu_transformer = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      geometry_msgs,
      message_filters,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      tf2_geometry_msgs,
      tf2_ros,
      tf2_sensor_msgs,
    }:
    buildRosPackage {
      pname = "imu_transformer";
      version = "0.5.0-3";
      src = sources.imu_transformer;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ message_filters rclcpp rclcpp_components sensor_msgs tf2_ros tf2_sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  interactive_marker_twist_server = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      interactive_markers,
      rclcpp,
      tf2,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "interactive_marker_twist_server";
      version = "2.1.0-3";
      src = sources.interactive_marker_twist_server;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs interactive_markers rclcpp tf2 visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  interactive_markers = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rclcpp,
      rclpy,
      rcutils,
      rmw,
      std_msgs,
      tf2,
      tf2_geometry_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "interactive_markers";
      version = "2.5.4-2";
      src = sources.interactive_markers;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [ rcutils rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rclcpp rclpy std_msgs tf2 tf2_geometry_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  intra_process_demo = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      launch,
      launch_testing,
      launch_testing_ament_cmake,
      opencv,
      rclcpp,
      rmw_implementation_cmake,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "intra_process_demo";
      version = "0.33.4-1";
      src = sources.intra_process_demo;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ std_msgs ];
      propagatedBuildInputs = [ opencv rclcpp sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  io_context = self.callPackage (
    {
      ament_cmake_auto,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      asio,
      asio_cmake_module,
      buildRosPackage,
      rclcpp,
      std_msgs,
      udp_msgs,
    }:
    buildRosPackage {
      pname = "io_context";
      version = "1.2.0-4";
      src = sources.io_context;
      nativeBuildInputs = [ ament_cmake_auto asio_cmake_module ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ asio rclcpp std_msgs udp_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  irobot_create_msgs = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "irobot_create_msgs";
      version = "3.0.0-2";
      src = sources.irobot_create_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs builtin_interfaces geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  joint_limits = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gen_version_h,
      ament_cmake_gmock,
      ament_cmake_gtest,
      backward_ros,
      buildRosPackage,
      generate_parameter_library,
      launch_ros,
      launch_testing_ament_cmake,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      realtime_tools,
      trajectory_msgs,
      urdf,
    }:
    buildRosPackage {
      pname = "joint_limits";
      version = "4.13.0-1";
      src = sources.joint_limits;
      nativeBuildInputs = [ ament_cmake ament_cmake_gen_version_h ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ backward_ros pluginlib rclcpp rclcpp_lifecycle realtime_tools trajectory_msgs urdf ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  joint_state_broadcaster = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      backward_ros,
      buildRosPackage,
      builtin_interfaces,
      control_msgs,
      controller_interface,
      controller_manager,
      generate_parameter_library,
      hardware_interface,
      hardware_interface_testing,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      rcutils,
      realtime_tools,
      ros2_control_test_assets,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "joint_state_broadcaster";
      version = "4.11.0-1";
      src = sources.joint_state_broadcaster;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ backward_ros builtin_interfaces control_msgs controller_interface generate_parameter_library pluginlib rclcpp_lifecycle realtime_tools sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  joint_state_publisher = self.callPackage (
    {
      ament_copyright,
      ament_xmllint,
      buildRosPackage,
      launch_testing,
      launch_testing_ros,
      python3Packages,
      rclpy,
      ros2topic,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "joint_state_publisher";
      version = "2.4.0-3";
      src = sources.joint_state_publisher;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  joint_state_publisher_gui = self.callPackage (
    {
      buildRosPackage,
      joint_state_publisher,
      python_qt_binding,
      rclpy,
    }:
    buildRosPackage {
      pname = "joint_state_publisher_gui";
      version = "2.4.0-3";
      src = sources.joint_state_publisher_gui;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ joint_state_publisher python_qt_binding rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  joint_trajectory_controller = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      angles,
      backward_ros,
      buildRosPackage,
      control_msgs,
      control_toolbox,
      controller_interface,
      controller_manager,
      generate_parameter_library,
      hardware_interface,
      hardware_interface_testing,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      realtime_tools,
      ros2_control_test_assets,
      rsl,
      tl_expected,
      trajectory_msgs,
      urdf,
    }:
    buildRosPackage {
      pname = "joint_trajectory_controller";
      version = "4.11.0-1";
      src = sources.joint_trajectory_controller;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ angles backward_ros control_msgs control_toolbox controller_interface generate_parameter_library hardware_interface pluginlib rclcpp rclcpp_lifecycle realtime_tools rsl tl_expected trajectory_msgs urdf ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  joy = self.callPackage (
    {
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      rclcpp_components,
      sdl2_vendor,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "joy";
      version = "3.3.0-3";
      src = sources.joy;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rclcpp_components sdl2_vendor sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  joy_linux = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      diagnostic_msgs,
      diagnostic_updater,
      rclcpp,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "joy_linux";
      version = "3.3.0-3";
      src = sources.joy_linux;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ diagnostic_msgs diagnostic_updater rclcpp sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  joy_teleop = self.callPackage (
    {
      action_tutorials_interfaces,
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      control_msgs,
      example_interfaces,
      geometry_msgs,
      launch_ros,
      launch_testing,
      rclpy,
      rosidl_runtime_py,
      sensor_msgs,
      std_msgs,
      std_srvs,
      teleop_tools_msgs,
      test_msgs,
      trajectory_msgs,
    }:
    buildRosPackage {
      pname = "joy_teleop";
      version = "1.5.0-3";
      src = sources.joy_teleop;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ control_msgs rclpy rosidl_runtime_py sensor_msgs teleop_tools_msgs trajectory_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  joy_tester = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
      rclpy,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "joy_tester";
      version = "0.0.2-4";
      src = sources.joy_tester;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.tkinter rclpy sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  kartech_linear_actuator_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "kartech_linear_actuator_msgs";
      version = "4.0.0-4";
      src = sources.kartech_linear_actuator_msgs;
      nativeBuildInputs = [ ament_cmake ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  kdl_parser = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      orocos_kdl_vendor,
      rcutils,
      urdf,
      urdfdom_headers,
    }:
    buildRosPackage {
      pname = "kdl_parser";
      version = "2.11.0-3";
      src = sources.kdl_parser;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ orocos_kdl_vendor urdf urdfdom_headers ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  key_teleop = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      geometry_msgs,
      python3Packages,
      rclpy,
    }:
    buildRosPackage {
      pname = "key_teleop";
      version = "1.5.0-3";
      src = sources.key_teleop;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  keyboard_handler = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "keyboard_handler";
      version = "0.3.1-2";
      src = sources.keyboard_handler;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  kinematics_interface = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      eigen,
      rclcpp_lifecycle,
    }:
    buildRosPackage {
      pname = "kinematics_interface";
      version = "1.1.0-1";
      src = sources.kinematics_interface;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen rclcpp_lifecycle ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  kinematics_interface_kdl = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      buildRosPackage,
      eigen,
      eigen3_cmake_module,
      kdl_parser,
      kinematics_interface,
      pluginlib,
      ros2_control_test_assets,
      tf2_eigen_kdl,
    }:
    buildRosPackage {
      pname = "kinematics_interface_kdl";
      version = "1.1.0-1";
      src = sources.kinematics_interface_kdl;
      nativeBuildInputs = [ ament_cmake eigen3_cmake_module ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen kdl_parser kinematics_interface pluginlib tf2_eigen_kdl ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  kitti_metrics_eval = self.callPackage (
    {
      buildRosPackage,
      cmake,
      mola_common,
      mrpt2,
    }:
    buildRosPackage {
      pname = "kitti_metrics_eval";
      version = "1.0.6-1";
      src = sources.kitti_metrics_eval;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mola_common mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  kobuki_core = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      ecl_build,
      ecl_command_line,
      ecl_config,
      ecl_console,
      ecl_converters,
      ecl_devices,
      ecl_geometry,
      ecl_mobile_robot,
      ecl_sigslots,
      ecl_threads,
      ecl_time,
    }:
    buildRosPackage {
      pname = "kobuki_core";
      version = "1.4.0-4";
      src = sources.kobuki_core;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ ecl_command_line ecl_config ecl_console ecl_converters ecl_devices ecl_geometry ecl_mobile_robot ecl_sigslots ecl_threads ecl_time ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  kobuki_ros_interfaces = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "kobuki_ros_interfaces";
      version = "1.0.0-5";
      src = sources.kobuki_ros_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  kobuki_velocity_smoother = self.callPackage (
    {
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_flake8,
      ament_cmake_lint_cmake,
      ament_cmake_pep257,
      ament_cmake_ros,
      ament_cmake_uncrustify,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      ecl_build,
      geometry_msgs,
      launch_testing,
      launch_testing_ament_cmake,
      launch_testing_ros,
      nav_msgs,
      python3Packages,
      rcl_interfaces,
      rclcpp,
      rclcpp_components,
      ros2test,
    }:
    buildRosPackage {
      pname = "kobuki_velocity_smoother";
      version = "0.15.0-4";
      src = sources.kobuki_velocity_smoother;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ecl_build ];
      propagatedBuildInputs = [ geometry_msgs nav_msgs rcl_interfaces rclcpp rclcpp_components ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  lanelet2 = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
      lanelet2_core,
      lanelet2_examples,
      lanelet2_io,
      lanelet2_maps,
      lanelet2_matching,
      lanelet2_projection,
      lanelet2_python,
      lanelet2_routing,
      lanelet2_traffic_rules,
      lanelet2_validation,
      ros_environment,
    }:
    buildRosPackage {
      pname = "lanelet2";
      version = "1.2.1-1";
      src = sources.lanelet2;
      nativeBuildInputs = [ ament_cmake_core ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ lanelet2_core lanelet2_examples lanelet2_io lanelet2_maps lanelet2_matching lanelet2_projection lanelet2_python lanelet2_routing lanelet2_traffic_rules lanelet2_validation ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  lanelet2_core = self.callPackage (
    {
      ament_cmake_core,
      boost,
      buildRosPackage,
      eigen,
      gtest,
      mrt_cmake_modules,
    }:
    buildRosPackage {
      pname = "lanelet2_core";
      version = "1.2.1-1";
      src = sources.lanelet2_core;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ mrt_cmake_modules ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost eigen ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  lanelet2_examples = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
      gtest,
      lanelet2_core,
      lanelet2_io,
      lanelet2_matching,
      lanelet2_projection,
      lanelet2_python,
      lanelet2_routing,
      lanelet2_traffic_rules,
      mrt_cmake_modules,
      ros2cli,
    }:
    buildRosPackage {
      pname = "lanelet2_examples";
      version = "1.2.1-1";
      src = sources.lanelet2_examples;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ mrt_cmake_modules ];
      buildInputs = [  ];
      propagatedBuildInputs = [ lanelet2_core lanelet2_io lanelet2_matching lanelet2_projection lanelet2_python lanelet2_routing lanelet2_traffic_rules ros2cli ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  lanelet2_io = self.callPackage (
    {
      ament_cmake_core,
      boost,
      buildRosPackage,
      gtest,
      lanelet2_core,
      mrt_cmake_modules,
      pugixml,
    }:
    buildRosPackage {
      pname = "lanelet2_io";
      version = "1.2.1-1";
      src = sources.lanelet2_io;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ mrt_cmake_modules ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost lanelet2_core pugixml ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  lanelet2_maps = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
      lanelet2_core,
      mrt_cmake_modules,
    }:
    buildRosPackage {
      pname = "lanelet2_maps";
      version = "1.2.1-1";
      src = sources.lanelet2_maps;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ mrt_cmake_modules ];
      buildInputs = [  ];
      propagatedBuildInputs = [ lanelet2_core ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  lanelet2_matching = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
      gtest,
      lanelet2_core,
      lanelet2_io,
      lanelet2_maps,
      lanelet2_projection,
      lanelet2_traffic_rules,
      mrt_cmake_modules,
    }:
    buildRosPackage {
      pname = "lanelet2_matching";
      version = "1.2.1-1";
      src = sources.lanelet2_matching;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ mrt_cmake_modules ];
      buildInputs = [  ];
      propagatedBuildInputs = [ lanelet2_core lanelet2_traffic_rules ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  lanelet2_projection = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
      geographiclib,
      gtest,
      lanelet2_io,
      mrt_cmake_modules,
    }:
    buildRosPackage {
      pname = "lanelet2_projection";
      version = "1.2.1-1";
      src = sources.lanelet2_projection;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ mrt_cmake_modules ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geographiclib lanelet2_io ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  lanelet2_python = self.callPackage (
    {
      ament_cmake_core,
      boost,
      buildRosPackage,
      gtest,
      lanelet2_core,
      lanelet2_io,
      lanelet2_matching,
      lanelet2_projection,
      lanelet2_routing,
      lanelet2_traffic_rules,
      mrt_cmake_modules,
    }:
    buildRosPackage {
      pname = "lanelet2_python";
      version = "1.2.1-1";
      src = sources.lanelet2_python;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ mrt_cmake_modules ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost lanelet2_core lanelet2_io lanelet2_matching lanelet2_projection lanelet2_routing lanelet2_traffic_rules ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  lanelet2_routing = self.callPackage (
    {
      ament_cmake_core,
      boost,
      buildRosPackage,
      gtest,
      lanelet2_core,
      lanelet2_traffic_rules,
      mrt_cmake_modules,
    }:
    buildRosPackage {
      pname = "lanelet2_routing";
      version = "1.2.1-1";
      src = sources.lanelet2_routing;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ mrt_cmake_modules ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost lanelet2_core lanelet2_traffic_rules ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  lanelet2_traffic_rules = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
      gtest,
      lanelet2_core,
      mrt_cmake_modules,
    }:
    buildRosPackage {
      pname = "lanelet2_traffic_rules";
      version = "1.2.1-1";
      src = sources.lanelet2_traffic_rules;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ mrt_cmake_modules ];
      buildInputs = [  ];
      propagatedBuildInputs = [ lanelet2_core ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  lanelet2_validation = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
      gtest,
      lanelet2_core,
      lanelet2_io,
      lanelet2_maps,
      lanelet2_projection,
      lanelet2_routing,
      lanelet2_traffic_rules,
      mrt_cmake_modules,
    }:
    buildRosPackage {
      pname = "lanelet2_validation";
      version = "1.2.1-1";
      src = sources.lanelet2_validation;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ mrt_cmake_modules ];
      buildInputs = [  ];
      propagatedBuildInputs = [ lanelet2_core lanelet2_io lanelet2_projection lanelet2_routing lanelet2_traffic_rules ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  laser_filters = self.callPackage (
    {
      ament_cmake_auto,
      ament_cmake_gtest,
      angles,
      buildRosPackage,
      filters,
      laser_geometry,
      message_filters,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      sensor_msgs,
      tf2,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "laser_filters";
      version = "2.0.7-3";
      src = sources.laser_filters;
      nativeBuildInputs = [ ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ angles filters laser_geometry message_filters pluginlib rclcpp rclcpp_lifecycle sensor_msgs tf2 tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  laser_geometry = self.callPackage (
    {
      ament_cmake,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_gtest,
      ament_cmake_lint_cmake,
      ament_cmake_pytest,
      ament_cmake_uncrustify,
      buildPackages,
      buildRosPackage,
      eigen,
      eigen3_cmake_module,
      python_cmake_module,
      rclcpp,
      rclpy,
      sensor_msgs,
      sensor_msgs_py,
      tf2,
    }:
    buildRosPackage {
      pname = "laser_geometry";
      version = "2.7.0-3";
      src = sources.laser_geometry;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ eigen3_cmake_module buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen rclcpp rclpy sensor_msgs sensor_msgs_py tf2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  laser_proc = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      class_loader,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "laser_proc";
      version = "1.0.2-7";
      src = sources.laser_proc;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ class_loader rclcpp rclcpp_components sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  launch = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_mypy,
      ament_pep257,
      buildPackages,
      buildRosPackage,
      osrf_pycommon,
      python3Packages,
    }:
    buildRosPackage {
      pname = "launch";
      version = "3.4.2-2";
      src = sources.launch;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python osrf_pycommon buildPackages.python3Packages.importlib-metadata buildPackages.python3Packages.lark buildPackages.python3Packages.pyyaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_python osrf_pycommon python3Packages.importlib-metadata python3Packages.lark python3Packages.pyyaml ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  launch_param_builder = self.callPackage (
    {
      ament_copyright,
      ament_index_python,
      buildPackages,
      buildRosPackage,
      python3Packages,
      rclpy,
      xacro,
    }:
    buildRosPackage {
      pname = "launch_param_builder";
      version = "0.1.1-4";
      src = sources.launch_param_builder;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python buildPackages.python3Packages.pyyaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  launch_pytest = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_pep257,
      buildPackages,
      buildRosPackage,
      launch,
      launch_testing,
      osrf_pycommon,
    }:
    buildRosPackage {
      pname = "launch_pytest";
      version = "3.4.2-2";
      src = sources.launch_pytest;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python launch launch_testing osrf_pycommon buildPackages.python3Packages.pytest ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  launch_ros = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_pep257,
      buildPackages,
      buildRosPackage,
      composition_interfaces,
      launch,
      lifecycle_msgs,
      osrf_pycommon,
      python3Packages,
      rclpy,
    }:
    buildRosPackage {
      pname = "launch_ros";
      version = "0.26.5-2";
      src = sources.launch_ros;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python launch osrf_pycommon buildPackages.python3Packages.importlib-metadata buildPackages.python3Packages.pyyaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ composition_interfaces lifecycle_msgs rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  launch_system_modes = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_pep257,
      buildPackages,
      buildRosPackage,
      launch,
      osrf_pycommon,
      python3Packages,
      rclpy,
      system_modes_msgs,
    }:
    buildRosPackage {
      pname = "launch_system_modes";
      version = "0.9.0-6";
      src = sources.launch_system_modes;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python launch osrf_pycommon buildPackages.python3Packages.importlib-metadata buildPackages.python3Packages.pyyaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy system_modes_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  launch_testing = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_pep257,
      buildPackages,
      buildRosPackage,
      launch,
      launch_xml,
      launch_yaml,
      osrf_pycommon,
      python3Packages,
    }:
    buildRosPackage {
      pname = "launch_testing";
      version = "3.4.2-2";
      src = sources.launch_testing;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python launch launch_xml launch_yaml osrf_pycommon buildPackages.python3Packages.pytest ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_python launch launch_xml launch_yaml osrf_pycommon python3Packages.pytest ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  launch_testing_ament_cmake = self.callPackage (
    {
      ament_cmake,
      ament_cmake_copyright,
      ament_cmake_test,
      buildRosPackage,
      launch_testing,
      python_cmake_module,
    }:
    buildRosPackage {
      pname = "launch_testing_ament_cmake";
      version = "3.4.2-2";
      src = sources.launch_testing_ament_cmake;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_cmake_test launch_testing python_cmake_module ];
      buildInputs = [ ament_cmake ];
      propagatedBuildInputs = [ ament_cmake_test launch_testing python_cmake_module ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  launch_testing_examples = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildPackages,
      buildRosPackage,
      demo_nodes_cpp,
      launch,
      launch_ros,
      launch_testing,
      launch_testing_ros,
      rcl_interfaces,
      rclpy,
      ros2bag,
      std_msgs,
    }:
    buildRosPackage {
      pname = "launch_testing_examples";
      version = "0.19.4-1";
      src = sources.launch_testing_examples;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ launch launch_testing buildPackages.python3Packages.pytest ];
      buildInputs = [  ];
      propagatedBuildInputs = [ demo_nodes_cpp launch_ros launch_testing_ros rcl_interfaces rclpy ros2bag std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  launch_testing_ros = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_pep257,
      buildRosPackage,
      launch_ros,
      launch_testing,
      python3Packages,
      rclpy,
      std_msgs,
    }:
    buildRosPackage {
      pname = "launch_testing_ros";
      version = "0.26.5-2";
      src = sources.launch_testing_ros;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python launch_testing ];
      buildInputs = [  ];
      propagatedBuildInputs = [ launch_ros rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  launch_xml = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      launch,
      python3Packages,
    }:
    buildRosPackage {
      pname = "launch_xml";
      version = "3.4.2-2";
      src = sources.launch_xml;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ launch ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  launch_yaml = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      launch,
      python3Packages,
    }:
    buildRosPackage {
      pname = "launch_yaml";
      version = "3.4.2-2";
      src = sources.launch_yaml;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ launch ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  lely_core_libraries = self.callPackage (
    {
      ament_cmake,
      autoconf,
      automake,
      buildPackages,
      buildRosPackage,
      git,
      libtool,
    }:
    buildRosPackage {
      pname = "lely_core_libraries";
      version = "0.2.9-2";
      src = sources.lely_core_libraries;
      nativeBuildInputs = [ ament_cmake git ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.empy ];
      buildInputs = [ autoconf automake libtool ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  leo = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      leo_description,
      leo_msgs,
      leo_teleop,
    }:
    buildRosPackage {
      pname = "leo";
      version = "3.0.3-1";
      src = sources.leo;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ leo_description leo_msgs leo_teleop ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  leo_bringup = self.callPackage (
    {
      ament_cmake,
      ament_cmake_lint_cmake,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      geometry_msgs,
      image_proc,
      leo_description,
      leo_fw,
      robot_state_publisher,
      rosapi,
      rosbridge_server,
      sensor_msgs,
      v4l2_camera,
      xacro,
    }:
    buildRosPackage {
      pname = "leo_bringup";
      version = "1.4.0-3";
      src = sources.leo_bringup;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs image_proc leo_description leo_fw robot_state_publisher rosapi rosbridge_server sensor_msgs v4l2_camera xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  leo_description = self.callPackage (
    {
      ament_cmake,
      ament_cmake_lint_cmake,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      robot_state_publisher,
      xacro,
    }:
    buildRosPackage {
      pname = "leo_description";
      version = "3.0.3-1";
      src = sources.leo_description;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ robot_state_publisher xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  leo_desktop = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      leo,
      leo_viz,
    }:
    buildRosPackage {
      pname = "leo_desktop";
      version = "3.0.0-3";
      src = sources.leo_desktop;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ leo leo_viz ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  leo_fw = self.callPackage (
    {
      ament_cmake,
      ament_cmake_black,
      ament_cmake_copyright,
      ament_cmake_lint_cmake,
      ament_cmake_mypy,
      ament_cmake_python,
      ament_cmake_uncrustify,
      ament_cmake_xmllint,
      ament_index_python,
      ament_lint_auto,
      buildPackages,
      buildRosPackage,
      geometry_msgs,
      leo_msgs,
      libyamlcpp,
      nav_msgs,
      python3Packages,
      rclcpp,
      rclcpp_components,
      rclpy,
      ros2cli,
      sensor_msgs,
      std_msgs,
      std_srvs,
    }:
    buildRosPackage {
      pname = "leo_fw";
      version = "1.4.0-3";
      src = sources.leo_fw;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [ ament_index_python buildPackages.python3Packages.numpy buildPackages.python3Packages.pyyaml ];
      buildInputs = [ libyamlcpp ];
      propagatedBuildInputs = [ geometry_msgs leo_msgs nav_msgs python3Packages.dbus-python python3Packages.whichcraft rclcpp rclcpp_components rclpy ros2cli sensor_msgs std_msgs std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  leo_gz_bringup = self.callPackage (
    {
      ament_cmake,
      ament_cmake_black,
      ament_cmake_copyright,
      ament_cmake_lint_cmake,
      ament_cmake_mypy,
      ament_cmake_xmllint,
      ament_index_python,
      ament_lint_auto,
      buildRosPackage,
      leo_description,
      leo_gz_plugins,
      leo_gz_worlds,
      robot_state_publisher,
      ros_gz_bridge,
      ros_gz_image,
      ros_gz_sim,
      xacro,
    }:
    buildRosPackage {
      pname = "leo_gz_bringup";
      version = "2.0.0-1";
      src = sources.leo_gz_bringup;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [  ];
      propagatedBuildInputs = [ leo_description leo_gz_plugins leo_gz_worlds robot_state_publisher ros_gz_bridge ros_gz_image ros_gz_sim xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  leo_gz_plugins = self.callPackage (
    {
      ament_cmake,
      ament_cmake_copyright,
      ament_cmake_cpplint,
      ament_cmake_lint_cmake,
      ament_cmake_uncrustify,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      gz_plugin_vendor,
      gz_sim_vendor,
    }:
    buildRosPackage {
      pname = "leo_gz_plugins";
      version = "2.0.0-1";
      src = sources.leo_gz_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gz_plugin_vendor gz_sim_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  leo_gz_worlds = self.callPackage (
    {
      ament_cmake,
      ament_cmake_copyright,
      ament_cmake_lint_cmake,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "leo_gz_worlds";
      version = "2.0.0-1";
      src = sources.leo_gz_worlds;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  leo_msgs = self.callPackage (
    {
      ament_cmake,
      ament_cmake_lint_cmake,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "leo_msgs";
      version = "3.0.3-1";
      src = sources.leo_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  leo_robot = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      leo,
      leo_bringup,
      leo_fw,
    }:
    buildRosPackage {
      pname = "leo_robot";
      version = "1.4.0-3";
      src = sources.leo_robot;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ leo leo_bringup leo_fw ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  leo_simulator = self.callPackage (
    {
      ament_cmake,
      ament_cmake_copyright,
      ament_cmake_lint_cmake,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      leo_gz_bringup,
      leo_gz_plugins,
      leo_gz_worlds,
    }:
    buildRosPackage {
      pname = "leo_simulator";
      version = "2.0.0-1";
      src = sources.leo_simulator;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ leo_gz_bringup leo_gz_plugins leo_gz_worlds ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  leo_teleop = self.callPackage (
    {
      ament_cmake,
      ament_cmake_lint_cmake,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      joy_linux,
      teleop_twist_joy,
      teleop_twist_keyboard,
    }:
    buildRosPackage {
      pname = "leo_teleop";
      version = "3.0.3-1";
      src = sources.leo_teleop;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ joy_linux teleop_twist_joy teleop_twist_keyboard ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  leo_viz = self.callPackage (
    {
      ament_cmake,
      ament_cmake_lint_cmake,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      joint_state_publisher,
      joint_state_publisher_gui,
      leo_description,
      rviz2,
    }:
    buildRosPackage {
      pname = "leo_viz";
      version = "3.0.0-3";
      src = sources.leo_viz;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ joint_state_publisher joint_state_publisher_gui leo_description rviz2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  lgsvl_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "lgsvl_msgs";
      version = "0.0.4-5";
      src = sources.lgsvl_msgs;
      nativeBuildInputs = [ ament_cmake ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  libcaer = self.callPackage (
    {
      buildRosPackage,
      cmake,
      libusb1,
      pkg-config,
    }:
    buildRosPackage {
      pname = "libcaer";
      version = "1.0.2-3";
      src = sources.libcaer;
      nativeBuildInputs = [ cmake pkg-config ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ libusb1 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  libcaer_driver = self.callPackage (
    {
      ament_cmake,
      ament_cmake_auto,
      ament_cmake_clang_format,
      ament_cmake_copyright,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_flake8,
      ament_cmake_lint_cmake,
      ament_cmake_ros,
      ament_cmake_xmllint,
      buildRosPackage,
      camera_info_manager,
      event_camera_msgs,
      image_transport,
      libcaer_vendor,
      rclcpp,
      rclcpp_components,
      ros_environment,
      sensor_msgs,
      std_srvs,
    }:
    buildRosPackage {
      pname = "libcaer_driver";
      version = "1.3.3-1";
      src = sources.libcaer_driver;
      nativeBuildInputs = [ ament_cmake ament_cmake_auto ament_cmake_ros ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ camera_info_manager event_camera_msgs image_transport libcaer_vendor rclcpp rclcpp_components sensor_msgs std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  libcaer_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      buildRosPackage,
      cmake,
      gtest,
      libusb1,
      pkg-config,
    }:
    buildRosPackage {
      pname = "libcaer_vendor";
      version = "1.3.0-1";
      src = sources.libcaer_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package cmake pkg-config ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ libusb1 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  libcamera = self.callPackage (
    {
      buildPackages,
      buildRosPackage,
      libyaml,
      openssl,
      pkg-config,
      python3,
      python3Packages,
      udev,
    }:
    buildRosPackage {
      pname = "libcamera";
      version = "0.3.0-3";
      src = sources.libcamera;
      nativeBuildInputs = [ pkg-config buildPackages.python3Packages.jinja2 buildPackages.python3Packages.pyyaml ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ openssl python3Packages.pybind11 ];
      propagatedBuildInputs = [ libyaml openssl python3 udev ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  libcurl_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      buildRosPackage,
      curl,
      file,
      pkg-config,
    }:
    buildRosPackage {
      pname = "libcurl_vendor";
      version = "3.4.3-1";
      src = sources.libcurl_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [ curl pkg-config ];
      buildInputs = [ file ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  libg2o = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      eigen,
      libGL,
      libGLU,
      suitesparse,
    }:
    buildRosPackage {
      pname = "libg2o";
      version = "2020.5.29-6";
      src = sources.libg2o;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen libGL libGLU suitesparse ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  liblz4_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "liblz4_vendor";
      version = "0.26.4-1";
      src = sources.liblz4_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  libmavconn = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      asio,
      buildPackages,
      buildRosPackage,
      console-bridge,
      mavlink,
    }:
    buildRosPackage {
      pname = "libmavconn";
      version = "2.8.0-1";
      src = sources.libmavconn;
      nativeBuildInputs = [ ament_cmake buildPackages.python3Packages.empy ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ asio console-bridge mavlink ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  libnabo = self.callPackage (
    {
      boost,
      buildRosPackage,
      cmake,
      eigen,
    }:
    buildRosPackage {
      pname = "libnabo";
      version = "1.1.1-2";
      src = sources.libnabo;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost eigen ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  libphidget22 = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      libusb1,
    }:
    buildRosPackage {
      pname = "libphidget22";
      version = "2.3.3-2";
      src = sources.libphidget22;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ libusb1 ];
      propagatedBuildInputs = [ libusb1 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  libpointmatcher = self.callPackage (
    {
      boost,
      buildRosPackage,
      cmake,
      eigen,
      libnabo,
      libyamlcpp,
    }:
    buildRosPackage {
      pname = "libpointmatcher";
      version = "1.4.2-1";
      src = sources.libpointmatcher;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost eigen libnabo libyamlcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  librealsense2 = self.callPackage (
    {
      buildRosPackage,
      cmake,
      git,
      glfw3,
      libGL,
      libGLU,
      libusb1,
      openssl,
      pkg-config,
      udev,
      xorg,
    }:
    buildRosPackage {
      pname = "librealsense2";
      version = "2.55.1-1";
      src = sources.librealsense2;
      nativeBuildInputs = [ cmake git pkg-config ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ libusb1 openssl udev ];
      propagatedBuildInputs = [ glfw3 libGL libGLU xorg.libX11 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  libstatistics_collector = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      performance_test_fixture,
      rcl,
      rcpputils,
      rcutils,
      rmw,
      rosidl_default_generators,
      rosidl_default_runtime,
      statistics_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "libstatistics_collector";
      version = "1.7.3-1";
      src = sources.libstatistics_collector;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rcl rcpputils statistics_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  libyaml_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_vendor_package,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      libyaml,
      performance_test_fixture,
      pkg-config,
    }:
    buildRosPackage {
      pname = "libyaml_vendor";
      version = "1.6.3-2";
      src = sources.libyaml_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [ pkg-config ];
      buildInputs = [  ];
      propagatedBuildInputs = [ libyaml ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  lifecycle = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      lifecycle_msgs,
      rclcpp,
      rclcpp_lifecycle,
      ros_testing,
      std_msgs,
    }:
    buildRosPackage {
      pname = "lifecycle";
      version = "0.33.4-1";
      src = sources.lifecycle;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ lifecycle_msgs rclcpp rclcpp_lifecycle std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  lifecycle_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "lifecycle_msgs";
      version = "2.0.2-2";
      src = sources.lifecycle_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  lifecycle_py = self.callPackage (
    {
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      lifecycle,
      lifecycle_msgs,
      rclpy,
      ros_testing,
      std_msgs,
    }:
    buildRosPackage {
      pname = "lifecycle_py";
      version = "0.33.4-1";
      src = sources.lifecycle_py;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ lifecycle_msgs rclpy std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  linux_isolate_process = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "linux_isolate_process";
      version = "0.0.2-3";
      src = sources.linux_isolate_process;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  logging_demo = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      launch,
      launch_testing,
      launch_testing_ament_cmake,
      launch_testing_ros,
      rclcpp,
      rclcpp_components,
      rcutils,
      rmw_implementation_cmake,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "logging_demo";
      version = "0.33.4-1";
      src = sources.logging_demo;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rclcpp_components rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  lttngpy = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      pybind11_vendor,
      python_cmake_module,
      rpyutils,
    }:
    buildRosPackage {
      pname = "lttngpy";
      version = "8.2.1-1";
      src = sources.lttngpy;
      nativeBuildInputs = [ ament_cmake python_cmake_module ];
      propagatedNativeBuildInputs = [ rpyutils ];
      buildInputs = [ pybind11_vendor ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  magic_enum = self.callPackage (
    {
      buildRosPackage,
      cmake,
    }:
    buildRosPackage {
      pname = "magic_enum";
      version = "0.9.5-3";
      src = sources.magic_enum;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  map_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      nav_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "map_msgs";
      version = "2.4.1-2";
      src = sources.map_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ nav_msgs rosidl_default_runtime sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mapviz = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      cv_bridge,
      freeglut,
      geometry_msgs,
      glew,
      image_transport,
      libyamlcpp,
      mapviz_interfaces,
      marti_common_msgs,
      pkg-config,
      pluginlib,
      qt5,
      rclcpp,
      ros_environment,
      rqt_gui,
      rqt_gui_cpp,
      std_srvs,
      swri_math_util,
      swri_transform_util,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
      xorg,
    }:
    buildRosPackage {
      pname = "mapviz";
      version = "2.3.0-3";
      src = sources.mapviz;
      nativeBuildInputs = [ ament_cmake pkg-config ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ cv_bridge freeglut geometry_msgs glew image_transport libyamlcpp mapviz_interfaces marti_common_msgs pluginlib qt5.qtbase rclcpp rqt_gui rqt_gui_cpp std_srvs swri_math_util swri_transform_util tf2 tf2_geometry_msgs tf2_ros xorg.libXi xorg.libXmu ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mapviz_interfaces = self.callPackage (
    {
      buildRosPackage,
      builtin_interfaces,
      marti_common_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "mapviz_interfaces";
      version = "2.3.0-3";
      src = sources.mapviz_interfaces;
      nativeBuildInputs = [ rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ builtin_interfaces marti_common_msgs ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mapviz_plugins = self.callPackage (
    {
      ament_cmake,
      ament_index_cpp,
      buildRosPackage,
      cv_bridge,
      gps_msgs,
      image_transport,
      map_msgs,
      mapviz,
      marti_common_msgs,
      marti_nav_msgs,
      marti_sensor_msgs,
      marti_visualization_msgs,
      nav_msgs,
      pluginlib,
      qt5,
      rclcpp,
      rclcpp_action,
      ros_environment,
      sensor_msgs,
      std_msgs,
      stereo_msgs,
      swri_image_util,
      swri_math_util,
      swri_route_util,
      swri_transform_util,
      tf2,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "mapviz_plugins";
      version = "2.3.0-3";
      src = sources.mapviz_plugins;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ ament_index_cpp cv_bridge gps_msgs image_transport map_msgs mapviz marti_common_msgs marti_nav_msgs marti_sensor_msgs marti_visualization_msgs nav_msgs pluginlib qt5.qtbase rclcpp rclcpp_action sensor_msgs std_msgs stereo_msgs swri_image_util swri_math_util swri_route_util swri_transform_util tf2 visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  marine_acoustic_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "marine_acoustic_msgs";
      version = "2.1.0-2";
      src = sources.marine_acoustic_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  marine_sensor_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "marine_sensor_msgs";
      version = "2.1.0-2";
      src = sources.marine_sensor_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  marti_can_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "marti_can_msgs";
      version = "1.5.2-3";
      src = sources.marti_can_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  marti_common_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "marti_common_msgs";
      version = "1.5.2-3";
      src = sources.marti_common_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  marti_dbw_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "marti_dbw_msgs";
      version = "1.5.2-3";
      src = sources.marti_dbw_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  marti_introspection_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "marti_introspection_msgs";
      version = "1.5.2-3";
      src = sources.marti_introspection_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  marti_nav_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      geographic_msgs,
      geometry_msgs,
      marti_common_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "marti_nav_msgs";
      version = "1.5.2-3";
      src = sources.marti_nav_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geographic_msgs geometry_msgs marti_common_msgs rosidl_default_runtime sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  marti_perception_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "marti_perception_msgs";
      version = "1.5.2-3";
      src = sources.marti_perception_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  marti_sensor_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "marti_sensor_msgs";
      version = "1.5.2-3";
      src = sources.marti_sensor_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  marti_status_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "marti_status_msgs";
      version = "1.5.2-3";
      src = sources.marti_status_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  marti_visualization_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "marti_visualization_msgs";
      version = "1.5.2-3";
      src = sources.marti_visualization_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mavlink = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      cmake,
      python3,
      python3Packages,
      ros_environment,
    }:
    buildRosPackage {
      pname = "mavlink";
      version = "2024.6.6-1";
      src = sources.mavlink;
      nativeBuildInputs = [ ament_cmake cmake python3 ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ python3Packages.future python3Packages.lxml ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mavros = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_common,
      angles,
      buildRosPackage,
      console-bridge,
      diagnostic_msgs,
      diagnostic_updater,
      eigen,
      eigen3_cmake_module,
      eigen_stl_containers,
      geographic_msgs,
      geographiclib,
      geometry_msgs,
      gtest,
      libmavconn,
      mavlink,
      mavros_msgs,
      message_filters,
      nav_msgs,
      pluginlib,
      python3Packages,
      rclcpp,
      rclcpp_components,
      rclpy,
      rcpputils,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
      std_srvs,
      tf2_eigen,
      tf2_ros,
      trajectory_msgs,
    }:
    buildRosPackage {
      pname = "mavros";
      version = "2.8.0-1";
      src = sources.mavros;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [ eigen3_cmake_module ];
      buildInputs = [ angles ];
      propagatedBuildInputs = [ console-bridge diagnostic_msgs diagnostic_updater eigen eigen_stl_containers geographic_msgs geographiclib geometry_msgs libmavconn mavlink mavros_msgs message_filters nav_msgs pluginlib python3Packages.click rclcpp rclcpp_components rclpy rcpputils rosidl_default_runtime sensor_msgs std_msgs std_srvs tf2_eigen tf2_ros trajectory_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mavros_extras = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_common,
      angles,
      buildRosPackage,
      diagnostic_msgs,
      diagnostic_updater,
      eigen,
      eigen3_cmake_module,
      eigen_stl_containers,
      geographic_msgs,
      geographiclib,
      geometry_msgs,
      gtest,
      libmavconn,
      libyamlcpp,
      mavlink,
      mavros,
      mavros_msgs,
      message_filters,
      nav_msgs,
      pluginlib,
      rclcpp,
      rclcpp_components,
      rcpputils,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
      std_srvs,
      tf2_eigen,
      tf2_ros,
      trajectory_msgs,
      urdf,
      visualization_msgs,
      yaml_cpp_vendor,
    }:
    buildRosPackage {
      pname = "mavros_extras";
      version = "2.8.0-1";
      src = sources.mavros_extras;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [ eigen3_cmake_module ];
      buildInputs = [ angles ];
      propagatedBuildInputs = [ diagnostic_msgs diagnostic_updater eigen eigen_stl_containers geographic_msgs geographiclib geometry_msgs libmavconn libyamlcpp mavlink mavros mavros_msgs message_filters nav_msgs pluginlib rclcpp rclcpp_components rcpputils rosidl_default_runtime sensor_msgs std_msgs std_srvs tf2_eigen tf2_ros trajectory_msgs urdf visualization_msgs yaml_cpp_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mavros_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geographic_msgs,
      geometry_msgs,
      rcl_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "mavros_msgs";
      version = "2.8.0-1";
      src = sources.mavros_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geographic_msgs geometry_msgs rcl_interfaces rosidl_default_runtime sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mcap_vendor = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      git,
      liblz4_vendor,
      zstd_vendor,
    }:
    buildRosPackage {
      pname = "mcap_vendor";
      version = "0.26.4-1";
      src = sources.mcap_vendor;
      nativeBuildInputs = [ ament_cmake git ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ liblz4_vendor zstd_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  menge_vendor = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      pkg-config,
      tinyxml,
    }:
    buildRosPackage {
      pname = "menge_vendor";
      version = "1.2.1-1";
      src = sources.menge_vendor;
      nativeBuildInputs = [ ament_cmake pkg-config ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ tinyxml ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  message_filters = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_cmake_python,
      ament_cmake_ros,
      ament_lint_auto,
      buildRosPackage,
      builtin_interfaces,
      python_cmake_module,
      rclcpp,
      rclcpp_lifecycle,
      rclpy,
      rcutils,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "message_filters";
      version = "4.11.1-2";
      src = sources.message_filters;
      nativeBuildInputs = [ ament_cmake_python ament_cmake_ros python_cmake_module ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rclcpp rclpy std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  message_tf_frame_transformer = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      geometry_msgs,
      rclcpp,
      ros_environment,
      sensor_msgs,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
      tf2_sensor_msgs,
    }:
    buildRosPackage {
      pname = "message_tf_frame_transformer";
      version = "1.1.2-1";
      src = sources.message_tf_frame_transformer;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rclcpp sensor_msgs tf2 tf2_geometry_msgs tf2_ros tf2_sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  metavision_driver = self.callPackage (
    {
      ament_cmake,
      ament_cmake_auto,
      ament_cmake_clang_format,
      ament_cmake_copyright,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_flake8,
      ament_cmake_lint_cmake,
      ament_cmake_ros,
      ament_cmake_xmllint,
      buildRosPackage,
      event_camera_msgs,
      openeb_vendor,
      rclcpp,
      rclcpp_components,
      ros_environment,
      std_srvs,
    }:
    buildRosPackage {
      pname = "metavision_driver";
      version = "2.0.0-1";
      src = sources.metavision_driver;
      nativeBuildInputs = [ ament_cmake ament_cmake_auto ament_cmake_ros ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ event_camera_msgs openeb_vendor rclcpp rclcpp_components std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  micro_ros_diagnostic_bridge = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      diagnostic_msgs,
      micro_ros_diagnostic_msgs,
      osrf_testing_tools_cpp,
      rclcpp,
      ros_environment,
    }:
    buildRosPackage {
      pname = "micro_ros_diagnostic_bridge";
      version = "0.3.0-6";
      src = sources.micro_ros_diagnostic_bridge;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ diagnostic_msgs micro_ros_diagnostic_msgs rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  micro_ros_diagnostic_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "micro_ros_diagnostic_msgs";
      version = "0.3.0-6";
      src = sources.micro_ros_diagnostic_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  micro_ros_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "micro_ros_msgs";
      version = "1.0.0-5";
      src = sources.micro_ros_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  microstrain_inertial_description = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      xacro,
    }:
    buildRosPackage {
      pname = "microstrain_inertial_description";
      version = "4.3.0-1";
      src = sources.microstrain_inertial_description;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  microstrain_inertial_driver = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cpplint,
      buildRosPackage,
      curl,
      diagnostic_aggregator,
      diagnostic_updater,
      eigen,
      geographiclib,
      geometry_msgs,
      git,
      jq,
      lifecycle_msgs,
      microstrain_inertial_msgs,
      nav_msgs,
      nmea_msgs,
      rclcpp_lifecycle,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      rtcm_msgs,
      sensor_msgs,
      std_msgs,
      std_srvs,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "microstrain_inertial_driver";
      version = "4.3.0-1";
      src = sources.microstrain_inertial_driver;
      nativeBuildInputs = [ curl git ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ eigen geographiclib jq ];
      propagatedBuildInputs = [ diagnostic_aggregator diagnostic_updater geometry_msgs lifecycle_msgs microstrain_inertial_msgs nav_msgs nmea_msgs rclcpp_lifecycle rosidl_default_runtime rtcm_msgs sensor_msgs std_msgs std_srvs tf2 tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  microstrain_inertial_examples = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      microstrain_inertial_driver,
      rviz2,
      rviz_imu_plugin,
      sensor_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "microstrain_inertial_examples";
      version = "4.3.0-1";
      src = sources.microstrain_inertial_examples;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ microstrain_inertial_driver rviz2 rviz_imu_plugin sensor_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  microstrain_inertial_msgs = self.callPackage (
    {
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      std_msgs,
    }:
    buildRosPackage {
      pname = "microstrain_inertial_msgs";
      version = "4.3.0-1";
      src = sources.microstrain_inertial_msgs;
      nativeBuildInputs = [ rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  microstrain_inertial_rqt = self.callPackage (
    {
      buildRosPackage,
      geometry_msgs,
      microstrain_inertial_msgs,
      nav_msgs,
      rclpy,
      rqt_gui,
      rqt_gui_py,
      std_msgs,
    }:
    buildRosPackage {
      pname = "microstrain_inertial_rqt";
      version = "4.3.0-1";
      src = sources.microstrain_inertial_rqt;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs microstrain_inertial_msgs nav_msgs rclpy rqt_gui rqt_gui_py std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mimick_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "mimick_vendor";
      version = "0.6.1-2";
      src = sources.mimick_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mobileye_560_660_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "mobileye_560_660_msgs";
      version = "4.0.0-4";
      src = sources.mobileye_560_660_msgs;
      nativeBuildInputs = [ ament_cmake ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      kitti_metrics_eval,
      mola_bridge_ros2,
      mola_demos,
      mola_imu_preintegration,
      mola_input_euroc_dataset,
      mola_input_kitti360_dataset,
      mola_input_kitti_dataset,
      mola_input_mulran_dataset,
      mola_input_paris_luco_dataset,
      mola_input_rawlog,
      mola_input_rosbag2,
      mola_kernel,
      mola_launcher,
      mola_metric_maps,
      mola_navstate_fg,
      mola_navstate_fuse,
      mola_pose_list,
      mola_relocalization,
      mola_traj_tools,
      mola_viz,
      mola_yaml,
    }:
    buildRosPackage {
      pname = "mola";
      version = "1.0.6-1";
      src = sources.mola;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_lint_auto ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint_common kitti_metrics_eval mola_bridge_ros2 mola_demos mola_imu_preintegration mola_input_euroc_dataset mola_input_kitti360_dataset mola_input_kitti_dataset mola_input_mulran_dataset mola_input_paris_luco_dataset mola_input_rawlog mola_input_rosbag2 mola_kernel mola_launcher mola_metric_maps mola_navstate_fg mola_navstate_fuse mola_pose_list mola_relocalization mola_traj_tools mola_viz mola_yaml ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_bridge_ros2 = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_xmllint,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cmake,
      geometry_msgs,
      mola_common,
      mola_kernel,
      mrpt2,
      nav_msgs,
      rclcpp,
      ros_environment,
      sensor_msgs,
      tf2,
      tf2_geometry_msgs,
    }:
    buildRosPackage {
      pname = "mola_bridge_ros2";
      version = "1.0.6-1";
      src = sources.mola_bridge_ros2;
      nativeBuildInputs = [ ament_cmake ament_cmake_gmock ament_cmake_gtest cmake ros_environment ];
      propagatedNativeBuildInputs = [ ament_lint_auto ];
      buildInputs = [ ament_cmake_xmllint ];
      propagatedBuildInputs = [ ament_lint_common geometry_msgs mola_common mola_kernel mrpt2 nav_msgs rclcpp sensor_msgs tf2 tf2_geometry_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_common = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_xmllint,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cmake,
      ros_environment,
    }:
    buildRosPackage {
      pname = "mola_common";
      version = "0.3.1-1";
      src = sources.mola_common;
      nativeBuildInputs = [ ament_cmake ament_cmake_gtest cmake ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ament_cmake_xmllint ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_demos = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_xmllint,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cmake,
      ros_environment,
    }:
    buildRosPackage {
      pname = "mola_demos";
      version = "1.0.6-1";
      src = sources.mola_demos;
      nativeBuildInputs = [ ament_cmake ament_cmake_gtest cmake ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ament_cmake_xmllint ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_imu_preintegration = self.callPackage (
    {
      buildRosPackage,
      cmake,
      mola_common,
      mrpt2,
    }:
    buildRosPackage {
      pname = "mola_imu_preintegration";
      version = "1.0.6-1";
      src = sources.mola_imu_preintegration;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mola_common mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_input_euroc_dataset = self.callPackage (
    {
      buildRosPackage,
      cmake,
      mola_common,
      mola_kernel,
      mrpt2,
    }:
    buildRosPackage {
      pname = "mola_input_euroc_dataset";
      version = "1.0.6-1";
      src = sources.mola_input_euroc_dataset;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mola_common mola_kernel mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_input_kitti360_dataset = self.callPackage (
    {
      buildRosPackage,
      cmake,
      mola_common,
      mola_kernel,
      mrpt2,
    }:
    buildRosPackage {
      pname = "mola_input_kitti360_dataset";
      version = "1.0.6-1";
      src = sources.mola_input_kitti360_dataset;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mola_common mola_kernel mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_input_kitti_dataset = self.callPackage (
    {
      buildRosPackage,
      cmake,
      mola_common,
      mola_kernel,
      mrpt2,
    }:
    buildRosPackage {
      pname = "mola_input_kitti_dataset";
      version = "1.0.6-1";
      src = sources.mola_input_kitti_dataset;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mola_common mola_kernel mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_input_mulran_dataset = self.callPackage (
    {
      buildRosPackage,
      cmake,
      mola_common,
      mola_kernel,
      mrpt2,
    }:
    buildRosPackage {
      pname = "mola_input_mulran_dataset";
      version = "1.0.6-1";
      src = sources.mola_input_mulran_dataset;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mola_common mola_kernel mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_input_paris_luco_dataset = self.callPackage (
    {
      buildRosPackage,
      cmake,
      mola_common,
      mola_kernel,
      mrpt2,
    }:
    buildRosPackage {
      pname = "mola_input_paris_luco_dataset";
      version = "1.0.6-1";
      src = sources.mola_input_paris_luco_dataset;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mola_common mola_kernel mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_input_rawlog = self.callPackage (
    {
      buildRosPackage,
      cmake,
      mola_kernel,
      mrpt2,
    }:
    buildRosPackage {
      pname = "mola_input_rawlog";
      version = "1.0.6-1";
      src = sources.mola_input_rawlog;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mola_kernel mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_input_rosbag2 = self.callPackage (
    {
      buildRosPackage,
      cmake,
      cv_bridge,
      mola_kernel,
      mrpt2,
      rosbag2_cpp,
      sensor_msgs,
      tf2_geometry_msgs,
      tf2_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "mola_input_rosbag2";
      version = "1.0.6-1";
      src = sources.mola_input_rosbag2;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge mola_kernel mrpt2 rosbag2_cpp sensor_msgs tf2_geometry_msgs tf2_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_kernel = self.callPackage (
    {
      buildRosPackage,
      cmake,
      mola_common,
      mola_yaml,
      mrpt2,
    }:
    buildRosPackage {
      pname = "mola_kernel";
      version = "1.0.6-1";
      src = sources.mola_kernel;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mola_common mola_yaml mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_launcher = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_xmllint,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cmake,
      mola_kernel,
      mrpt2,
      ros_environment,
    }:
    buildRosPackage {
      pname = "mola_launcher";
      version = "1.0.6-1";
      src = sources.mola_launcher;
      nativeBuildInputs = [ ament_cmake ament_cmake_gtest cmake ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ament_cmake_xmllint ];
      propagatedBuildInputs = [ mola_kernel mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_metric_maps = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_xmllint,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cmake,
      mola_common,
      mrpt2,
      ros_environment,
    }:
    buildRosPackage {
      pname = "mola_metric_maps";
      version = "1.0.6-1";
      src = sources.mola_metric_maps;
      nativeBuildInputs = [ ament_cmake ament_cmake_gtest cmake ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ament_cmake_xmllint ];
      propagatedBuildInputs = [ mola_common mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_navstate_fg = self.callPackage (
    {
      boost,
      buildRosPackage,
      cmake,
      gtsam,
      mola_common,
      mola_imu_preintegration,
      mola_kernel,
      mrpt2,
    }:
    buildRosPackage {
      pname = "mola_navstate_fg";
      version = "1.0.6-1";
      src = sources.mola_navstate_fg;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ boost gtsam ];
      propagatedBuildInputs = [ mola_common mola_imu_preintegration mola_kernel mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_navstate_fuse = self.callPackage (
    {
      buildRosPackage,
      cmake,
      mola_common,
      mola_imu_preintegration,
      mola_kernel,
      mrpt2,
    }:
    buildRosPackage {
      pname = "mola_navstate_fuse";
      version = "1.0.6-1";
      src = sources.mola_navstate_fuse;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mola_common mola_imu_preintegration mola_kernel mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_pose_list = self.callPackage (
    {
      buildRosPackage,
      cmake,
      mola_common,
      mrpt2,
    }:
    buildRosPackage {
      pname = "mola_pose_list";
      version = "1.0.6-1";
      src = sources.mola_pose_list;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mola_common mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_relocalization = self.callPackage (
    {
      buildRosPackage,
      cmake,
      mola_common,
      mola_pose_list,
      mola_test_datasets,
      mp2p_icp,
      mrpt2,
    }:
    buildRosPackage {
      pname = "mola_relocalization";
      version = "1.0.6-1";
      src = sources.mola_relocalization;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mola_common mola_pose_list mola_test_datasets mp2p_icp mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_test_datasets = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_xmllint,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cmake,
      ros_environment,
    }:
    buildRosPackage {
      pname = "mola_test_datasets";
      version = "0.3.3-1";
      src = sources.mola_test_datasets;
      nativeBuildInputs = [ ament_cmake ament_cmake_gtest cmake ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ament_cmake_xmllint ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_traj_tools = self.callPackage (
    {
      buildRosPackage,
      cmake,
      mola_common,
      mrpt2,
    }:
    buildRosPackage {
      pname = "mola_traj_tools";
      version = "1.0.6-1";
      src = sources.mola_traj_tools;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mola_common mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_viz = self.callPackage (
    {
      buildRosPackage,
      cmake,
      mola_kernel,
      mrpt2,
    }:
    buildRosPackage {
      pname = "mola_viz";
      version = "1.0.6-1";
      src = sources.mola_viz;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mola_kernel mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mola_yaml = self.callPackage (
    {
      buildRosPackage,
      cmake,
      mola_common,
      mrpt2,
    }:
    buildRosPackage {
      pname = "mola_yaml";
      version = "1.0.6-1";
      src = sources.mola_yaml;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mola_common mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  motion_capture_tracking = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      eigen,
      eigen3_cmake_module,
      motion_capture_tracking_interfaces,
      pcl,
      rclcpp,
      sensor_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "motion_capture_tracking";
      version = "1.0.3-3";
      src = sources.motion_capture_tracking;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ eigen3_cmake_module ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen motion_capture_tracking_interfaces pcl rclcpp sensor_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  motion_capture_tracking_interfaces = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "motion_capture_tracking_interfaces";
      version = "1.0.3-3";
      src = sources.motion_capture_tracking_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mouse_teleop = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_xmllint,
      buildPackages,
      buildRosPackage,
      geometry_msgs,
      python3Packages,
      rclpy,
    }:
    buildRosPackage {
      pname = "mouse_teleop";
      version = "1.5.0-3";
      src = sources.mouse_teleop;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs python3Packages.tkinter rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      moveit_core,
      moveit_planners,
      moveit_plugins,
      moveit_ros,
      moveit_setup_assistant,
    }:
    buildRosPackage {
      pname = "moveit";
      version = "2.10.0-1";
      src = sources.moveit;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ moveit_core moveit_planners moveit_plugins moveit_ros moveit_setup_assistant ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_common = self.callPackage (
    {
      ament_cmake,
      backward_ros,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "moveit_common";
      version = "2.10.0-1";
      src = sources.moveit_common;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ backward_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_configs_utils = self.callPackage (
    {
      ament_index_python,
      buildRosPackage,
      launch,
      launch_param_builder,
      launch_ros,
      srdfdom,
    }:
    buildRosPackage {
      pname = "moveit_configs_utils";
      version = "2.10.0-1";
      src = sources.moveit_configs_utils;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ launch_param_builder launch_ros srdfdom ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_core = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_cmake_google_benchmark,
      ament_cmake_gtest,
      ament_index_cpp,
      angles,
      assimp,
      boost,
      buildRosPackage,
      bullet,
      common_interfaces,
      eigen,
      eigen3_cmake_module,
      eigen_stl_containers,
      fcl,
      generate_parameter_library,
      geometric_shapes,
      geometry_msgs,
      google_benchmark_vendor,
      kdl_parser,
      launch_testing_ament_cmake,
      moveit_common,
      moveit_msgs,
      moveit_resources_panda_moveit_config,
      moveit_resources_pr2_description,
      octomap_msgs,
      orocos_kdl_vendor,
      osqp_vendor,
      pkg-config,
      pluginlib,
      random_numbers,
      rcl_interfaces,
      rclcpp,
      rclpy,
      rsl,
      ruckig,
      sensor_msgs,
      shape_msgs,
      srdfdom,
      std_msgs,
      tf2,
      tf2_eigen,
      tf2_geometry_msgs,
      tf2_kdl,
      trajectory_msgs,
      urdf,
      urdfdom,
      urdfdom_headers,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "moveit_core";
      version = "2.10.0-1";
      src = sources.moveit_core;
      nativeBuildInputs = [ ament_cmake pkg-config ];
      propagatedNativeBuildInputs = [ eigen3_cmake_module google_benchmark_vendor ];
      buildInputs = [  ];
      propagatedBuildInputs = [ angles assimp boost bullet common_interfaces eigen eigen_stl_containers fcl generate_parameter_library geometric_shapes geometry_msgs kdl_parser moveit_common moveit_msgs octomap_msgs osqp_vendor pluginlib random_numbers rclcpp rsl ruckig sensor_msgs shape_msgs srdfdom std_msgs tf2 tf2_eigen tf2_geometry_msgs tf2_kdl trajectory_msgs urdf urdfdom urdfdom_headers visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_hybrid_planning = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_index_cpp,
      buildRosPackage,
      controller_manager,
      moveit_common,
      moveit_configs_utils,
      moveit_core,
      moveit_msgs,
      moveit_planners_ompl,
      moveit_resources_panda_moveit_config,
      moveit_ros_planning,
      moveit_ros_planning_interface,
      moveit_simple_controller_manager,
      pluginlib,
      position_controllers,
      rclcpp,
      rclcpp_action,
      rclcpp_components,
      robot_state_publisher,
      ros_testing,
      rviz2,
      std_msgs,
      std_srvs,
      tf2_ros,
      trajectory_msgs,
    }:
    buildRosPackage {
      pname = "moveit_hybrid_planning";
      version = "2.10.0-1";
      src = sources.moveit_hybrid_planning;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp controller_manager moveit_common moveit_core moveit_msgs moveit_resources_panda_moveit_config moveit_ros_planning moveit_ros_planning_interface pluginlib position_controllers rclcpp rclcpp_action rclcpp_components robot_state_publisher rviz2 std_msgs std_srvs tf2_ros trajectory_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_kinematics = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      buildRosPackage,
      class_loader,
      eigen,
      generate_parameter_library,
      launch_param_builder,
      moveit_common,
      moveit_configs_utils,
      moveit_core,
      moveit_msgs,
      moveit_resources_fanuc_description,
      moveit_resources_fanuc_moveit_config,
      moveit_resources_panda_description,
      moveit_resources_panda_moveit_config,
      moveit_ros_planning,
      orocos_kdl_vendor,
      pluginlib,
      python3Packages,
      ros_testing,
      rsl,
      tf2,
      tf2_kdl,
      urdfdom,
    }:
    buildRosPackage {
      pname = "moveit_kinematics";
      version = "2.10.0-1";
      src = sources.moveit_kinematics;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ class_loader eigen generate_parameter_library moveit_common moveit_core moveit_msgs moveit_ros_planning orocos_kdl_vendor pluginlib python3Packages.lxml rsl tf2 tf2_kdl urdfdom ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_msgs = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      ament_lint_auto,
      ament_lint_cmake,
      buildRosPackage,
      geometry_msgs,
      object_recognition_msgs,
      octomap_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      shape_msgs,
      std_msgs,
      trajectory_msgs,
    }:
    buildRosPackage {
      pname = "moveit_msgs";
      version = "2.5.0-1";
      src = sources.moveit_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs geometry_msgs object_recognition_msgs octomap_msgs rosidl_default_runtime sensor_msgs shape_msgs std_msgs trajectory_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_planners = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      moveit_planners_ompl,
      moveit_planners_stomp,
      pilz_industrial_motion_planner,
    }:
    buildRosPackage {
      pname = "moveit_planners";
      version = "2.10.0-1";
      src = sources.moveit_planners;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ moveit_planners_ompl moveit_planners_stomp pilz_industrial_motion_planner ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_planners_chomp = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      chomp_motion_planner,
      moveit_common,
      moveit_core,
      pluginlib,
      rclcpp,
    }:
    buildRosPackage {
      pname = "moveit_planners_chomp";
      version = "2.10.0-1";
      src = sources.moveit_planners_chomp;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ chomp_motion_planner moveit_common moveit_core pluginlib rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_planners_ompl = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      buildRosPackage,
      eigen,
      eigen3_cmake_module,
      llvmPackages,
      moveit_common,
      moveit_core,
      moveit_msgs,
      moveit_resources_fanuc_moveit_config,
      moveit_resources_panda_moveit_config,
      moveit_resources_pr2_description,
      moveit_ros_planning,
      ompl,
      pluginlib,
      rclcpp,
      tf2_eigen,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "moveit_planners_ompl";
      version = "2.10.0-1";
      src = sources.moveit_planners_ompl;
      nativeBuildInputs = [ ament_cmake eigen3_cmake_module ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ llvmPackages.openmp moveit_common moveit_core moveit_msgs moveit_ros_planning ompl pluginlib rclcpp tf2_eigen tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_planners_stomp = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      generate_parameter_library,
      moveit_common,
      moveit_core,
      rsl,
      std_msgs,
      stomp,
      tf2_eigen,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "moveit_planners_stomp";
      version = "2.10.0-1";
      src = sources.moveit_planners_stomp;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ generate_parameter_library moveit_common moveit_core rsl std_msgs stomp tf2_eigen visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_plugins = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      moveit_simple_controller_manager,
    }:
    buildRosPackage {
      pname = "moveit_plugins";
      version = "2.10.0-1";
      src = sources.moveit_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ moveit_simple_controller_manager ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_py = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_index_python,
      buildRosPackage,
      geometry_msgs,
      moveit_core,
      moveit_ros_planning,
      moveit_ros_planning_interface,
      octomap_msgs,
      pybind11_vendor,
      python3Packages,
      rclcpp,
      rclpy,
    }:
    buildRosPackage {
      pname = "moveit_py";
      version = "2.10.0-1";
      src = sources.moveit_py;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [ pybind11_vendor ];
      propagatedBuildInputs = [ geometry_msgs moveit_core moveit_ros_planning moveit_ros_planning_interface octomap_msgs rclcpp rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_resources = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      joint_state_publisher,
      moveit_resources_fanuc_description,
      moveit_resources_fanuc_moveit_config,
      moveit_resources_panda_description,
      moveit_resources_panda_moveit_config,
      moveit_resources_pr2_description,
      robot_state_publisher,
    }:
    buildRosPackage {
      pname = "moveit_resources";
      version = "3.0.0-3";
      src = sources.moveit_resources;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ joint_state_publisher moveit_resources_fanuc_description moveit_resources_fanuc_moveit_config moveit_resources_panda_description moveit_resources_panda_moveit_config moveit_resources_pr2_description robot_state_publisher ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_resources_fanuc_description = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "moveit_resources_fanuc_description";
      version = "3.0.0-3";
      src = sources.moveit_resources_fanuc_description;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_resources_fanuc_moveit_config = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      joint_state_publisher,
      moveit_resources_fanuc_description,
      robot_state_publisher,
      tf2_ros,
      xacro,
    }:
    buildRosPackage {
      pname = "moveit_resources_fanuc_moveit_config";
      version = "3.0.0-3";
      src = sources.moveit_resources_fanuc_moveit_config;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ joint_state_publisher moveit_resources_fanuc_description robot_state_publisher tf2_ros xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_resources_panda_description = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "moveit_resources_panda_description";
      version = "3.0.0-3";
      src = sources.moveit_resources_panda_description;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_resources_panda_moveit_config = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      joint_state_publisher,
      joint_state_publisher_gui,
      moveit_resources_panda_description,
      robot_state_publisher,
      xacro,
    }:
    buildRosPackage {
      pname = "moveit_resources_panda_moveit_config";
      version = "3.0.0-3";
      src = sources.moveit_resources_panda_moveit_config;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ joint_state_publisher joint_state_publisher_gui moveit_resources_panda_description robot_state_publisher xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_resources_pr2_description = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "moveit_resources_pr2_description";
      version = "3.0.0-3";
      src = sources.moveit_resources_pr2_description;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_resources_prbt_ikfast_manipulator_plugin = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      generate_parameter_library,
      moveit_core,
      pluginlib,
      rclcpp,
      tf2_eigen,
      tf2_eigen_kdl,
      tf2_geometry_msgs,
      tf2_kdl,
    }:
    buildRosPackage {
      pname = "moveit_resources_prbt_ikfast_manipulator_plugin";
      version = "2.10.0-1";
      src = sources.moveit_resources_prbt_ikfast_manipulator_plugin;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ tf2_eigen tf2_eigen_kdl ];
      propagatedBuildInputs = [ generate_parameter_library moveit_core pluginlib rclcpp tf2_geometry_msgs tf2_kdl ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_resources_prbt_moveit_config = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      joint_state_publisher,
      moveit_resources_prbt_ikfast_manipulator_plugin,
      moveit_resources_prbt_support,
      moveit_ros_move_group,
      robot_state_publisher,
      rviz2,
      xacro,
    }:
    buildRosPackage {
      pname = "moveit_resources_prbt_moveit_config";
      version = "2.10.0-1";
      src = sources.moveit_resources_prbt_moveit_config;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ joint_state_publisher moveit_resources_prbt_ikfast_manipulator_plugin moveit_resources_prbt_support moveit_ros_move_group robot_state_publisher rviz2 xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_resources_prbt_pg70_support = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      moveit_resources_prbt_ikfast_manipulator_plugin,
      moveit_resources_prbt_moveit_config,
      moveit_resources_prbt_support,
      xacro,
    }:
    buildRosPackage {
      pname = "moveit_resources_prbt_pg70_support";
      version = "2.10.0-1";
      src = sources.moveit_resources_prbt_pg70_support;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ moveit_resources_prbt_ikfast_manipulator_plugin moveit_resources_prbt_moveit_config moveit_resources_prbt_support xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_resources_prbt_support = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      xacro,
    }:
    buildRosPackage {
      pname = "moveit_resources_prbt_support";
      version = "2.10.0-1";
      src = sources.moveit_resources_prbt_support;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_ros = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      moveit_ros_benchmarks,
      moveit_ros_move_group,
      moveit_ros_planning,
      moveit_ros_planning_interface,
      moveit_ros_robot_interaction,
      moveit_ros_visualization,
      moveit_ros_warehouse,
    }:
    buildRosPackage {
      pname = "moveit_ros";
      version = "2.10.0-1";
      src = sources.moveit_ros;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ moveit_ros_benchmarks moveit_ros_move_group moveit_ros_planning moveit_ros_planning_interface moveit_ros_robot_interaction moveit_ros_visualization moveit_ros_warehouse ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_ros_benchmarks = self.callPackage (
    {
      ament_cmake,
      boost,
      buildRosPackage,
      launch_param_builder,
      moveit_common,
      moveit_configs_utils,
      moveit_core,
      moveit_ros_planning,
      moveit_ros_warehouse,
      pluginlib,
      rclcpp,
      tf2_eigen,
    }:
    buildRosPackage {
      pname = "moveit_ros_benchmarks";
      version = "2.10.0-1";
      src = sources.moveit_ros_benchmarks;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ boost moveit_core ];
      propagatedBuildInputs = [ boost launch_param_builder moveit_common moveit_configs_utils moveit_ros_planning moveit_ros_warehouse pluginlib rclcpp tf2_eigen ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_ros_control_interface = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      controller_manager_msgs,
      moveit_common,
      moveit_core,
      moveit_simple_controller_manager,
      pluginlib,
      rclcpp_action,
      trajectory_msgs,
    }:
    buildRosPackage {
      pname = "moveit_ros_control_interface";
      version = "2.10.0-1";
      src = sources.moveit_ros_control_interface;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ controller_manager_msgs moveit_common moveit_core moveit_simple_controller_manager pluginlib rclcpp_action trajectory_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_ros_move_group = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      buildRosPackage,
      fmt,
      moveit_common,
      moveit_configs_utils,
      moveit_core,
      moveit_kinematics,
      moveit_resources_fanuc_moveit_config,
      moveit_resources_panda_moveit_config,
      moveit_ros_occupancy_map_monitor,
      moveit_ros_planning,
      pluginlib,
      rclcpp,
      rclcpp_action,
      ros_testing,
      std_srvs,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "moveit_ros_move_group";
      version = "2.10.0-1";
      src = sources.moveit_ros_move_group;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ fmt moveit_common moveit_core moveit_kinematics moveit_ros_occupancy_map_monitor moveit_ros_planning pluginlib rclcpp rclcpp_action std_srvs tf2 tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_ros_occupancy_map_monitor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      buildRosPackage,
      eigen,
      eigen3_cmake_module,
      geometric_shapes,
      moveit_common,
      moveit_core,
      moveit_msgs,
      pluginlib,
      rclcpp,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "moveit_ros_occupancy_map_monitor";
      version = "2.10.0-1";
      src = sources.moveit_ros_occupancy_map_monitor;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ eigen3_cmake_module ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen geometric_shapes moveit_common moveit_core moveit_msgs pluginlib rclcpp tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_ros_perception = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      cv_bridge,
      eigen,
      freeglut,
      glew,
      image_transport,
      libGL,
      libGLU,
      llvmPackages,
      message_filters,
      moveit_common,
      moveit_core,
      moveit_msgs,
      moveit_ros_occupancy_map_monitor,
      moveit_ros_planning,
      object_recognition_msgs,
      pluginlib,
      rclcpp,
      sensor_msgs,
      tf2,
      tf2_eigen,
      tf2_geometry_msgs,
      tf2_ros,
      urdf,
    }:
    buildRosPackage {
      pname = "moveit_ros_perception";
      version = "2.10.0-1";
      src = sources.moveit_ros_perception;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ eigen ];
      propagatedBuildInputs = [ cv_bridge freeglut glew image_transport libGL libGLU llvmPackages.openmp message_filters moveit_common moveit_core moveit_msgs moveit_ros_occupancy_map_monitor moveit_ros_planning object_recognition_msgs pluginlib rclcpp sensor_msgs tf2 tf2_eigen tf2_geometry_msgs tf2_ros urdf ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_ros_planning = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_index_cpp,
      buildRosPackage,
      eigen,
      eigen3_cmake_module,
      fmt,
      generate_parameter_library,
      launch_testing_ament_cmake,
      message_filters,
      moveit_common,
      moveit_configs_utils,
      moveit_core,
      moveit_msgs,
      moveit_resources_panda_moveit_config,
      moveit_ros_occupancy_map_monitor,
      pluginlib,
      rclcpp,
      rclcpp_action,
      rclcpp_components,
      ros_testing,
      srdfdom,
      std_msgs,
      tf2,
      tf2_eigen,
      tf2_geometry_msgs,
      tf2_msgs,
      tf2_ros,
      urdf,
    }:
    buildRosPackage {
      pname = "moveit_ros_planning";
      version = "2.10.0-1";
      src = sources.moveit_ros_planning;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ eigen3_cmake_module ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp eigen fmt generate_parameter_library message_filters moveit_common moveit_core moveit_msgs moveit_ros_occupancy_map_monitor pluginlib rclcpp rclcpp_action rclcpp_components srdfdom std_msgs tf2 tf2_eigen tf2_geometry_msgs tf2_msgs tf2_ros urdf ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_ros_planning_interface = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      buildRosPackage,
      eigen,
      eigen3_cmake_module,
      geometry_msgs,
      moveit_common,
      moveit_configs_utils,
      moveit_core,
      moveit_msgs,
      moveit_resources_fanuc_moveit_config,
      moveit_resources_panda_moveit_config,
      moveit_ros_move_group,
      moveit_ros_planning,
      moveit_ros_warehouse,
      moveit_simple_controller_manager,
      python3,
      rclcpp,
      rclcpp_action,
      rclpy,
      ros_testing,
      rviz2,
      tf2,
      tf2_eigen,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "moveit_ros_planning_interface";
      version = "2.10.0-1";
      src = sources.moveit_ros_planning_interface;
      nativeBuildInputs = [ ament_cmake eigen3_cmake_module ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ eigen ];
      propagatedBuildInputs = [ geometry_msgs moveit_common moveit_core moveit_msgs moveit_ros_move_group moveit_ros_planning moveit_ros_warehouse python3 rclcpp rclcpp_action rclpy tf2 tf2_eigen tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_ros_robot_interaction = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      buildRosPackage,
      interactive_markers,
      moveit_common,
      moveit_core,
      moveit_ros_planning,
      rclcpp,
      tf2,
      tf2_eigen,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "moveit_ros_robot_interaction";
      version = "2.10.0-1";
      src = sources.moveit_ros_robot_interaction;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ interactive_markers moveit_common moveit_core moveit_ros_planning rclcpp tf2 tf2_eigen tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_ros_tests = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      buildRosPackage,
      moveit_common,
      moveit_configs_utils,
      moveit_core,
      moveit_planners_chomp,
      moveit_planners_ompl,
      moveit_planners_stomp,
      moveit_resources_panda_moveit_config,
      moveit_ros_move_group,
      moveit_ros_planning,
      moveit_ros_planning_interface,
      moveit_simple_controller_manager,
      pilz_industrial_motion_planner,
      rclcpp,
      ros_testing,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "moveit_ros_tests";
      version = "2.10.0-1";
      src = sources.moveit_ros_tests;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ moveit_common rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_ros_visualization = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      class_loader,
      eigen,
      geometric_shapes,
      interactive_markers,
      moveit_common,
      moveit_ros_planning_interface,
      moveit_ros_robot_interaction,
      moveit_ros_warehouse,
      object_recognition_msgs,
      pkg-config,
      pluginlib,
      qt5,
      rclcpp,
      rclpy,
      rviz2,
      tf2_eigen,
    }:
    buildRosPackage {
      pname = "moveit_ros_visualization";
      version = "2.10.0-1";
      src = sources.moveit_ros_visualization;
      nativeBuildInputs = [ ament_cmake pkg-config ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ class_loader eigen qt5.qtbase ];
      propagatedBuildInputs = [ geometric_shapes interactive_markers moveit_common moveit_ros_planning_interface moveit_ros_robot_interaction moveit_ros_warehouse object_recognition_msgs pluginlib rclcpp rclpy rviz2 tf2_eigen ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_ros_warehouse = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      fmt,
      moveit_common,
      moveit_core,
      moveit_ros_planning,
      rclcpp,
      tf2_eigen,
      tf2_ros,
      warehouse_ros,
    }:
    buildRosPackage {
      pname = "moveit_ros_warehouse";
      version = "2.10.0-1";
      src = sources.moveit_ros_warehouse;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ fmt moveit_common moveit_core moveit_ros_planning rclcpp tf2_eigen tf2_ros warehouse_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_runtime = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      moveit_core,
      moveit_planners,
      moveit_plugins,
      moveit_ros_move_group,
      moveit_ros_perception,
      moveit_ros_planning,
      moveit_ros_planning_interface,
      moveit_ros_warehouse,
    }:
    buildRosPackage {
      pname = "moveit_runtime";
      version = "2.10.0-1";
      src = sources.moveit_runtime;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ moveit_core moveit_planners moveit_plugins moveit_ros_move_group moveit_ros_perception moveit_ros_planning moveit_ros_planning_interface moveit_ros_warehouse ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_servo = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      buildRosPackage,
      control_msgs,
      controller_manager,
      generate_parameter_library,
      geometry_msgs,
      gripper_controllers,
      joint_state_broadcaster,
      joint_trajectory_controller,
      joy,
      launch_param_builder,
      moveit_common,
      moveit_configs_utils,
      moveit_core,
      moveit_msgs,
      moveit_resources_panda_moveit_config,
      moveit_ros_planning,
      moveit_ros_planning_interface,
      pluginlib,
      realtime_tools,
      robot_state_publisher,
      ros_testing,
      sensor_msgs,
      std_msgs,
      std_srvs,
      tf2_eigen,
      tf2_ros,
      trajectory_msgs,
    }:
    buildRosPackage {
      pname = "moveit_servo";
      version = "2.10.0-1";
      src = sources.moveit_servo;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ control_msgs controller_manager generate_parameter_library geometry_msgs gripper_controllers joint_state_broadcaster joint_trajectory_controller joy launch_param_builder moveit_common moveit_configs_utils moveit_core moveit_msgs moveit_ros_planning moveit_ros_planning_interface pluginlib realtime_tools robot_state_publisher sensor_msgs std_msgs std_srvs tf2_eigen tf2_ros trajectory_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_setup_app_plugins = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_index_cpp,
      buildRosPackage,
      moveit_configs_utils,
      moveit_ros_visualization,
      moveit_setup_framework,
      pluginlib,
      rclcpp,
    }:
    buildRosPackage {
      pname = "moveit_setup_app_plugins";
      version = "2.10.0-1";
      src = sources.moveit_setup_app_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp moveit_configs_utils moveit_ros_visualization moveit_setup_framework pluginlib rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_setup_assistant = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_index_cpp,
      buildRosPackage,
      moveit_configs_utils,
      moveit_resources_panda_moveit_config,
      moveit_setup_app_plugins,
      moveit_setup_controllers,
      moveit_setup_core_plugins,
      moveit_setup_framework,
      moveit_setup_srdf_plugins,
      pluginlib,
      qt5,
      rclcpp,
    }:
    buildRosPackage {
      pname = "moveit_setup_assistant";
      version = "2.10.0-1";
      src = sources.moveit_setup_assistant;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp moveit_configs_utils moveit_setup_app_plugins moveit_setup_controllers moveit_setup_core_plugins moveit_setup_framework moveit_setup_srdf_plugins pluginlib qt5.qtbase rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_setup_controllers = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_index_cpp,
      buildRosPackage,
      moveit_configs_utils,
      moveit_resources_fanuc_moveit_config,
      moveit_resources_panda_moveit_config,
      moveit_setup_framework,
      pluginlib,
      rclcpp,
    }:
    buildRosPackage {
      pname = "moveit_setup_controllers";
      version = "2.10.0-1";
      src = sources.moveit_setup_controllers;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp moveit_setup_framework pluginlib rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_setup_core_plugins = self.callPackage (
    {
      ament_cmake,
      ament_index_cpp,
      buildRosPackage,
      moveit_ros_visualization,
      moveit_setup_framework,
      pluginlib,
      rclcpp,
      srdfdom,
      urdf,
    }:
    buildRosPackage {
      pname = "moveit_setup_core_plugins";
      version = "2.10.0-1";
      src = sources.moveit_setup_core_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp moveit_ros_visualization moveit_setup_framework pluginlib rclcpp srdfdom urdf ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_setup_framework = self.callPackage (
    {
      ament_cmake,
      ament_index_cpp,
      buildRosPackage,
      fmt,
      moveit_common,
      moveit_core,
      moveit_ros_planning,
      moveit_ros_visualization,
      pluginlib,
      rclcpp,
      rviz_common,
      rviz_rendering,
      srdfdom,
      urdf,
    }:
    buildRosPackage {
      pname = "moveit_setup_framework";
      version = "2.10.0-1";
      src = sources.moveit_setup_framework;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp fmt moveit_common moveit_core moveit_ros_planning moveit_ros_visualization pluginlib rclcpp rviz_common rviz_rendering srdfdom urdf ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_setup_srdf_plugins = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      buildRosPackage,
      moveit_resources_fanuc_description,
      moveit_setup_framework,
      pluginlib,
    }:
    buildRosPackage {
      pname = "moveit_setup_srdf_plugins";
      version = "2.10.0-1";
      src = sources.moveit_setup_srdf_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ moveit_setup_framework pluginlib ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_simple_controller_manager = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      control_msgs,
      moveit_common,
      moveit_core,
      pluginlib,
      rclcpp,
      rclcpp_action,
    }:
    buildRosPackage {
      pname = "moveit_simple_controller_manager";
      version = "2.10.0-1";
      src = sources.moveit_simple_controller_manager;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ control_msgs moveit_common moveit_core pluginlib rclcpp rclcpp_action ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  moveit_visual_tools = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      graph_msgs,
      moveit_common,
      moveit_core,
      moveit_ros_planning,
      rclcpp,
      rviz_visual_tools,
      std_msgs,
      tf2_eigen,
      tf2_ros,
      trajectory_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "moveit_visual_tools";
      version = "4.1.0-4";
      src = sources.moveit_visual_tools;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs graph_msgs moveit_common moveit_core moveit_ros_planning rclcpp rviz_visual_tools std_msgs tf2_eigen tf2_ros trajectory_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mp2p_icp = self.callPackage (
    {
      buildRosPackage,
      cmake,
      mola_common,
      mrpt2,
    }:
    buildRosPackage {
      pname = "mp2p_icp";
      version = "1.5.1-1";
      src = sources.mp2p_icp;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mola_common mrpt2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mqtt_client = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      fmt,
      mqtt_client_interfaces,
      rclcpp,
      rclcpp_components,
      rcpputils,
      ros_environment,
      std_msgs,
    }:
    buildRosPackage {
      pname = "mqtt_client";
      version = "2.3.0-1";
      src = sources.mqtt_client;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ fmt mqtt_client_interfaces rclcpp rclcpp_components rcpputils std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mqtt_client_interfaces = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "mqtt_client_interfaces";
      version = "2.3.0-1";
      src = sources.mqtt_client_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt2 = self.callPackage (
    {
      ament_cmake,
      assimp,
      buildRosPackage,
      cmake,
      cv_bridge,
      eigen,
      ffmpeg,
      freeglut,
      freenect,
      geometry_msgs,
      glfw3,
      jsoncpp,
      libGL,
      libGLU,
      libjpeg,
      libpcap,
      libusb1,
      nav_msgs,
      opencv,
      pkg-config,
      python3Packages,
      rclcpp,
      ros_environment,
      rosbag2_storage,
      sensor_msgs,
      std_msgs,
      stereo_msgs,
      suitesparse,
      tf2,
      tf2_msgs,
      tinyxml-2,
      udev,
      wxGTK,
      xorg,
      zlib,
    }:
    buildRosPackage {
      pname = "mrpt2";
      version = "2.13.3-2";
      src = sources.mrpt2;
      nativeBuildInputs = [ ament_cmake cmake pkg-config ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ assimp ffmpeg freenect jsoncpp libjpeg libpcap libusb1 python3Packages.pip python3Packages.pybind11 tinyxml-2 udev wxGTK zlib ];
      propagatedBuildInputs = [ cv_bridge eigen freeglut geometry_msgs glfw3 libGL libGLU nav_msgs opencv rclcpp rosbag2_storage sensor_msgs std_msgs stereo_msgs suitesparse tf2 tf2_msgs xorg.libXrandr ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_generic_sensor = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      mrpt_msgs,
      mrpt_sensorlib,
      rclcpp,
      rclcpp_components,
      ros_environment,
      sensor_msgs,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "mrpt_generic_sensor";
      version = "0.2.1-1";
      src = sources.mrpt_generic_sensor;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [ ament_lint_auto ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint_common mrpt_msgs mrpt_sensorlib rclcpp rclcpp_components sensor_msgs tf2 tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_map_server = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      mp2p_icp,
      mrpt2,
      mrpt_msgs,
      mrpt_nav_interfaces,
      nav_msgs,
      rclcpp,
      rclcpp_components,
    }:
    buildRosPackage {
      pname = "mrpt_map_server";
      version = "2.0.0-1";
      src = sources.mrpt_map_server;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_lint_auto ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint_common mp2p_icp mrpt2 mrpt_msgs mrpt_nav_interfaces nav_msgs rclcpp rclcpp_components ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_msgs = self.callPackage (
    {
      ament_cmake,
      ament_cppcheck,
      ament_cpplint,
      ament_lint_auto,
      ament_lint_cmake,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "mrpt_msgs";
      version = "0.4.7-3";
      src = sources.mrpt_msgs;
      nativeBuildInputs = [ ament_cmake ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_msgs_bridge = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      mrpt2,
      mrpt_msgs,
      ros_environment,
      tf2,
    }:
    buildRosPackage {
      pname = "mrpt_msgs_bridge";
      version = "2.0.0-1";
      src = sources.mrpt_msgs_bridge;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [ ament_lint_auto ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint_common geometry_msgs mrpt2 mrpt_msgs tf2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_nav_interfaces = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      mrpt_msgs,
      nav_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "mrpt_nav_interfaces";
      version = "2.0.0-1";
      src = sources.mrpt_nav_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mrpt_msgs nav_msgs rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_navigation = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      mrpt_map_server,
      mrpt_nav_interfaces,
      mrpt_pf_localization,
      mrpt_pointcloud_pipeline,
      mrpt_rawlog,
      mrpt_reactivenav2d,
      mrpt_tutorials,
    }:
    buildRosPackage {
      pname = "mrpt_navigation";
      version = "2.0.0-1";
      src = sources.mrpt_navigation;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_lint_auto ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint_common mrpt_map_server mrpt_nav_interfaces mrpt_pf_localization mrpt_pointcloud_pipeline mrpt_rawlog mrpt_reactivenav2d mrpt_tutorials ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_path_planning = self.callPackage (
    {
      buildRosPackage,
      cmake,
      mrpt2,
      mvsim,
    }:
    buildRosPackage {
      pname = "mrpt_path_planning";
      version = "0.1.3-1";
      src = sources.mrpt_path_planning;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ mrpt2 mvsim ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_pf_localization = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cmake,
      mola_relocalization,
      mp2p_icp,
      mrpt2,
      mrpt_msgs,
      mrpt_msgs_bridge,
      mrpt_tutorials,
      nav_msgs,
      pose_cov_ops,
      sensor_msgs,
      std_msgs,
      tf2,
      tf2_geometry_msgs,
    }:
    buildRosPackage {
      pname = "mrpt_pf_localization";
      version = "2.0.0-1";
      src = sources.mrpt_pf_localization;
      nativeBuildInputs = [ ament_cmake cmake ];
      propagatedNativeBuildInputs = [ ament_lint_auto ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint_common mola_relocalization mp2p_icp mrpt2 mrpt_msgs mrpt_msgs_bridge nav_msgs pose_cov_ops sensor_msgs std_msgs tf2 tf2_geometry_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_pointcloud_pipeline = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      mp2p_icp,
      mrpt2,
      nav_msgs,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      tf2,
      tf2_geometry_msgs,
    }:
    buildRosPackage {
      pname = "mrpt_pointcloud_pipeline";
      version = "2.0.0-1";
      src = sources.mrpt_pointcloud_pipeline;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_lint_auto ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint_common mp2p_icp mrpt2 nav_msgs rclcpp rclcpp_components sensor_msgs tf2 tf2_geometry_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_rawlog = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cmake,
      cv_bridge,
      mrpt2,
      mrpt_msgs,
      nav_msgs,
      rosbag2_cpp,
      sensor_msgs,
      tf2_geometry_msgs,
      tf2_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "mrpt_rawlog";
      version = "2.0.0-1";
      src = sources.mrpt_rawlog;
      nativeBuildInputs = [ ament_cmake cmake ];
      propagatedNativeBuildInputs = [ ament_lint_auto ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint_common cv_bridge mrpt2 mrpt_msgs nav_msgs rosbag2_cpp sensor_msgs tf2_geometry_msgs tf2_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_reactivenav2d = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      mrpt2,
      mrpt_msgs,
      mrpt_nav_interfaces,
      nav_msgs,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "mrpt_reactivenav2d";
      version = "2.0.0-1";
      src = sources.mrpt_reactivenav2d;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_lint_auto ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint_common geometry_msgs mrpt2 mrpt_msgs mrpt_nav_interfaces nav_msgs rclcpp rclcpp_components sensor_msgs tf2 tf2_geometry_msgs tf2_ros visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_sensor_bumblebee_stereo = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      mrpt2,
      mrpt_msgs,
      mrpt_sensorlib,
      rclcpp,
      rclcpp_components,
      ros_environment,
      tf2,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "mrpt_sensor_bumblebee_stereo";
      version = "0.2.1-1";
      src = sources.mrpt_sensor_bumblebee_stereo;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [ ament_lint_auto ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint_common mrpt2 mrpt_msgs mrpt_sensorlib rclcpp rclcpp_components tf2 tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_sensor_gnss_nmea = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      mrpt2,
      mrpt_msgs,
      mrpt_sensorlib,
      nmea_msgs,
      rclcpp,
      rclcpp_components,
      ros_environment,
      tf2,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "mrpt_sensor_gnss_nmea";
      version = "0.2.1-1";
      src = sources.mrpt_sensor_gnss_nmea;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [ ament_lint_auto ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint_common mrpt2 mrpt_msgs mrpt_sensorlib nmea_msgs rclcpp rclcpp_components tf2 tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_sensor_gnss_novatel = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      mrpt2,
      mrpt_msgs,
      mrpt_sensorlib,
      rclcpp,
      rclcpp_components,
      ros_environment,
      tf2,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "mrpt_sensor_gnss_novatel";
      version = "0.2.1-1";
      src = sources.mrpt_sensor_gnss_novatel;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [ ament_lint_auto ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint_common mrpt2 mrpt_msgs mrpt_sensorlib rclcpp rclcpp_components tf2 tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_sensor_imu_taobotics = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      mrpt2,
      mrpt_msgs,
      mrpt_sensorlib,
      rclcpp,
      rclcpp_components,
      ros_environment,
      tf2,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "mrpt_sensor_imu_taobotics";
      version = "0.2.1-1";
      src = sources.mrpt_sensor_imu_taobotics;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [ ament_lint_auto ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint_common mrpt2 mrpt_msgs mrpt_sensorlib rclcpp rclcpp_components tf2 tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_sensorlib = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      mrpt2,
      mrpt_msgs,
      rclcpp,
      rclcpp_components,
      ros_environment,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "mrpt_sensorlib";
      version = "0.2.1-1";
      src = sources.mrpt_sensorlib;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [ ament_lint_auto ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint_common mrpt2 mrpt_msgs rclcpp rclcpp_components tf2 tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_sensors = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      mrpt_generic_sensor,
      mrpt_sensor_bumblebee_stereo,
      mrpt_sensor_gnss_nmea,
      mrpt_sensor_gnss_novatel,
      mrpt_sensor_imu_taobotics,
      mrpt_sensorlib,
    }:
    buildRosPackage {
      pname = "mrpt_sensors";
      version = "0.2.1-1";
      src = sources.mrpt_sensors;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_lint_auto ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint_common mrpt_generic_sensor mrpt_sensor_bumblebee_stereo mrpt_sensor_gnss_nmea mrpt_sensor_gnss_novatel mrpt_sensor_imu_taobotics mrpt_sensorlib ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrpt_tutorials = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cmake,
      mvsim,
      teleop_twist_keyboard,
    }:
    buildRosPackage {
      pname = "mrpt_tutorials";
      version = "2.0.0-1";
      src = sources.mrpt_tutorials;
      nativeBuildInputs = [ ament_cmake cmake ];
      propagatedNativeBuildInputs = [ ament_lint_auto ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_lint_common mvsim teleop_twist_keyboard ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mrt_cmake_modules = self.callPackage (
    {
      ament_cmake_core,
      buildPackages,
      buildRosPackage,
      gtest_vendor,
      lcov,
      python3Packages,
      ros_environment,
    }:
    buildRosPackage {
      pname = "mrt_cmake_modules";
      version = "1.0.9-5";
      src = sources.mrt_cmake_modules;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [ gtest_vendor lcov buildPackages.python3Packages.catkin-pkg buildPackages.python3Packages.pyyaml buildPackages.python3Packages.setuptools ros_environment ];
      buildInputs = [ ament_cmake_core ];
      propagatedBuildInputs = [ gtest_vendor lcov python3Packages.catkin-pkg python3Packages.pyyaml python3Packages.setuptools ros_environment ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  multires_image = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      cv_bridge,
      geometry_msgs,
      gps_msgs,
      mapviz,
      pluginlib,
      qt5,
      rclcpp,
      rclpy,
      swri_math_util,
      swri_transform_util,
      tf2,
    }:
    buildRosPackage {
      pname = "multires_image";
      version = "2.3.0-3";
      src = sources.multires_image;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ cv_bridge geometry_msgs gps_msgs mapviz pluginlib qt5.qtbase rclcpp rclpy swri_math_util swri_transform_util tf2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  mvsim = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_xmllint,
      ament_lint_auto,
      ament_lint_common,
      boost,
      buildRosPackage,
      cmake,
      cppzmq,
      mrpt2,
      nav_msgs,
      protobuf,
      python3,
      python3Packages,
      ros2launch,
      ros_environment,
      sensor_msgs,
      tf2,
      tf2_geometry_msgs,
      unzip,
      visualization_msgs,
      wget,
    }:
    buildRosPackage {
      pname = "mvsim";
      version = "0.9.4-1";
      src = sources.mvsim;
      nativeBuildInputs = [ ament_cmake ament_cmake_gmock ament_cmake_gtest cmake ros_environment ];
      propagatedNativeBuildInputs = [ unzip wget ];
      buildInputs = [ ament_cmake_xmllint ];
      propagatedBuildInputs = [ boost cppzmq mrpt2 nav_msgs protobuf python3 python3Packages.pip python3Packages.protobuf python3Packages.pybind11 ros2launch sensor_msgs tf2 tf2_geometry_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nao_button_sim = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      nao_lola_sensor_msgs,
      python3Packages,
    }:
    buildRosPackage {
      pname = "nao_button_sim";
      version = "1.0.1-1";
      src = sources.nao_button_sim;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ nao_lola_sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nao_command_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "nao_command_msgs";
      version = "1.0.0-3";
      src = sources.nao_command_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nao_lola = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      boost,
      buildRosPackage,
      nao_command_msgs,
      nao_sensor_msgs,
      rclcpp,
    }:
    buildRosPackage {
      pname = "nao_lola";
      version = "1.3.0-2";
      src = sources.nao_lola;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost nao_command_msgs nao_sensor_msgs rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nao_lola_client = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      boost,
      buildRosPackage,
      nao_lola_command_msgs,
      nao_lola_sensor_msgs,
      rcl_interfaces,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "nao_lola_client";
      version = "1.3.0-2";
      src = sources.nao_lola_client;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost nao_lola_command_msgs nao_lola_sensor_msgs rcl_interfaces rclcpp rclcpp_components sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nao_lola_command_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "nao_lola_command_msgs";
      version = "1.3.0-2";
      src = sources.nao_lola_command_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nao_lola_sensor_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "nao_lola_sensor_msgs";
      version = "1.3.0-2";
      src = sources.nao_lola_sensor_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nao_sensor_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "nao_sensor_msgs";
      version = "1.0.0-3";
      src = sources.nao_sensor_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_amcl = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      launch_ros,
      launch_testing,
      message_filters,
      nav2_common,
      nav2_msgs,
      nav2_util,
      nav_msgs,
      pluginlib,
      rclcpp,
      sensor_msgs,
      std_srvs,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "nav2_amcl";
      version = "1.3.1-1";
      src = sources.nav2_amcl;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ launch_testing ];
      buildInputs = [ nav2_common ];
      propagatedBuildInputs = [ geometry_msgs launch_ros message_filters nav2_msgs nav2_util nav_msgs pluginlib rclcpp sensor_msgs std_srvs tf2 tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_behavior_tree = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      behaviortree_cpp,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      lifecycle_msgs,
      nav2_common,
      nav2_msgs,
      nav2_util,
      nav_msgs,
      rclcpp,
      rclcpp_action,
      rclcpp_lifecycle,
      sensor_msgs,
      std_msgs,
      std_srvs,
      test_msgs,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "nav2_behavior_tree";
      version = "1.3.1-1";
      src = sources.nav2_behavior_tree;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ nav2_common ];
      propagatedBuildInputs = [ behaviortree_cpp builtin_interfaces geometry_msgs lifecycle_msgs nav2_msgs nav2_util nav_msgs rclcpp rclcpp_action rclcpp_lifecycle sensor_msgs std_msgs std_srvs tf2 tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_behaviors = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      nav2_behavior_tree,
      nav2_common,
      nav2_core,
      nav2_costmap_2d,
      nav2_msgs,
      nav2_util,
      nav_msgs,
      pluginlib,
      rclcpp,
      rclcpp_action,
      rclcpp_lifecycle,
      tf2,
      tf2_geometry_msgs,
    }:
    buildRosPackage {
      pname = "nav2_behaviors";
      version = "1.3.1-1";
      src = sources.nav2_behaviors;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ nav2_common tf2 tf2_geometry_msgs ];
      propagatedBuildInputs = [ geometry_msgs nav2_behavior_tree nav2_core nav2_costmap_2d nav2_msgs nav2_util nav_msgs pluginlib rclcpp rclcpp_action rclcpp_lifecycle ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_bringup = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      diff_drive_controller,
      joint_state_broadcaster,
      launch,
      launch_ros,
      launch_testing,
      nav2_common,
      nav2_minimal_tb3_sim,
      nav2_minimal_tb4_sim,
      navigation2,
      ros_gz_bridge,
      ros_gz_sim,
      slam_toolbox,
      xacro,
    }:
    buildRosPackage {
      pname = "nav2_bringup";
      version = "1.3.1-1";
      src = sources.nav2_bringup;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ diff_drive_controller joint_state_broadcaster launch_ros nav2_common nav2_minimal_tb3_sim nav2_minimal_tb4_sim navigation2 ros_gz_bridge ros_gz_sim slam_toolbox xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_bt_navigator = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      behaviortree_cpp,
      buildRosPackage,
      geometry_msgs,
      nav2_behavior_tree,
      nav2_common,
      nav2_core,
      nav2_msgs,
      nav2_util,
      nav_msgs,
      pluginlib,
      rclcpp,
      rclcpp_action,
      rclcpp_lifecycle,
      std_msgs,
      std_srvs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "nav2_bt_navigator";
      version = "1.3.1-1";
      src = sources.nav2_bt_navigator;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ nav2_common std_srvs ];
      propagatedBuildInputs = [ behaviortree_cpp geometry_msgs nav2_behavior_tree nav2_core nav2_msgs nav2_util nav_msgs pluginlib rclcpp rclcpp_action rclcpp_lifecycle std_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_collision_monitor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      nav2_common,
      nav2_costmap_2d,
      nav2_msgs,
      nav2_util,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      std_msgs,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "nav2_collision_monitor";
      version = "1.3.1-1";
      src = sources.nav2_collision_monitor;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs nav2_common nav2_costmap_2d nav2_msgs nav2_util rclcpp rclcpp_components sensor_msgs std_msgs tf2 tf2_geometry_msgs tf2_ros visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_common = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_python,
      buildPackages,
      buildRosPackage,
      launch,
      launch_ros,
      osrf_pycommon,
      rclpy,
    }:
    buildRosPackage {
      pname = "nav2_common";
      version = "1.3.1-1";
      src = sources.nav2_common;
      nativeBuildInputs = [ ament_cmake_python ];
      propagatedNativeBuildInputs = [ ament_cmake_core launch osrf_pycommon buildPackages.python3Packages.pyyaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ launch_ros rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_constrained_smoother = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      angles,
      buildRosPackage,
      ceres-solver,
      nav2_common,
      nav2_core,
      nav2_costmap_2d,
      nav2_msgs,
      nav2_util,
      pluginlib,
      rclcpp,
    }:
    buildRosPackage {
      pname = "nav2_constrained_smoother";
      version = "1.3.1-1";
      src = sources.nav2_constrained_smoother;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ angles ceres-solver nav2_common nav2_core nav2_costmap_2d nav2_msgs nav2_util pluginlib rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_controller = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      angles,
      buildRosPackage,
      nav2_common,
      nav2_core,
      nav2_msgs,
      nav2_util,
      nav_2d_msgs,
      nav_2d_utils,
      pluginlib,
      rclcpp,
      rclcpp_action,
      std_msgs,
    }:
    buildRosPackage {
      pname = "nav2_controller";
      version = "1.3.1-1";
      src = sources.nav2_controller;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ nav2_common ];
      propagatedBuildInputs = [ angles nav2_core nav2_msgs nav2_util nav_2d_msgs nav_2d_utils pluginlib rclcpp rclcpp_action std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_core = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      launch,
      launch_testing,
      nav2_behavior_tree,
      nav2_common,
      nav2_costmap_2d,
      nav2_util,
      nav_msgs,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      std_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "nav2_core";
      version = "1.3.1-1";
      src = sources.nav2_core;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ nav2_common ];
      propagatedBuildInputs = [ geometry_msgs nav2_behavior_tree nav2_costmap_2d nav2_util nav_msgs pluginlib rclcpp rclcpp_lifecycle std_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_costmap_2d = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      angles,
      buildRosPackage,
      geometry_msgs,
      laser_geometry,
      launch,
      launch_testing,
      map_msgs,
      message_filters,
      nav2_common,
      nav2_lifecycle_manager,
      nav2_map_server,
      nav2_msgs,
      nav2_util,
      nav2_voxel_grid,
      nav_msgs,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      sensor_msgs,
      std_msgs,
      std_srvs,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
      tf2_sensor_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "nav2_costmap_2d";
      version = "1.3.1-1";
      src = sources.nav2_costmap_2d;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ nav2_common ];
      propagatedBuildInputs = [ angles geometry_msgs laser_geometry map_msgs message_filters nav2_msgs nav2_util nav2_voxel_grid nav_msgs pluginlib rclcpp rclcpp_lifecycle sensor_msgs std_msgs std_srvs tf2 tf2_geometry_msgs tf2_ros tf2_sensor_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_dwb_controller = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      costmap_queue,
      dwb_core,
      dwb_critics,
      dwb_msgs,
      dwb_plugins,
      nav_2d_msgs,
      nav_2d_utils,
    }:
    buildRosPackage {
      pname = "nav2_dwb_controller";
      version = "1.3.1-1";
      src = sources.nav2_dwb_controller;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ costmap_queue dwb_core dwb_critics dwb_msgs dwb_plugins nav_2d_msgs nav_2d_utils ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_graceful_controller = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      angles,
      buildRosPackage,
      geometry_msgs,
      nav2_common,
      nav2_controller,
      nav2_core,
      nav2_costmap_2d,
      nav2_msgs,
      nav2_util,
      nav_2d_utils,
      pluginlib,
      rclcpp,
      tf2,
      tf2_geometry_msgs,
    }:
    buildRosPackage {
      pname = "nav2_graceful_controller";
      version = "1.3.1-1";
      src = sources.nav2_graceful_controller;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ angles geometry_msgs nav2_common nav2_core nav2_costmap_2d nav2_msgs nav2_util nav_2d_utils pluginlib rclcpp tf2 tf2_geometry_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_lifecycle_manager = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      bondcpp,
      buildRosPackage,
      diagnostic_updater,
      geometry_msgs,
      lifecycle_msgs,
      nav2_common,
      nav2_msgs,
      nav2_util,
      rclcpp_action,
      rclcpp_lifecycle,
      std_msgs,
      std_srvs,
      tf2_geometry_msgs,
    }:
    buildRosPackage {
      pname = "nav2_lifecycle_manager";
      version = "1.3.1-1";
      src = sources.nav2_lifecycle_manager;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ nav2_common ];
      propagatedBuildInputs = [ bondcpp diagnostic_updater geometry_msgs lifecycle_msgs nav2_msgs nav2_util rclcpp_action rclcpp_lifecycle std_msgs std_srvs tf2_geometry_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_map_server = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      graphicsmagick,
      launch,
      launch_ros,
      launch_testing,
      nav2_common,
      nav2_msgs,
      nav2_util,
      nav_msgs,
      rclcpp,
      rclcpp_lifecycle,
      std_msgs,
      tf2,
      yaml_cpp_vendor,
    }:
    buildRosPackage {
      pname = "nav2_map_server";
      version = "1.3.1-1";
      src = sources.nav2_map_server;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ launch_testing ];
      buildInputs = [ nav2_common ];
      propagatedBuildInputs = [ graphicsmagick launch_ros nav2_msgs nav2_util nav_msgs rclcpp rclcpp_lifecycle std_msgs tf2 yaml_cpp_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_minimal_tb3_sim = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      robot_state_publisher,
      ros_gz_bridge,
      ros_gz_image,
      ros_gz_interfaces,
      ros_gz_sim,
      xacro,
    }:
    buildRosPackage {
      pname = "nav2_minimal_tb3_sim";
      version = "1.0.1-1";
      src = sources.nav2_minimal_tb3_sim;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ robot_state_publisher ros_gz_bridge ros_gz_image ros_gz_interfaces ros_gz_sim xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_minimal_tb4_description = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      joint_state_publisher,
      robot_state_publisher,
      urdf,
      xacro,
    }:
    buildRosPackage {
      pname = "nav2_minimal_tb4_description";
      version = "1.0.1-1";
      src = sources.nav2_minimal_tb4_description;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ joint_state_publisher robot_state_publisher urdf xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_minimal_tb4_sim = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      nav2_minimal_tb4_description,
      robot_state_publisher,
      ros_gz_bridge,
      ros_gz_image,
      ros_gz_interfaces,
      ros_gz_sim,
      xacro,
    }:
    buildRosPackage {
      pname = "nav2_minimal_tb4_sim";
      version = "1.0.1-1";
      src = sources.nav2_minimal_tb4_sim;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ nav2_minimal_tb4_description robot_state_publisher ros_gz_bridge ros_gz_image ros_gz_interfaces ros_gz_sim xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_mppi_controller = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      gbenchmark,
      geometry_msgs,
      llvmPackages,
      nav2_common,
      nav2_core,
      nav2_costmap_2d,
      nav2_msgs,
      nav2_util,
      pluginlib,
      rclcpp,
      std_msgs,
      tf2,
      tf2_eigen,
      tf2_geometry_msgs,
      tf2_ros,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "nav2_mppi_controller";
      version = "1.3.1-1";
      src = sources.nav2_mppi_controller;
      nativeBuildInputs = [ ament_cmake ament_cmake_ros ];
      propagatedNativeBuildInputs = [ gbenchmark ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs llvmPackages.openmp nav2_common nav2_core nav2_costmap_2d nav2_msgs nav2_util pluginlib rclcpp std_msgs tf2 tf2_eigen tf2_geometry_msgs tf2_ros visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_msgs = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      geographic_msgs,
      geometry_msgs,
      nav2_common,
      nav_msgs,
      rclcpp,
      rosidl_default_generators,
      std_msgs,
    }:
    buildRosPackage {
      pname = "nav2_msgs";
      version = "1.3.1-1";
      src = sources.nav2_msgs;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rosidl_default_generators ];
      buildInputs = [ nav2_common ];
      propagatedBuildInputs = [ action_msgs builtin_interfaces geographic_msgs geometry_msgs nav_msgs rclcpp std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_navfn_planner = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      nav2_common,
      nav2_core,
      nav2_costmap_2d,
      nav2_msgs,
      nav2_util,
      nav_msgs,
      pluginlib,
      rclcpp,
      rclcpp_action,
      rclcpp_lifecycle,
      tf2_ros,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "nav2_navfn_planner";
      version = "1.3.1-1";
      src = sources.nav2_navfn_planner;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs nav2_common nav2_core nav2_costmap_2d nav2_msgs nav2_util nav_msgs pluginlib rclcpp rclcpp_action rclcpp_lifecycle tf2_ros visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_planner = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      nav2_common,
      nav2_core,
      nav2_costmap_2d,
      nav2_msgs,
      nav2_util,
      nav_msgs,
      pluginlib,
      rclcpp,
      rclcpp_action,
      rclcpp_lifecycle,
      tf2_ros,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "nav2_planner";
      version = "1.3.1-1";
      src = sources.nav2_planner;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs nav2_common nav2_core nav2_costmap_2d nav2_msgs nav2_util nav_msgs pluginlib rclcpp rclcpp_action rclcpp_lifecycle tf2_ros visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_regulated_pure_pursuit_controller = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      angles,
      buildRosPackage,
      geometry_msgs,
      nav2_common,
      nav2_core,
      nav2_costmap_2d,
      nav2_msgs,
      nav2_util,
      pluginlib,
      rclcpp,
      tf2,
      tf2_geometry_msgs,
    }:
    buildRosPackage {
      pname = "nav2_regulated_pure_pursuit_controller";
      version = "1.3.1-1";
      src = sources.nav2_regulated_pure_pursuit_controller;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ angles geometry_msgs nav2_common nav2_core nav2_costmap_2d nav2_msgs nav2_util pluginlib rclcpp tf2 tf2_geometry_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_rotation_shim_controller = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      angles,
      buildRosPackage,
      geometry_msgs,
      nav2_common,
      nav2_controller,
      nav2_core,
      nav2_costmap_2d,
      nav2_msgs,
      nav2_regulated_pure_pursuit_controller,
      nav2_util,
      pluginlib,
      rclcpp,
      tf2,
    }:
    buildRosPackage {
      pname = "nav2_rotation_shim_controller";
      version = "1.3.1-1";
      src = sources.nav2_rotation_shim_controller;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ angles geometry_msgs nav2_common nav2_core nav2_costmap_2d nav2_msgs nav2_util pluginlib rclcpp tf2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_rviz_plugins = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      nav2_lifecycle_manager,
      nav2_msgs,
      nav2_util,
      nav_msgs,
      pluginlib,
      qt5,
      rclcpp,
      rclcpp_lifecycle,
      resource_retriever,
      rviz_common,
      rviz_default_plugins,
      rviz_ogre_vendor,
      rviz_rendering,
      std_msgs,
      tf2_geometry_msgs,
      urdf,
      visualization_msgs,
      yaml_cpp_vendor,
    }:
    buildRosPackage {
      pname = "nav2_rviz_plugins";
      version = "1.3.1-1";
      src = sources.nav2_rviz_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ geometry_msgs nav2_lifecycle_manager nav2_msgs nav2_util nav_msgs pluginlib qt5.qtbase rclcpp rclcpp_lifecycle resource_retriever rviz_common rviz_default_plugins rviz_ogre_vendor rviz_rendering std_msgs tf2_geometry_msgs urdf visualization_msgs yaml_cpp_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_simple_commander = self.callPackage (
    {
      action_msgs,
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      geometry_msgs,
      lifecycle_msgs,
      nav2_msgs,
      python3Packages,
      rclpy,
    }:
    buildRosPackage {
      pname = "nav2_simple_commander";
      version = "1.3.1-1";
      src = sources.nav2_simple_commander;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs geometry_msgs lifecycle_msgs nav2_msgs rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_smac_planner = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      angles,
      buildRosPackage,
      builtin_interfaces,
      eigen,
      eigen3_cmake_module,
      geometry_msgs,
      nav2_common,
      nav2_core,
      nav2_costmap_2d,
      nav2_msgs,
      nav2_util,
      nav_msgs,
      nlohmann_json,
      ompl,
      pluginlib,
      rclcpp,
      rclcpp_action,
      rclcpp_lifecycle,
      tf2_ros,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "nav2_smac_planner";
      version = "1.3.1-1";
      src = sources.nav2_smac_planner;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ eigen3_cmake_module ];
      buildInputs = [  ];
      propagatedBuildInputs = [ angles builtin_interfaces eigen geometry_msgs nav2_common nav2_core nav2_costmap_2d nav2_msgs nav2_util nav_msgs nlohmann_json ompl pluginlib rclcpp rclcpp_action rclcpp_lifecycle tf2_ros visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_smoother = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      angles,
      buildRosPackage,
      nav2_common,
      nav2_core,
      nav2_msgs,
      nav2_util,
      nav_2d_msgs,
      nav_2d_utils,
      pluginlib,
      rclcpp,
      rclcpp_action,
      rclcpp_components,
      std_msgs,
    }:
    buildRosPackage {
      pname = "nav2_smoother";
      version = "1.3.1-1";
      src = sources.nav2_smoother;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ nav2_common ];
      propagatedBuildInputs = [ angles nav2_core nav2_msgs nav2_util nav_2d_msgs nav_2d_utils pluginlib rclcpp rclcpp_action rclcpp_components std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_system_tests = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      launch,
      launch_ros,
      launch_testing,
      lcov,
      nav2_amcl,
      nav2_behavior_tree,
      nav2_bringup,
      nav2_common,
      nav2_lifecycle_manager,
      nav2_map_server,
      nav2_minimal_tb3_sim,
      nav2_msgs,
      nav2_navfn_planner,
      nav2_planner,
      nav2_util,
      nav_msgs,
      navigation2,
      python3Packages,
      rclcpp,
      rclpy,
      robot_state_publisher,
      std_msgs,
      tf2_geometry_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "nav2_system_tests";
      version = "1.3.1-1";
      src = sources.nav2_system_tests;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ launch_testing lcov ];
      buildInputs = [ nav2_common ];
      propagatedBuildInputs = [ geometry_msgs launch_ros nav2_amcl nav2_behavior_tree nav2_bringup nav2_lifecycle_manager nav2_map_server nav2_minimal_tb3_sim nav2_msgs nav2_navfn_planner nav2_planner nav2_util nav_msgs navigation2 rclcpp rclpy robot_state_publisher std_msgs tf2_geometry_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_theta_star_planner = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      nav2_common,
      nav2_core,
      nav2_costmap_2d,
      nav2_msgs,
      nav2_util,
      pluginlib,
      rclcpp,
      rclcpp_action,
      rclcpp_lifecycle,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "nav2_theta_star_planner";
      version = "1.3.1-1";
      src = sources.nav2_theta_star_planner;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces nav2_common nav2_core nav2_costmap_2d nav2_msgs nav2_util pluginlib rclcpp rclcpp_action rclcpp_lifecycle tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_util = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      bond,
      bondcpp,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      lifecycle_msgs,
      nav2_common,
      nav2_msgs,
      nav_msgs,
      rcl_interfaces,
      rclcpp,
      rclcpp_action,
      rclcpp_lifecycle,
      std_msgs,
      std_srvs,
      test_msgs,
      tf2,
      tf2_geometry_msgs,
      tf2_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "nav2_util";
      version = "1.3.1-1";
      src = sources.nav2_util;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ bond bondcpp builtin_interfaces geometry_msgs lifecycle_msgs nav2_common nav2_msgs nav_msgs rcl_interfaces rclcpp rclcpp_action rclcpp_lifecycle std_msgs tf2 tf2_geometry_msgs tf2_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_velocity_smoother = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      nav2_common,
      nav2_util,
      rclcpp,
      rclcpp_components,
    }:
    buildRosPackage {
      pname = "nav2_velocity_smoother";
      version = "1.3.1-1";
      src = sources.nav2_velocity_smoother;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ nav2_common ];
      propagatedBuildInputs = [ geometry_msgs nav2_util rclcpp rclcpp_components ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_voxel_grid = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      nav2_common,
      rclcpp,
    }:
    buildRosPackage {
      pname = "nav2_voxel_grid";
      version = "1.3.1-1";
      src = sources.nav2_voxel_grid;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ nav2_common ];
      propagatedBuildInputs = [ rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav2_waypoint_follower = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cv_bridge,
      geographic_msgs,
      image_transport,
      nav2_common,
      nav2_core,
      nav2_msgs,
      nav2_util,
      nav_msgs,
      pluginlib,
      rclcpp,
      rclcpp_action,
      rclcpp_lifecycle,
      robot_localization,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "nav2_waypoint_follower";
      version = "1.3.1-1";
      src = sources.nav2_waypoint_follower;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge geographic_msgs image_transport nav2_common nav2_core nav2_msgs nav2_util nav_msgs pluginlib rclcpp rclcpp_action rclcpp_lifecycle robot_localization tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav_2d_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "nav_2d_msgs";
      version = "1.3.1-1";
      src = sources.nav_2d_msgs;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rosidl_default_generators ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav_2d_utils = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      nav2_common,
      nav2_msgs,
      nav2_util,
      nav_2d_msgs,
      nav_msgs,
      std_msgs,
      tf2,
      tf2_geometry_msgs,
    }:
    buildRosPackage {
      pname = "nav_2d_utils";
      version = "1.3.1-1";
      src = sources.nav_2d_utils;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ nav2_common ];
      propagatedBuildInputs = [ geometry_msgs nav2_msgs nav2_util nav_2d_msgs nav_msgs std_msgs tf2 tf2_geometry_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nav_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "nav_msgs";
      version = "5.3.5-1";
      src = sources.nav_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  navigation2 = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      nav2_amcl,
      nav2_behavior_tree,
      nav2_behaviors,
      nav2_bt_navigator,
      nav2_collision_monitor,
      nav2_constrained_smoother,
      nav2_controller,
      nav2_core,
      nav2_costmap_2d,
      nav2_dwb_controller,
      nav2_graceful_controller,
      nav2_lifecycle_manager,
      nav2_map_server,
      nav2_mppi_controller,
      nav2_msgs,
      nav2_navfn_planner,
      nav2_planner,
      nav2_regulated_pure_pursuit_controller,
      nav2_rotation_shim_controller,
      nav2_rviz_plugins,
      nav2_simple_commander,
      nav2_smac_planner,
      nav2_smoother,
      nav2_theta_star_planner,
      nav2_util,
      nav2_velocity_smoother,
      nav2_voxel_grid,
      nav2_waypoint_follower,
      opennav_docking,
      opennav_docking_bt,
      opennav_docking_core,
    }:
    buildRosPackage {
      pname = "navigation2";
      version = "1.3.1-1";
      src = sources.navigation2;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ nav2_amcl nav2_behavior_tree nav2_behaviors nav2_bt_navigator nav2_collision_monitor nav2_constrained_smoother nav2_controller nav2_core nav2_costmap_2d nav2_dwb_controller nav2_graceful_controller nav2_lifecycle_manager nav2_map_server nav2_mppi_controller nav2_msgs nav2_navfn_planner nav2_planner nav2_regulated_pure_pursuit_controller nav2_rotation_shim_controller nav2_rviz_plugins nav2_simple_commander nav2_smac_planner nav2_smoother nav2_theta_star_planner nav2_util nav2_velocity_smoother nav2_voxel_grid nav2_waypoint_follower opennav_docking opennav_docking_bt opennav_docking_core ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  neo_simulation2 = self.callPackage (
    {
      ament_cmake,
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "neo_simulation2";
      version = "1.0.0-5";
      src = sources.neo_simulation2;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  neobotix_usboard_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "neobotix_usboard_msgs";
      version = "4.0.0-4";
      src = sources.neobotix_usboard_msgs;
      nativeBuildInputs = [ ament_cmake ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  network_bridge = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      boost,
      buildRosPackage,
      launch_testing,
      launch_testing_ament_cmake,
      launch_testing_ros,
      pkg-config,
      pluginlib,
      rclcpp,
      std_msgs,
      zstd,
    }:
    buildRosPackage {
      pname = "network_bridge";
      version = "1.0.2-1";
      src = sources.network_bridge;
      nativeBuildInputs = [ ament_cmake pkg-config ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost pluginlib rclcpp std_msgs zstd ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nlohmann_json_schema_validator_vendor = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      git,
      nlohmann_json,
    }:
    buildRosPackage {
      pname = "nlohmann_json_schema_validator_vendor";
      version = "0.4.1-1";
      src = sources.nlohmann_json_schema_validator_vendor;
      nativeBuildInputs = [ ament_cmake git ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ nlohmann_json ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nmea_hardware_interface = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      boost,
      buildRosPackage,
      controller_interface,
      geographic_msgs,
      gtk3,
      hardware_interface,
      nmea_msgs,
      ouxt_lint_common,
      pkg-config,
      pluginlib,
      quaternion_operation,
      rclcpp,
      rclcpp_components,
      realtime_tools,
      ros2_control,
      rviz2,
    }:
    buildRosPackage {
      pname = "nmea_hardware_interface";
      version = "0.0.1-5";
      src = sources.nmea_hardware_interface;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ pkg-config ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost controller_interface geographic_msgs gtk3 hardware_interface nmea_msgs pluginlib quaternion_operation rclcpp rclcpp_components realtime_tools ros2_control rviz2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nmea_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "nmea_msgs";
      version = "2.1.0-3";
      src = sources.nmea_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nmea_navsat_driver = self.callPackage (
    {
      buildPackages,
      buildRosPackage,
      geometry_msgs,
      nmea_msgs,
      python3Packages,
      rclpy,
      sensor_msgs,
      tf_transformations,
    }:
    buildRosPackage {
      pname = "nmea_navsat_driver";
      version = "2.0.1-3";
      src = sources.nmea_navsat_driver;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs nmea_msgs python3Packages.pyserial rclpy sensor_msgs tf_transformations ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nodl_python = self.callPackage (
    {
      ament_flake8,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      ament_mypy,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "nodl_python";
      version = "0.3.1-5";
      src = sources.nodl_python;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.lxml ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  nodl_to_policy = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_lint_auto,
      ament_mypy,
      ament_pep257,
      ament_pycodestyle,
      buildPackages,
      buildRosPackage,
      nodl_python,
      python3Packages,
      ros2cli,
      ros2nodl,
      ros2run,
      ros_testing,
      sros2,
      test_msgs,
    }:
    buildRosPackage {
      pname = "nodl_to_policy";
      version = "1.0.0-5";
      src = sources.nodl_to_policy;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.argcomplete ];
      buildInputs = [  ];
      propagatedBuildInputs = [ nodl_python python3Packages.lxml ros2cli ros2nodl ros2run sros2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  novatel_gps_driver = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_index_cpp,
      ament_lint_auto,
      boost,
      buildRosPackage,
      diagnostic_msgs,
      diagnostic_updater,
      gps_msgs,
      libpcap,
      nav_msgs,
      novatel_gps_msgs,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      std_msgs,
      swri_math_util,
      swri_roscpp,
      swri_serial_util,
      tf2,
      tf2_geometry_msgs,
    }:
    buildRosPackage {
      pname = "novatel_gps_driver";
      version = "4.1.2-5";
      src = sources.novatel_gps_driver;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost diagnostic_msgs diagnostic_updater gps_msgs libpcap nav_msgs novatel_gps_msgs rclcpp rclcpp_components sensor_msgs std_msgs swri_math_util swri_roscpp swri_serial_util tf2 tf2_geometry_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  novatel_gps_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "novatel_gps_msgs";
      version = "4.1.2-5";
      src = sources.novatel_gps_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ntpd_driver = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      poco,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "ntpd_driver";
      version = "2.2.0-4";
      src = sources.ntpd_driver;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ poco rclcpp rclcpp_components sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ntrip_client = self.callPackage (
    {
      buildRosPackage,
      nmea_msgs,
      rclpy,
      rtcm_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "ntrip_client";
      version = "1.3.0-3";
      src = sources.ntrip_client;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ nmea_msgs rclpy rtcm_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ntrip_client_node = self.callPackage (
    {
      ament_cmake,
      ament_cmake_copyright,
      ament_cmake_cppcheck,
      ament_cmake_uncrustify,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      libcurl_vendor,
      pkg-config,
      rclcpp,
      rclcpp_components,
      rtcm_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "ntrip_client_node";
      version = "0.5.3-2";
      src = sources.ntrip_client_node;
      nativeBuildInputs = [ ament_cmake pkg-config ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ libcurl_vendor rclcpp rclcpp_components rtcm_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  object_recognition_msgs = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      shape_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "object_recognition_msgs";
      version = "2.0.0-5";
      src = sources.object_recognition_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs geometry_msgs rosidl_default_runtime sensor_msgs shape_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  octomap = self.callPackage (
    {
      buildRosPackage,
      cmake,
    }:
    buildRosPackage {
      pname = "octomap";
      version = "1.10.0-4";
      src = sources.octomap;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  octomap_mapping = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      octomap_server,
    }:
    buildRosPackage {
      pname = "octomap_mapping";
      version = "2.3.0-1";
      src = sources.octomap_mapping;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ octomap_server ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  octomap_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "octomap_msgs";
      version = "2.0.0-5";
      src = sources.octomap_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  octomap_ros = self.callPackage (
    {
      ament_cmake_auto,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      octomap_msgs,
      sensor_msgs,
      tf2,
    }:
    buildRosPackage {
      pname = "octomap_ros";
      version = "0.4.4-1";
      src = sources.octomap_ros;
      nativeBuildInputs = [ ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ octomap_msgs sensor_msgs tf2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  octomap_rviz_plugins = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      octomap_msgs,
      qt5,
      rclcpp,
      rviz_common,
      rviz_default_plugins,
      rviz_rendering,
    }:
    buildRosPackage {
      pname = "octomap_rviz_plugins";
      version = "2.1.0-1";
      src = sources.octomap_rviz_plugins;
      nativeBuildInputs = [ ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ octomap_msgs qt5.qtbase rclcpp rviz_common rviz_default_plugins rviz_rendering ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  octomap_server = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      message_filters,
      nav_msgs,
      octomap_msgs,
      octomap_ros,
      pcl,
      pcl_conversions,
      pcl_ros,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      std_msgs,
      std_srvs,
      tf2,
      tf2_eigen,
      tf2_geometry_msgs,
      tf2_ros,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "octomap_server";
      version = "2.3.0-1";
      src = sources.octomap_server;
      nativeBuildInputs = [ ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs message_filters nav_msgs octomap_msgs octomap_ros pcl pcl_conversions pcl_ros rclcpp rclcpp_components sensor_msgs std_msgs std_srvs tf2 tf2_eigen tf2_geometry_msgs tf2_ros visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  octovis = self.callPackage (
    {
      buildRosPackage,
      cmake,
      libGL,
      libGLU,
      libsForQt5,
      octomap,
      qt5,
    }:
    buildRosPackage {
      pname = "octovis";
      version = "1.10.0-4";
      src = sources.octovis;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ libsForQt5.libqglviewer qt5.qtbase ];
      propagatedBuildInputs = [ libGL libGLU libsForQt5.libqglviewer octomap qt5.qtbase ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  odom_to_tf_ros2 = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      nav_msgs,
      rclcpp,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "odom_to_tf_ros2";
      version = "1.0.2-4";
      src = sources.odom_to_tf_ros2;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ nav_msgs rclcpp tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  odri_master_board_sdk = self.callPackage (
    {
      boost,
      buildPackages,
      buildRosPackage,
      cmake,
      git,
      python3,
    }:
    buildRosPackage {
      pname = "odri_master_board_sdk";
      version = "1.0.7-1";
      src = sources.odri_master_board_sdk;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [ git buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost python3 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ompl = self.callPackage (
    {
      boost,
      buildRosPackage,
      cmake,
      eigen,
      flann,
      ode,
      pkg-config,
    }:
    buildRosPackage {
      pname = "ompl";
      version = "1.5.2-2";
      src = sources.ompl;
      nativeBuildInputs = [ cmake pkg-config ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost eigen flann ode ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  openeb_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      boost,
      buildRosPackage,
      cmake,
      curl,
      ffmpeg,
      git,
      glew,
      glfw3,
      gtest,
      hdf5,
      libusb-compat-0_1,
      libusb1,
      opencv,
      openscenegraph,
      pkg-config,
      protobuf,
      unzip,
      wget,
    }:
    buildRosPackage {
      pname = "openeb_vendor";
      version = "2.0.0-1";
      src = sources.openeb_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package cmake curl git pkg-config unzip wget ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost ffmpeg glew glfw3 hdf5 libusb-compat-0_1 libusb1 opencv openscenegraph protobuf ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  opennav_docking = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      angles,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      nav2_graceful_controller,
      nav2_msgs,
      nav2_util,
      nav_msgs,
      opennav_docking_core,
      pluginlib,
      rclcpp,
      rclcpp_action,
      rclcpp_lifecycle,
      sensor_msgs,
      tf2_ros,
      yaml_cpp_vendor,
    }:
    buildRosPackage {
      pname = "opennav_docking";
      version = "1.3.1-1";
      src = sources.opennav_docking;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ angles builtin_interfaces geometry_msgs nav2_graceful_controller nav2_msgs nav2_util nav_msgs opennav_docking_core pluginlib rclcpp rclcpp_action rclcpp_lifecycle sensor_msgs tf2_ros yaml_cpp_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  opennav_docking_bt = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      behaviortree_cpp,
      buildRosPackage,
      geometry_msgs,
      nav2_behavior_tree,
      nav2_core,
      nav2_msgs,
      nav2_util,
      nav_msgs,
      rclcpp,
      rclcpp_action,
    }:
    buildRosPackage {
      pname = "opennav_docking_bt";
      version = "1.3.1-1";
      src = sources.opennav_docking_bt;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ behaviortree_cpp geometry_msgs nav2_behavior_tree nav2_core nav2_msgs nav2_util nav_msgs rclcpp rclcpp_action ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  opennav_docking_core = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      nav2_msgs,
      nav2_util,
      rclcpp,
      rclcpp_lifecycle,
    }:
    buildRosPackage {
      pname = "opennav_docking_core";
      version = "1.3.1-1";
      src = sources.opennav_docking_core;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ nav2_msgs nav2_util rclcpp rclcpp_lifecycle ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  openni2_camera = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      camera_info_manager,
      depth_image_proc,
      image_transport,
      pkg-config,
      rclcpp,
      rclcpp_components,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "openni2_camera";
      version = "2.2.0-2";
      src = sources.openni2_camera;
      nativeBuildInputs = [ ament_cmake pkg-config rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces camera_info_manager depth_image_proc image_transport rclcpp rclcpp_components rosidl_default_runtime sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  openvdb_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      boost,
      buildRosPackage,
      git,
      tbb,
      zlib,
    }:
    buildRosPackage {
      pname = "openvdb_vendor";
      version = "2.5.0-1";
      src = sources.openvdb_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package git ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost tbb zlib ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  orocos_kdl_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      eigen,
      eigen3_cmake_module,
      orocos-kdl,
    }:
    buildRosPackage {
      pname = "orocos_kdl_vendor";
      version = "0.5.1-2";
      src = sources.orocos_kdl_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [ eigen3_cmake_module ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen orocos-kdl ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ortools_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      git,
    }:
    buildRosPackage {
      pname = "ortools_vendor";
      version = "9.9.0-6";
      src = sources.ortools_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package git ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  osqp_vendor = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      git,
      ros_environment,
    }:
    buildRosPackage {
      pname = "osqp_vendor";
      version = "0.2.0-4";
      src = sources.osqp_vendor;
      nativeBuildInputs = [ ament_cmake git ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  osrf_pycommon = self.callPackage (
    {
      buildPackages,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "osrf_pycommon";
      version = "2.1.4-3";
      src = sources.osrf_pycommon;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.importlib-metadata ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.importlib-metadata ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  osrf_testing_tools_cpp = self.callPackage (
    {
      buildRosPackage,
      cmake,
    }:
    buildRosPackage {
      pname = "osrf_testing_tools_cpp";
      version = "2.0.0-3";
      src = sources.osrf_testing_tools_cpp;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ouster_ros = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      curl,
      eigen,
      geometry_msgs,
      gtest,
      jsoncpp,
      launch,
      launch_ros,
      ouster_sensor_msgs,
      pcl,
      pcl_conversions,
      pcl_ros,
      rclcpp,
      rclcpp_components,
      rclcpp_lifecycle,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      spdlog,
      std_msgs,
      std_srvs,
      tf2_eigen,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "ouster_ros";
      version = "0.11.1-6";
      src = sources.ouster_ros;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [ curl launch ];
      buildInputs = [ eigen jsoncpp pcl tf2_eigen ];
      propagatedBuildInputs = [ geometry_msgs jsoncpp launch_ros ouster_sensor_msgs pcl_conversions pcl_ros rclcpp rclcpp_components rclcpp_lifecycle rosidl_default_runtime sensor_msgs spdlog std_msgs std_srvs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ouster_sensor_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "ouster_sensor_msgs";
      version = "0.11.1-6";
      src = sources.ouster_sensor_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ouxt_common = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      ouxt_lint_common,
    }:
    buildRosPackage {
      pname = "ouxt_common";
      version = "0.0.8-5";
      src = sources.ouxt_common;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ouxt_lint_common ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ouxt_lint_common = self.callPackage (
    {
      ament_cmake,
      ament_cmake_clang_format,
      ament_cmake_copyright,
      ament_cmake_pep257,
      ament_cmake_xmllint,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ouxt_lint_common";
      version = "0.0.8-5";
      src = sources.ouxt_lint_common;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_cmake_pep257 ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_clang_format ament_cmake_copyright ament_cmake_xmllint ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pal_statistics = self.callPackage (
    {
      ament_cmake_auto,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      boost,
      buildRosPackage,
      pal_statistics_msgs,
      rclcpp,
      rclcpp_lifecycle,
      rclpy,
    }:
    buildRosPackage {
      pname = "pal_statistics";
      version = "2.2.4-1";
      src = sources.pal_statistics;
      nativeBuildInputs = [ ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost pal_statistics_msgs rclcpp rclcpp_lifecycle rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pal_statistics_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "pal_statistics_msgs";
      version = "2.2.4-1";
      src = sources.pal_statistics_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pangolin = self.callPackage (
    {
      buildRosPackage,
      cmake,
      eigen,
      glew,
      libjpeg_turbo,
      libpng,
      python3,
    }:
    buildRosPackage {
      pname = "pangolin";
      version = "0.9.1-3";
      src = sources.pangolin;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [ python3 ];
      buildInputs = [ eigen ];
      propagatedBuildInputs = [ glew libjpeg_turbo libpng ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  parameter_traits = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      fmt,
      rclcpp,
      rsl,
      tcb_span,
      tl_expected,
    }:
    buildRosPackage {
      pname = "parameter_traits";
      version = "0.3.8-4";
      src = sources.parameter_traits;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ fmt rclcpp rsl tcb_span tl_expected ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pcl_conversions = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      buildRosPackage,
      eigen,
      message_filters,
      pcl,
      pcl_msgs,
      rclcpp,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "pcl_conversions";
      version = "2.6.1-4";
      src = sources.pcl_conversions;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ pcl ];
      propagatedBuildInputs = [ eigen message_filters pcl_msgs rclcpp sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pcl_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "pcl_msgs";
      version = "1.0.0-9";
      src = sources.pcl_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pcl_ros = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      eigen,
      geometry_msgs,
      launch,
      launch_ros,
      launch_testing,
      launch_testing_ros,
      pcl,
      pcl_conversions,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "pcl_ros";
      version = "2.6.1-4";
      src = sources.pcl_ros;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ pcl ];
      propagatedBuildInputs = [ eigen geometry_msgs pcl_conversions rclcpp rclcpp_components sensor_msgs tf2 tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pendulum_control = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      launch,
      launch_testing,
      launch_testing_ament_cmake,
      launch_testing_ros,
      pendulum_msgs,
      rclcpp,
      rmw_implementation_cmake,
      ros2run,
      rttest,
      tlsf_cpp,
    }:
    buildRosPackage {
      pname = "pendulum_control";
      version = "0.33.4-1";
      src = sources.pendulum_control;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ pendulum_msgs rclcpp rttest tlsf_cpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pendulum_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "pendulum_msgs";
      version = "0.33.4-1";
      src = sources.pendulum_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  perception = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      image_common,
      image_pipeline,
      image_transport_plugins,
      laser_filters,
      laser_geometry,
      perception_pcl,
      ros_base,
      vision_opencv,
    }:
    buildRosPackage {
      pname = "perception";
      version = "0.11.0-1";
      src = sources.perception;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ image_common image_pipeline image_transport_plugins laser_filters laser_geometry perception_pcl ros_base vision_opencv ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  perception_pcl = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      pcl_conversions,
      pcl_msgs,
      pcl_ros,
    }:
    buildRosPackage {
      pname = "perception_pcl";
      version = "2.6.1-4";
      src = sources.perception_pcl;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ pcl_conversions pcl_msgs pcl_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  performance_test = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      git,
      rclcpp,
      rmw_implementation,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "performance_test";
      version = "2.0.0-2";
      src = sources.performance_test;
      nativeBuildInputs = [ ament_cmake git ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rmw_implementation rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  performance_test_fixture = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_export_dependencies,
      ament_cmake_export_targets,
      ament_cmake_google_benchmark,
      ament_cmake_test,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      google_benchmark_vendor,
      osrf_testing_tools_cpp,
    }:
    buildRosPackage {
      pname = "performance_test_fixture";
      version = "0.2.0-3";
      src = sources.performance_test_fixture;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_export_dependencies ament_cmake_export_targets ament_cmake_test ];
      propagatedNativeBuildInputs = [ ament_cmake_google_benchmark google_benchmark_vendor ];
      buildInputs = [  ];
      propagatedBuildInputs = [ osrf_testing_tools_cpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  phidgets_accelerometer = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      launch,
      phidgets_api,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "phidgets_accelerometer";
      version = "2.3.3-2";
      src = sources.phidgets_accelerometer;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ phidgets_api rclcpp rclcpp_components sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  phidgets_analog_inputs = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      launch,
      phidgets_api,
      rclcpp,
      rclcpp_components,
      std_msgs,
    }:
    buildRosPackage {
      pname = "phidgets_analog_inputs";
      version = "2.3.3-2";
      src = sources.phidgets_analog_inputs;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ phidgets_api rclcpp rclcpp_components std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  phidgets_analog_outputs = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      phidgets_api,
      phidgets_msgs,
      rclcpp,
      rclcpp_components,
      std_msgs,
    }:
    buildRosPackage {
      pname = "phidgets_analog_outputs";
      version = "2.3.3-2";
      src = sources.phidgets_analog_outputs;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ phidgets_api phidgets_msgs rclcpp rclcpp_components std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  phidgets_api = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      libphidget22,
    }:
    buildRosPackage {
      pname = "phidgets_api";
      version = "2.3.3-2";
      src = sources.phidgets_api;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ libphidget22 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  phidgets_digital_inputs = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      launch,
      phidgets_api,
      rclcpp,
      rclcpp_components,
      std_msgs,
    }:
    buildRosPackage {
      pname = "phidgets_digital_inputs";
      version = "2.3.3-2";
      src = sources.phidgets_digital_inputs;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ phidgets_api rclcpp rclcpp_components std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  phidgets_digital_outputs = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      launch,
      phidgets_api,
      phidgets_msgs,
      rclcpp,
      rclcpp_components,
      std_msgs,
    }:
    buildRosPackage {
      pname = "phidgets_digital_outputs";
      version = "2.3.3-2";
      src = sources.phidgets_digital_outputs;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ phidgets_api phidgets_msgs rclcpp rclcpp_components std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  phidgets_drivers = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      libphidget22,
      phidgets_accelerometer,
      phidgets_analog_inputs,
      phidgets_api,
      phidgets_digital_inputs,
      phidgets_digital_outputs,
      phidgets_gyroscope,
      phidgets_high_speed_encoder,
      phidgets_ik,
      phidgets_magnetometer,
      phidgets_motors,
      phidgets_msgs,
      phidgets_spatial,
      phidgets_temperature,
    }:
    buildRosPackage {
      pname = "phidgets_drivers";
      version = "2.3.3-2";
      src = sources.phidgets_drivers;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ libphidget22 phidgets_accelerometer phidgets_analog_inputs phidgets_api phidgets_digital_inputs phidgets_digital_outputs phidgets_gyroscope phidgets_high_speed_encoder phidgets_ik phidgets_magnetometer phidgets_motors phidgets_msgs phidgets_spatial phidgets_temperature ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  phidgets_gyroscope = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      launch,
      phidgets_api,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      std_msgs,
      std_srvs,
    }:
    buildRosPackage {
      pname = "phidgets_gyroscope";
      version = "2.3.3-2";
      src = sources.phidgets_gyroscope;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ phidgets_api rclcpp rclcpp_components sensor_msgs std_msgs std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  phidgets_high_speed_encoder = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      launch,
      phidgets_api,
      phidgets_msgs,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "phidgets_high_speed_encoder";
      version = "2.3.3-2";
      src = sources.phidgets_high_speed_encoder;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ phidgets_api phidgets_msgs rclcpp rclcpp_components sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  phidgets_ik = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      launch,
      phidgets_analog_inputs,
      phidgets_digital_inputs,
      phidgets_digital_outputs,
    }:
    buildRosPackage {
      pname = "phidgets_ik";
      version = "2.3.3-2";
      src = sources.phidgets_ik;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ phidgets_analog_inputs phidgets_digital_inputs phidgets_digital_outputs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  phidgets_magnetometer = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      launch,
      phidgets_api,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "phidgets_magnetometer";
      version = "2.3.3-2";
      src = sources.phidgets_magnetometer;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ phidgets_api rclcpp rclcpp_components sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  phidgets_motors = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      launch,
      phidgets_api,
      phidgets_msgs,
      rclcpp,
      rclcpp_components,
      std_msgs,
    }:
    buildRosPackage {
      pname = "phidgets_motors";
      version = "2.3.3-2";
      src = sources.phidgets_motors;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ phidgets_api phidgets_msgs rclcpp rclcpp_components std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  phidgets_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "phidgets_msgs";
      version = "2.3.3-2";
      src = sources.phidgets_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  phidgets_spatial = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      launch,
      phidgets_api,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      std_msgs,
      std_srvs,
    }:
    buildRosPackage {
      pname = "phidgets_spatial";
      version = "2.3.3-2";
      src = sources.phidgets_spatial;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ phidgets_api rclcpp rclcpp_components sensor_msgs std_msgs std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  phidgets_temperature = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      launch,
      phidgets_api,
      rclcpp,
      rclcpp_components,
      std_msgs,
    }:
    buildRosPackage {
      pname = "phidgets_temperature";
      version = "2.3.3-2";
      src = sources.phidgets_temperature;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ phidgets_api rclcpp rclcpp_components std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pick_ik = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      fmt,
      generate_parameter_library,
      moveit_core,
      moveit_resources_panda_moveit_config,
      pluginlib,
      rclcpp,
      rsl,
      tf2_geometry_msgs,
      tf2_kdl,
      tl_expected,
    }:
    buildRosPackage {
      pname = "pick_ik";
      version = "1.1.0-4";
      src = sources.pick_ik;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ fmt generate_parameter_library moveit_core pluginlib rclcpp rsl tf2_geometry_msgs tf2_kdl tl_expected ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  picknik_ament_copyright = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "picknik_ament_copyright";
      version = "0.0.2-5";
      src = sources.picknik_ament_copyright;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_copyright ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  picknik_reset_fault_controller = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      controller_interface,
      example_interfaces,
      geometry_msgs,
      rclcpp,
      realtime_tools,
    }:
    buildRosPackage {
      pname = "picknik_reset_fault_controller";
      version = "0.0.3-3";
      src = sources.picknik_reset_fault_controller;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ controller_interface example_interfaces geometry_msgs rclcpp realtime_tools ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  picknik_twist_controller = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      controller_interface,
      example_interfaces,
      geometry_msgs,
      rclcpp,
      realtime_tools,
    }:
    buildRosPackage {
      pname = "picknik_twist_controller";
      version = "0.0.3-3";
      src = sources.picknik_twist_controller;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ controller_interface example_interfaces geometry_msgs rclcpp realtime_tools ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pid_controller = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      angles,
      backward_ros,
      buildRosPackage,
      control_msgs,
      control_toolbox,
      controller_interface,
      controller_manager,
      generate_parameter_library,
      hardware_interface,
      hardware_interface_testing,
      parameter_traits,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      realtime_tools,
      ros2_control_test_assets,
      std_srvs,
    }:
    buildRosPackage {
      pname = "pid_controller";
      version = "4.11.0-1";
      src = sources.pid_controller;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ generate_parameter_library ];
      propagatedBuildInputs = [ angles backward_ros control_msgs control_toolbox controller_interface hardware_interface parameter_traits pluginlib rclcpp rclcpp_lifecycle realtime_tools std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pilz_industrial_motion_planner = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_cmake_gtest,
      boost,
      buildRosPackage,
      eigen3_cmake_module,
      generate_parameter_library,
      geometry_msgs,
      launch_param_builder,
      moveit_common,
      moveit_configs_utils,
      moveit_core,
      moveit_msgs,
      moveit_resources_panda_moveit_config,
      moveit_resources_prbt_moveit_config,
      moveit_resources_prbt_pg70_support,
      moveit_resources_prbt_support,
      moveit_ros_move_group,
      moveit_ros_planning,
      orocos_kdl_vendor,
      pilz_industrial_motion_planner_testutils,
      pluginlib,
      rclcpp,
      ros_testing,
      tf2,
      tf2_eigen,
      tf2_eigen_kdl,
      tf2_geometry_msgs,
      tf2_kdl,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "pilz_industrial_motion_planner";
      version = "2.10.0-1";
      src = sources.pilz_industrial_motion_planner;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ eigen3_cmake_module ];
      buildInputs = [  ];
      propagatedBuildInputs = [ generate_parameter_library geometry_msgs moveit_common moveit_core moveit_msgs moveit_ros_move_group moveit_ros_planning orocos_kdl_vendor pluginlib rclcpp tf2 tf2_eigen tf2_eigen_kdl tf2_geometry_msgs tf2_kdl tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pilz_industrial_motion_planner_testutils = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      eigen3_cmake_module,
      moveit_common,
      moveit_core,
      moveit_msgs,
      rclcpp,
      tf2_eigen,
    }:
    buildRosPackage {
      pname = "pilz_industrial_motion_planner_testutils";
      version = "2.10.0-1";
      src = sources.pilz_industrial_motion_planner_testutils;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ eigen3_cmake_module ];
      buildInputs = [ tf2_eigen ];
      propagatedBuildInputs = [ moveit_common moveit_core moveit_msgs rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pinocchio = self.callPackage (
    {
      boost,
      buildPackages,
      buildRosPackage,
      clang,
      cmake,
      doxygen,
      eigen,
      eigenpy,
      git,
      hpp-fcl,
      python3,
      urdfdom,
    }:
    buildRosPackage {
      pname = "pinocchio";
      version = "2.6.21-3";
      src = sources.pinocchio;
      nativeBuildInputs = [ clang cmake doxygen git ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost eigen eigenpy hpp-fcl python3 urdfdom ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  plotjuggler = self.callPackage (
    {
      ament_cmake,
      ament_index_cpp,
      binutils,
      boost,
      buildRosPackage,
      cppzmq,
      fastcdr,
      lz4,
      protobuf,
      qt5,
      rclcpp,
      zstd,
    }:
    buildRosPackage {
      pname = "plotjuggler";
      version = "3.9.2-1";
      src = sources.plotjuggler;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp binutils boost cppzmq fastcdr lz4 protobuf qt5.qtbase qt5.qtsvg qt5.qtwebsockets qt5.qtx11extras rclcpp zstd ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  plotjuggler_msgs = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "plotjuggler_msgs";
      version = "0.2.3-5";
      src = sources.plotjuggler_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  plotjuggler_ros = self.callPackage (
    {
      ament_cmake,
      binutils,
      boost,
      buildRosPackage,
      plotjuggler,
      qt5,
      rclcpp,
      rcpputils,
      ros_environment,
      rosbag2,
      rosbag2_transport,
      tf2_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "plotjuggler_ros";
      version = "2.1.2-2";
      src = sources.plotjuggler_ros;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ binutils boost plotjuggler qt5.qtbase qt5.qtsvg qt5.qtwebsockets rclcpp rcpputils rosbag2 rosbag2_transport tf2_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pluginlib = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_index_cpp,
      buildRosPackage,
      class_loader,
      rcpputils,
      rcutils,
      tinyxml2_vendor,
    }:
    buildRosPackage {
      pname = "pluginlib";
      version = "5.4.2-2";
      src = sources.pluginlib;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp class_loader rcpputils tinyxml2_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  point_cloud_interfaces = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "point_cloud_interfaces";
      version = "4.0.0-1";
      src = sources.point_cloud_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  point_cloud_msg_wrapper = self.callPackage (
    {
      ament_cmake,
      ament_cmake_auto,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "point_cloud_msg_wrapper";
      version = "1.0.7-5";
      src = sources.point_cloud_msg_wrapper;
      nativeBuildInputs = [ ament_cmake ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  point_cloud_transport = self.callPackage (
    {
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      message_filters,
      pluginlib,
      rclcpp,
      rclcpp_components,
      rcpputils,
      rmw,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "point_cloud_transport";
      version = "4.0.2-1";
      src = sources.point_cloud_transport;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ message_filters pluginlib rclcpp rclcpp_components rcpputils sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  point_cloud_transport_plugins = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      draco_point_cloud_transport,
      point_cloud_interfaces,
      zlib_point_cloud_transport,
      zstd_point_cloud_transport,
    }:
    buildRosPackage {
      pname = "point_cloud_transport_plugins";
      version = "4.0.0-1";
      src = sources.point_cloud_transport_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ draco_point_cloud_transport point_cloud_interfaces zlib_point_cloud_transport zstd_point_cloud_transport ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  point_cloud_transport_py = self.callPackage (
    {
      ament_cmake_python,
      ament_cmake_ros,
      buildRosPackage,
      pluginlib,
      point_cloud_transport,
      pybind11_vendor,
      python_cmake_module,
      rclcpp,
      rpyutils,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "point_cloud_transport_py";
      version = "4.0.2-1";
      src = sources.point_cloud_transport_py;
      nativeBuildInputs = [ ament_cmake_python ament_cmake_ros python_cmake_module ];
      propagatedNativeBuildInputs = [ rpyutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ pluginlib point_cloud_transport pybind11_vendor rclcpp sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  point_cloud_transport_tutorial = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_lint_cmake,
      ament_cmake_ros,
      ament_cmake_uncrustify,
      ament_cmake_xmllint,
      buildRosPackage,
      point_cloud_transport,
      point_cloud_transport_plugins,
      rclcpp,
      rcpputils,
      rosbag2_cpp,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "point_cloud_transport_tutorial";
      version = "0.0.2-2";
      src = sources.point_cloud_transport_tutorial;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ point_cloud_transport point_cloud_transport_plugins rclcpp rcpputils rosbag2_cpp sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pointcloud_to_laserscan = self.callPackage (
    {
      ament_cmake,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_flake8,
      ament_cmake_lint_cmake,
      ament_cmake_pep257,
      ament_cmake_uncrustify,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      laser_geometry,
      launch,
      launch_ros,
      message_filters,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      tf2,
      tf2_ros,
      tf2_sensor_msgs,
    }:
    buildRosPackage {
      pname = "pointcloud_to_laserscan";
      version = "2.0.2-3";
      src = sources.pointcloud_to_laserscan;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ laser_geometry launch_ros message_filters rclcpp rclcpp_components sensor_msgs tf2 tf2_ros tf2_sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  polygon_demos = self.callPackage (
    {
      ament_cmake,
      angles,
      buildRosPackage,
      color_util,
      geometry_msgs,
      polygon_msgs,
      polygon_rviz_plugins,
      polygon_utils,
      rclcpp,
      rviz2,
      rviz_common,
      rviz_default_plugins,
    }:
    buildRosPackage {
      pname = "polygon_demos";
      version = "1.0.2-3";
      src = sources.polygon_demos;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ angles color_util geometry_msgs polygon_msgs polygon_rviz_plugins polygon_utils rclcpp rviz2 rviz_common rviz_default_plugins ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  polygon_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "polygon_msgs";
      version = "1.0.2-3";
      src = sources.polygon_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  polygon_rviz_plugins = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      color_util,
      geometry_msgs,
      pluginlib,
      polygon_msgs,
      polygon_utils,
      rviz_common,
      std_msgs,
    }:
    buildRosPackage {
      pname = "polygon_rviz_plugins";
      version = "1.0.2-3";
      src = sources.polygon_rviz_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ color_util geometry_msgs pluginlib polygon_msgs polygon_utils rviz_common std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  polygon_utils = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      geometry_msgs,
      polygon_msgs,
    }:
    buildRosPackage {
      pname = "polygon_utils";
      version = "1.0.2-3";
      src = sources.polygon_utils;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs polygon_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pose_cov_ops = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_xmllint,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cmake,
      geometry_msgs,
      gtest,
      mrpt2,
      ros_environment,
      tf2,
    }:
    buildRosPackage {
      pname = "pose_cov_ops";
      version = "0.3.11-3";
      src = sources.pose_cov_ops;
      nativeBuildInputs = [ ament_cmake ament_cmake_gmock ament_cmake_gtest cmake ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ament_cmake_xmllint ];
      propagatedBuildInputs = [ geometry_msgs mrpt2 tf2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  position_controllers = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      backward_ros,
      buildRosPackage,
      controller_manager,
      forward_command_controller,
      hardware_interface,
      hardware_interface_testing,
      pluginlib,
      rclcpp,
      ros2_control_test_assets,
    }:
    buildRosPackage {
      pname = "position_controllers";
      version = "4.11.0-1";
      src = sources.position_controllers;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ backward_ros forward_command_controller pluginlib rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  proxsuite = self.callPackage (
    {
      buildPackages,
      buildRosPackage,
      cmake,
      doxygen,
      eigen,
      git,
      matio,
      python3Packages,
    }:
    buildRosPackage {
      pname = "proxsuite";
      version = "0.6.5-1";
      src = sources.proxsuite;
      nativeBuildInputs = [ cmake doxygen git ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen python3Packages.scipy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  py_binding_tools = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      pybind11_vendor,
      rclcpp,
      rclpy,
      std_msgs,
    }:
    buildRosPackage {
      pname = "py_binding_tools";
      version = "2.0.1-1";
      src = sources.py_binding_tools;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs pybind11_vendor rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  py_trees = self.callPackage (
    {
      buildPackages,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "py_trees";
      version = "2.2.1-4";
      src = sources.py_trees;
      nativeBuildInputs = [ buildPackages.python3Packages.setuptools ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.pydot ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  py_trees_js = self.callPackage (
    {
      buildPackages,
      buildRosPackage,
      python3Packages,
      qt5,
    }:
    buildRosPackage {
      pname = "py_trees_js";
      version = "0.6.4-1";
      src = sources.py_trees_js;
      nativeBuildInputs = [ buildPackages.python3Packages.setuptools ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ qt5.qttools.dev ];
      propagatedBuildInputs = [ python3Packages.pyqt5 python3Packages.pyqtwebengine ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  py_trees_ros = self.callPackage (
    {
      buildPackages,
      buildRosPackage,
      geometry_msgs,
      py_trees,
      py_trees_ros_interfaces,
      python3Packages,
      rcl_interfaces,
      rclpy,
      ros2topic,
      sensor_msgs,
      std_msgs,
      tf2_ros_py,
      unique_identifier_msgs,
    }:
    buildRosPackage {
      pname = "py_trees_ros";
      version = "2.2.2-4";
      src = sources.py_trees_ros;
      nativeBuildInputs = [ buildPackages.python3Packages.setuptools ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs py_trees py_trees_ros_interfaces rcl_interfaces rclpy ros2topic sensor_msgs std_msgs tf2_ros_py unique_identifier_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  py_trees_ros_interfaces = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      diagnostic_msgs,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      unique_identifier_msgs,
    }:
    buildRosPackage {
      pname = "py_trees_ros_interfaces";
      version = "2.1.0-4";
      src = sources.py_trees_ros_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs diagnostic_msgs geometry_msgs rosidl_default_runtime unique_identifier_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pybind11_json_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      buildRosPackage,
      nlohmann_json,
      pybind11_vendor,
    }:
    buildRosPackage {
      pname = "pybind11_json_vendor";
      version = "0.4.2-1";
      src = sources.pybind11_json_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ nlohmann_json pybind11_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  pybind11_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "pybind11_vendor";
      version = "3.1.2-2";
      src = sources.pybind11_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.pybind11 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  python_cmake_module = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      python3,
    }:
    buildRosPackage {
      pname = "python_cmake_module";
      version = "0.11.1-2";
      src = sources.python_cmake_module;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ python3 ];
      buildInputs = [ ament_cmake ];
      propagatedBuildInputs = [ python3 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  python_orocos_kdl_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      orocos_kdl_vendor,
      pybind11_vendor,
      python3Packages,
      python_cmake_module,
    }:
    buildRosPackage {
      pname = "python_orocos_kdl_vendor";
      version = "0.5.1-2";
      src = sources.python_orocos_kdl_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_python python_cmake_module ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ orocos_kdl_vendor pybind11_vendor python3Packages.pykdl ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  python_qt_binding = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      python3Packages,
      qt5,
    }:
    buildRosPackage {
      pname = "python_qt_binding";
      version = "2.2.1-1";
      src = sources.python_qt_binding;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ python3Packages.pyqt5 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  qpoases_vendor = self.callPackage (
    {
      ament_cmake_auto,
      buildRosPackage,
      subversion,
    }:
    buildRosPackage {
      pname = "qpoases_vendor";
      version = "3.2.3-5";
      src = sources.qpoases_vendor;
      nativeBuildInputs = [ ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ subversion ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  qt_dotgraph = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      python3Packages,
      python_qt_binding,
    }:
    buildRosPackage {
      pname = "qt_dotgraph";
      version = "2.7.4-2";
      src = sources.qt_dotgraph;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.pydot python_qt_binding ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  qt_gui = self.callPackage (
    {
      ament_cmake,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildPackages,
      buildRosPackage,
      python3Packages,
      python_qt_binding,
      qt5,
      tango_icons_vendor,
    }:
    buildRosPackage {
      pname = "qt_gui";
      version = "2.7.4-2";
      src = sources.qt_gui;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_index_python buildPackages.python3Packages.catkin-pkg ];
      buildInputs = [ python3Packages.pyqt5 qt5.qtbase ];
      propagatedBuildInputs = [ python_qt_binding tango_icons_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  qt_gui_app = self.callPackage (
    {
      ament_cmake,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      qt_gui,
    }:
    buildRosPackage {
      pname = "qt_gui_app";
      version = "2.7.4-2";
      src = sources.qt_gui_app;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [  ];
      propagatedBuildInputs = [ qt_gui ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  qt_gui_core = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "qt_gui_core";
      version = "2.7.4-2";
      src = sources.qt_gui_core;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  qt_gui_cpp = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      buildRosPackage,
      pkg-config,
      pluginlib,
      python_qt_binding,
      qt5,
      qt_gui,
      tinyxml2_vendor,
    }:
    buildRosPackage {
      pname = "qt_gui_cpp";
      version = "2.7.4-2";
      src = sources.qt_gui_cpp;
      nativeBuildInputs = [ ament_cmake pkg-config ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ python_qt_binding qt5.qtbase ];
      propagatedBuildInputs = [ pluginlib qt_gui tinyxml2_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  qt_gui_py_common = self.callPackage (
    {
      ament_cmake,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      python_qt_binding,
    }:
    buildRosPackage {
      pname = "qt_gui_py_common";
      version = "2.7.4-2";
      src = sources.qt_gui_py_common;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python_qt_binding ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  quality_of_service_demo_cpp = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      example_interfaces,
      launch,
      launch_ros,
      launch_testing,
      rclcpp,
      rclcpp_components,
      rcutils,
      rmw,
      rmw_implementation_cmake,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "quality_of_service_demo_cpp";
      version = "0.33.4-1";
      src = sources.quality_of_service_demo_cpp;
      nativeBuildInputs = [ ament_cmake rmw_implementation_cmake ];
      propagatedNativeBuildInputs = [ rcutils rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ example_interfaces launch_ros rclcpp rclcpp_components sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  quality_of_service_demo_py = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
      rclpy,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "quality_of_service_demo_py";
      version = "0.33.4-1";
      src = sources.quality_of_service_demo_py;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  quaternion_operation = self.callPackage (
    {
      ament_cmake,
      ament_cmake_auto,
      ament_cmake_gtest,
      buildRosPackage,
      eigen,
      geometry_msgs,
      ouxt_lint_common,
      rclcpp,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "quaternion_operation";
      version = "0.0.7-5";
      src = sources.quaternion_operation;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_cmake_auto ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen geometry_msgs rclcpp tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  r2r_spl_7 = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
      rclpy,
      splsm_7_conversion,
    }:
    buildRosPackage {
      pname = "r2r_spl_7";
      version = "3.0.1-4";
      src = sources.r2r_spl_7;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy splsm_7_conversion ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  radar_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      std_msgs,
      unique_identifier_msgs,
    }:
    buildRosPackage {
      pname = "radar_msgs";
      version = "0.2.2-4";
      src = sources.radar_msgs;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rosidl_default_generators ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs std_msgs unique_identifier_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  random_numbers = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_cmake,
      boost,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "random_numbers";
      version = "2.0.1-5";
      src = sources.random_numbers;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ boost ];
      propagatedBuildInputs = [ boost ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  range_sensor_broadcaster = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      backward_ros,
      buildRosPackage,
      controller_interface,
      controller_manager,
      generate_parameter_library,
      hardware_interface,
      hardware_interface_testing,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      realtime_tools,
      ros2_control_test_assets,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "range_sensor_broadcaster";
      version = "4.11.0-1";
      src = sources.range_sensor_broadcaster;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ backward_ros controller_interface generate_parameter_library hardware_interface pluginlib rclcpp rclcpp_lifecycle realtime_tools sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rc_common_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "rc_common_msgs";
      version = "0.5.3-6";
      src = sources.rc_common_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rc_dynamics_api = self.callPackage (
    {
      buildRosPackage,
      cmake,
      curl,
      protobuf,
    }:
    buildRosPackage {
      pname = "rc_dynamics_api";
      version = "0.10.5-2";
      src = sources.rc_dynamics_api;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [ curl ];
      buildInputs = [ protobuf ];
      propagatedBuildInputs = [ protobuf ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rc_genicam_api = self.callPackage (
    {
      buildRosPackage,
      cmake,
      libpng,
      libusb1,
      ncurses,
    }:
    buildRosPackage {
      pname = "rc_genicam_api";
      version = "2.6.5-2";
      src = sources.rc_genicam_api;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ libpng libusb1 ncurses ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rc_genicam_driver = self.callPackage (
    {
      ament_cmake,
      ament_cmake_cppcheck,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      diagnostic_updater,
      image_transport,
      rc_common_msgs,
      rc_genicam_api,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      stereo_msgs,
    }:
    buildRosPackage {
      pname = "rc_genicam_driver";
      version = "0.3.1-1";
      src = sources.rc_genicam_driver;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ diagnostic_updater image_transport rc_common_msgs rc_genicam_api rclcpp rclcpp_components sensor_msgs stereo_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rc_reason_clients = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      geometry_msgs,
      python3Packages,
      rc_reason_msgs,
      rclpy,
      ros2pkg,
      tf2_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "rc_reason_clients";
      version = "0.3.1-3";
      src = sources.rc_reason_clients;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs python3Packages.requests rc_reason_msgs rclpy ros2pkg tf2_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rc_reason_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      rc_common_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      shape_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "rc_reason_msgs";
      version = "0.3.1-3";
      src = sources.rc_reason_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rc_common_msgs rosidl_default_runtime shape_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcdiscover = self.callPackage (
    {
      buildRosPackage,
      cmake,
    }:
    buildRosPackage {
      pname = "rcdiscover";
      version = "1.1.7-2";
      src = sources.rcdiscover;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcgcd_spl_14 = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rcgcd_spl_14";
      version = "4.0.1-1";
      src = sources.rcgcd_spl_14;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcgcd_spl_14_conversion = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
      rcgcd_spl_14,
    }:
    buildRosPackage {
      pname = "rcgcd_spl_14_conversion";
      version = "4.0.1-1";
      src = sources.rcgcd_spl_14_conversion;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.construct rcgcd_spl_14 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcgcrd_spl_4 = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rcgcrd_spl_4";
      version = "4.0.1-1";
      src = sources.rcgcrd_spl_4;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcgcrd_spl_4_conversion = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
      rcgcrd_spl_4,
    }:
    buildRosPackage {
      pname = "rcgcrd_spl_4_conversion";
      version = "4.0.1-1";
      src = sources.rcgcrd_spl_4_conversion;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.construct rcgcrd_spl_4 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcl = self.callPackage (
    {
      ament_cmake_gen_version_h,
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      launch,
      launch_testing,
      launch_testing_ament_cmake,
      libyaml,
      libyaml_vendor,
      mimick_vendor,
      osrf_testing_tools_cpp,
      rcl_interfaces,
      rcl_logging_interface,
      rcl_logging_noop,
      rcl_logging_spdlog,
      rcl_yaml_param_parser,
      rcutils,
      rmw,
      rmw_implementation,
      rmw_implementation_cmake,
      rosidl_runtime_c,
      rosidl_runtime_cpp,
      service_msgs,
      test_msgs,
      tracetools,
      type_description_interfaces,
    }:
    buildRosPackage {
      pname = "rcl";
      version = "9.2.3-1";
      src = sources.rcl;
      nativeBuildInputs = [ ament_cmake_gen_version_h ament_cmake_ros ];
      propagatedNativeBuildInputs = [ rcutils rmw ];
      buildInputs = [ rcl_logging_noop ];
      propagatedBuildInputs = [ libyaml libyaml_vendor rcl_interfaces rcl_logging_interface rcl_logging_spdlog rcl_yaml_param_parser rmw_implementation rosidl_runtime_c service_msgs tracetools type_description_interfaces ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcl_action = self.callPackage (
    {
      action_msgs,
      ament_cmake_gen_version_h,
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      osrf_testing_tools_cpp,
      rcl,
      rcutils,
      rmw,
      rmw_implementation_cmake,
      rosidl_runtime_c,
      test_msgs,
    }:
    buildRosPackage {
      pname = "rcl_action";
      version = "9.2.3-1";
      src = sources.rcl_action;
      nativeBuildInputs = [ ament_cmake_gen_version_h ament_cmake_ros ];
      propagatedNativeBuildInputs = [ rcutils rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs rcl rosidl_runtime_c ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcl_interfaces = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rcl_interfaces";
      version = "2.0.2-2";
      src = sources.rcl_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcl_lifecycle = self.callPackage (
    {
      ament_cmake_gen_version_h,
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      lifecycle_msgs,
      osrf_testing_tools_cpp,
      rcl,
      rcutils,
      rmw,
      rosidl_runtime_c,
      tracetools,
    }:
    buildRosPackage {
      pname = "rcl_lifecycle";
      version = "9.2.3-1";
      src = sources.rcl_lifecycle;
      nativeBuildInputs = [ ament_cmake_gen_version_h ament_cmake_ros ];
      propagatedNativeBuildInputs = [ rcutils rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ lifecycle_msgs rcl rosidl_runtime_c tracetools ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcl_logging_interface = self.callPackage (
    {
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rcpputils,
      rcutils,
    }:
    buildRosPackage {
      pname = "rcl_logging_interface";
      version = "3.1.0-2";
      src = sources.rcl_logging_interface;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcl_logging_noop = self.callPackage (
    {
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildPackages,
      buildRosPackage,
      launch_testing,
      rcl_logging_interface,
      rcutils,
    }:
    buildRosPackage {
      pname = "rcl_logging_noop";
      version = "3.1.0-2";
      src = sources.rcl_logging_noop;
      nativeBuildInputs = [ ament_cmake_ros buildPackages.python3Packages.empy ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rcl_logging_interface ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcl_logging_spdlog = self.callPackage (
    {
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      performance_test_fixture,
      rcl_logging_interface,
      rcpputils,
      rcutils,
      spdlog,
      spdlog_vendor,
    }:
    buildRosPackage {
      pname = "rcl_logging_spdlog";
      version = "3.1.0-2";
      src = sources.rcl_logging_spdlog;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rcl_logging_interface rcpputils spdlog spdlog_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcl_yaml_param_parser = self.callPackage (
    {
      ament_cmake_gen_version_h,
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      libyaml,
      libyaml_vendor,
      mimick_vendor,
      osrf_testing_tools_cpp,
      performance_test_fixture,
      rcutils,
      rmw,
    }:
    buildRosPackage {
      pname = "rcl_yaml_param_parser";
      version = "9.2.3-1";
      src = sources.rcl_yaml_param_parser;
      nativeBuildInputs = [ ament_cmake_gen_version_h ament_cmake_ros ];
      propagatedNativeBuildInputs = [ rcutils rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ libyaml libyaml_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rclc = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      example_interfaces,
      launch_testing,
      osrf_testing_tools_cpp,
      rcl,
      rcl_action,
      rclcpp,
      rclcpp_action,
      rcutils,
      rosidl_generator_c,
      rosidl_typesupport_c,
      std_msgs,
      test_msgs,
    }:
    buildRosPackage {
      pname = "rclc";
      version = "6.1.0-3";
      src = sources.rclc;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ rcutils rosidl_generator_c ];
      buildInputs = [ rosidl_typesupport_c ];
      propagatedBuildInputs = [ rcl rcl_action ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rclc_examples = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      example_interfaces,
      lifecycle_msgs,
      rcl,
      rclc,
      rclc_lifecycle,
      rclc_parameter,
      std_msgs,
    }:
    buildRosPackage {
      pname = "rclc_examples";
      version = "6.1.0-3";
      src = sources.rclc_examples;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ example_interfaces lifecycle_msgs rcl rclc rclc_lifecycle rclc_parameter std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rclc_lifecycle = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      lifecycle_msgs,
      osrf_testing_tools_cpp,
      rcl_lifecycle,
      rclc,
      std_msgs,
    }:
    buildRosPackage {
      pname = "rclc_lifecycle";
      version = "6.1.0-3";
      src = sources.rclc_lifecycle;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ lifecycle_msgs rcl_lifecycle rclc std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rclc_parameter = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      example_interfaces,
      osrf_testing_tools_cpp,
      rcl,
      rcl_interfaces,
      rclc,
      rclcpp,
      rcutils,
      rosidl_runtime_c,
      std_msgs,
    }:
    buildRosPackage {
      pname = "rclc_parameter";
      version = "6.1.0-3";
      src = sources.rclc_parameter;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rcl rcl_interfaces rclc rosidl_runtime_c ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rclcpp = self.callPackage (
    {
      ament_cmake_gen_version_h,
      ament_cmake_gmock,
      ament_cmake_google_benchmark,
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_index_cpp,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      libstatistics_collector,
      mimick_vendor,
      performance_test_fixture,
      python3,
      rcl,
      rcl_interfaces,
      rcl_logging_interface,
      rcl_yaml_param_parser,
      rcpputils,
      rcutils,
      rmw,
      rmw_implementation_cmake,
      rosgraph_msgs,
      rosidl_default_generators,
      rosidl_dynamic_typesupport,
      rosidl_runtime_c,
      rosidl_runtime_cpp,
      rosidl_typesupport_c,
      rosidl_typesupport_cpp,
      statistics_msgs,
      test_msgs,
      tracetools,
    }:
    buildRosPackage {
      pname = "rclcpp";
      version = "28.1.3-1";
      src = sources.rclcpp;
      nativeBuildInputs = [ ament_cmake_gen_version_h ament_cmake_ros python3 ];
      propagatedNativeBuildInputs = [ rcutils rmw rosidl_dynamic_typesupport ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp builtin_interfaces libstatistics_collector rcl rcl_interfaces rcl_logging_interface rcl_yaml_param_parser rcpputils rosgraph_msgs rosidl_runtime_c rosidl_runtime_cpp rosidl_typesupport_c rosidl_typesupport_cpp statistics_msgs tracetools ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rclcpp_action = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      mimick_vendor,
      performance_test_fixture,
      rcl,
      rcl_action,
      rclcpp,
      rcpputils,
      rosidl_runtime_c,
      test_msgs,
    }:
    buildRosPackage {
      pname = "rclcpp_action";
      version = "28.1.3-1";
      src = sources.rclcpp_action;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ ament_cmake ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs rcl rcl_action rclcpp rcpputils rosidl_runtime_c ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rclcpp_cascade_lifecycle = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cascade_lifecycle_msgs,
      lifecycle_msgs,
      rclcpp,
      rclcpp_lifecycle,
    }:
    buildRosPackage {
      pname = "rclcpp_cascade_lifecycle";
      version = "2.0.0-2";
      src = sources.rclcpp_cascade_lifecycle;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cascade_lifecycle_msgs lifecycle_msgs rclcpp rclcpp_lifecycle ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rclcpp_components = self.callPackage (
    {
      ament_cmake_google_benchmark,
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_index_cpp,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      class_loader,
      composition_interfaces,
      launch_testing,
      rclcpp,
      rcpputils,
      std_msgs,
    }:
    buildRosPackage {
      pname = "rclcpp_components";
      version = "28.1.3-1";
      src = sources.rclcpp_components;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ rcpputils ];
      propagatedBuildInputs = [ ament_index_cpp class_loader composition_interfaces rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rclcpp_lifecycle = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      lifecycle_msgs,
      mimick_vendor,
      performance_test_fixture,
      rcl,
      rcl_interfaces,
      rcl_lifecycle,
      rclcpp,
      rcpputils,
      rcutils,
      rmw,
      rosidl_typesupport_cpp,
      test_msgs,
    }:
    buildRosPackage {
      pname = "rclcpp_lifecycle";
      version = "28.1.3-1";
      src = sources.rclcpp_lifecycle;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ rcutils rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ lifecycle_msgs rcl rcl_interfaces rcl_lifecycle rclcpp rosidl_typesupport_cpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rclpy = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildPackages,
      buildRosPackage,
      builtin_interfaces,
      lifecycle_msgs,
      pybind11_vendor,
      python3Packages,
      python_cmake_module,
      rcl,
      rcl_action,
      rcl_interfaces,
      rcl_lifecycle,
      rcl_logging_interface,
      rcl_yaml_param_parser,
      rcpputils,
      rcutils,
      rmw,
      rmw_implementation,
      rmw_implementation_cmake,
      rosgraph_msgs,
      rosidl_generator_py,
      rosidl_runtime_c,
      rpyutils,
      test_msgs,
      unique_identifier_msgs,
    }:
    buildRosPackage {
      pname = "rclpy";
      version = "7.1.1-2";
      src = sources.rclpy;
      nativeBuildInputs = [ ament_cmake python_cmake_module rcutils rmw_implementation_cmake ];
      propagatedNativeBuildInputs = [ ament_index_python buildPackages.python3Packages.pyyaml rmw rpyutils ];
      buildInputs = [ pybind11_vendor rcpputils ];
      propagatedBuildInputs = [ action_msgs builtin_interfaces lifecycle_msgs rcl rcl_action rcl_interfaces rcl_lifecycle rcl_logging_interface rcl_yaml_param_parser rmw_implementation rosgraph_msgs rosidl_runtime_c unique_identifier_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rclpy_message_converter = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildPackages,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      python3Packages,
      rclpy,
      rclpy_message_converter_msgs,
      rosidl_default_generators,
      rosidl_parser,
      rosidl_runtime_py,
      std_msgs,
      std_srvs,
      tf2_msgs,
    }:
    buildRosPackage {
      pname = "rclpy_message_converter";
      version = "2.0.1-4";
      src = sources.rclpy_message_converter;
      nativeBuildInputs = [ rosidl_default_generators ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy rosidl_parser ];
      buildInputs = [ builtin_interfaces ];
      propagatedBuildInputs = [ rclpy rosidl_runtime_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rclpy_message_converter_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
    }:
    buildRosPackage {
      pname = "rclpy_message_converter_msgs";
      version = "2.0.1-4";
      src = sources.rclpy_message_converter_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ builtin_interfaces ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcpputils = self.callPackage (
    {
      ament_cmake,
      ament_cmake_copyright,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_flake8,
      ament_cmake_gen_version_h,
      ament_cmake_gtest,
      ament_cmake_lint_cmake,
      ament_cmake_pep257,
      ament_cmake_ros,
      ament_cmake_uncrustify,
      ament_cmake_xmllint,
      buildRosPackage,
      rcutils,
    }:
    buildRosPackage {
      pname = "rcpputils";
      version = "2.11.0-2";
      src = sources.rcpputils;
      nativeBuildInputs = [ ament_cmake ament_cmake_gen_version_h ament_cmake_ros ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcss3d_agent = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      rcss3d_agent_msgs,
    }:
    buildRosPackage {
      pname = "rcss3d_agent";
      version = "0.4.1-4";
      src = sources.rcss3d_agent;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rcss3d_agent_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcss3d_agent_basic = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp_components,
      rcss3d_agent,
    }:
    buildRosPackage {
      pname = "rcss3d_agent_basic";
      version = "0.4.1-4";
      src = sources.rcss3d_agent_basic;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp_components rcss3d_agent ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcss3d_agent_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rcss3d_agent_msgs";
      version = "0.4.1-4";
      src = sources.rcss3d_agent_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcss3d_agent_msgs_to_soccer_interfaces = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rcss3d_agent_msgs,
      soccer_vision_3d_msgs,
    }:
    buildRosPackage {
      pname = "rcss3d_agent_msgs_to_soccer_interfaces";
      version = "0.4.1-4";
      src = sources.rcss3d_agent_msgs_to_soccer_interfaces;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rcss3d_agent_msgs soccer_vision_3d_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcss3d_nao = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      nao_lola_command_msgs,
      nao_lola_sensor_msgs,
      rclcpp_components,
      rcss3d_agent,
      rcss3d_agent_msgs_to_soccer_interfaces,
      sensor_msgs,
      soccer_vision_3d_msgs,
    }:
    buildRosPackage {
      pname = "rcss3d_nao";
      version = "1.2.0-3";
      src = sources.rcss3d_nao;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs nao_lola_command_msgs nao_lola_sensor_msgs rclcpp_components rcss3d_agent rcss3d_agent_msgs_to_soccer_interfaces sensor_msgs soccer_vision_3d_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rcutils = self.callPackage (
    {
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildPackages,
      buildRosPackage,
      launch,
      launch_testing,
      launch_testing_ament_cmake,
      mimick_vendor,
      osrf_testing_tools_cpp,
      performance_test_fixture,
      python3Packages,
    }:
    buildRosPackage {
      pname = "rcutils";
      version = "6.7.1-1";
      src = sources.rcutils;
      nativeBuildInputs = [ ament_cmake_ros buildPackages.python3Packages.empy ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ament_cmake_ros python3Packages.empy ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  realsense2_camera = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      buildRosPackage,
      builtin_interfaces,
      cv_bridge,
      diagnostic_updater,
      eigen,
      geometry_msgs,
      image_transport,
      launch_pytest,
      launch_ros,
      launch_testing,
      librealsense2,
      nav_msgs,
      python3Packages,
      rclcpp,
      rclcpp_components,
      realsense2_camera_msgs,
      ros2topic,
      ros_environment,
      sensor_msgs,
      sensor_msgs_py,
      std_msgs,
      tf2,
      tf2_ros,
      tf2_ros_py,
    }:
    buildRosPackage {
      pname = "realsense2_camera";
      version = "4.55.1-3";
      src = sources.realsense2_camera;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces cv_bridge diagnostic_updater eigen geometry_msgs image_transport launch_ros librealsense2 nav_msgs rclcpp rclcpp_components realsense2_camera_msgs sensor_msgs std_msgs tf2 tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  realsense2_camera_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "realsense2_camera_msgs";
      version = "4.55.1-3";
      src = sources.realsense2_camera_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  realsense2_description = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      launch_ros,
      rclcpp,
      rclcpp_components,
      realsense2_camera_msgs,
      xacro,
    }:
    buildRosPackage {
      pname = "realsense2_description";
      version = "4.55.1-3";
      src = sources.realsense2_description;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ launch_ros rclcpp rclcpp_components realsense2_camera_msgs xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  realtime_tools = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      buildRosPackage,
      rclcpp,
      rclcpp_action,
      test_msgs,
    }:
    buildRosPackage {
      pname = "realtime_tools";
      version = "2.5.0-4";
      src = sources.realtime_tools;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rclcpp_action ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  resource_retriever = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_cmake_ros,
      ament_index_cpp,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      libcurl_vendor,
      python3Packages,
      python_cmake_module,
    }:
    buildRosPackage {
      pname = "resource_retriever";
      version = "3.4.3-1";
      src = sources.resource_retriever;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp libcurl_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rig_reconfigure = self.callPackage (
    {
      ament_cmake,
      ament_index_cpp,
      buildRosPackage,
      git,
      glfw3,
      rclcpp,
    }:
    buildRosPackage {
      pname = "rig_reconfigure";
      version = "1.4.0-4";
      src = sources.rig_reconfigure;
      nativeBuildInputs = [ ament_cmake git ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp glfw3 rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_api_msgs = self.callPackage (
    {
      ament_cmake,
      buildPackages,
      buildRosPackage,
      nlohmann_json,
      python3Packages,
    }:
    buildRosPackage {
      pname = "rmf_api_msgs";
      version = "0.3.1-1";
      src = sources.rmf_api_msgs;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.jinja2 ];
      buildInputs = [  ];
      propagatedBuildInputs = [ nlohmann_json python3Packages.jsonschema ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_battery = self.callPackage (
    {
      ament_cmake_catch2,
      ament_cmake_uncrustify,
      buildRosPackage,
      cmake,
      eigen,
      eigen3_cmake_module,
      rmf_traffic,
      rmf_utils,
    }:
    buildRosPackage {
      pname = "rmf_battery";
      version = "0.3.1-1";
      src = sources.rmf_battery;
      nativeBuildInputs = [ cmake eigen3_cmake_module ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ eigen ];
      propagatedBuildInputs = [ rmf_traffic rmf_utils ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_building_map_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rmf_building_map_msgs";
      version = "1.4.1-1";
      src = sources.rmf_building_map_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_building_map_tools = self.callPackage (
    {
      ament_index_python,
      buildPackages,
      buildRosPackage,
      gz_fuel_tools_vendor,
      libyamlcpp,
      python3Packages,
      rclpy,
      rmf_building_map_msgs,
      rmf_site_map_msgs,
      sqlite,
      std_msgs,
    }:
    buildRosPackage {
      pname = "rmf_building_map_tools";
      version = "1.9.1-1";
      src = sources.rmf_building_map_tools;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python buildPackages.python3Packages.pyyaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gz_fuel_tools_vendor libyamlcpp python3Packages.fiona python3Packages.pyproj python3Packages.requests python3Packages.shapely rclpy rmf_building_map_msgs rmf_site_map_msgs sqlite std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_building_sim_gz_plugins = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      gz_gui_vendor,
      gz_msgs_vendor,
      gz_plugin_vendor,
      gz_rendering_vendor,
      gz_sim_vendor,
      gz_transport_vendor,
      menge_vendor,
      qt5,
      rclcpp,
      rmf_door_msgs,
      rmf_fleet_msgs,
      rmf_lift_msgs,
    }:
    buildRosPackage {
      pname = "rmf_building_sim_gz_plugins";
      version = "2.3.2-1";
      src = sources.rmf_building_sim_gz_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gz_gui_vendor gz_msgs_vendor gz_plugin_vendor gz_rendering_vendor gz_sim_vendor gz_transport_vendor menge_vendor qt5.qtbase qt5.qtdeclarative rclcpp rmf_door_msgs rmf_fleet_msgs rmf_lift_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_charger_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rmf_charger_msgs";
      version = "3.3.1-1";
      src = sources.rmf_charger_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_charging_schedule = self.callPackage (
    {
      buildRosPackage,
      rclpy,
      rmf_fleet_msgs,
    }:
    buildRosPackage {
      pname = "rmf_charging_schedule";
      version = "2.7.2-1";
      src = sources.rmf_charging_schedule;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy rmf_fleet_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_dev = self.callPackage (
    {
      ament_cmake,
      ament_cmake_catch2,
      buildRosPackage,
      menge_vendor,
      nlohmann_json_schema_validator_vendor,
      pybind11_json_vendor,
      rmf_api_msgs,
      rmf_battery,
      rmf_building_map_msgs,
      rmf_building_map_tools,
      rmf_building_sim_gz_plugins,
      rmf_charger_msgs,
      rmf_dispenser_msgs,
      rmf_door_msgs,
      rmf_fleet_adapter,
      rmf_fleet_adapter_python,
      rmf_fleet_msgs,
      rmf_ingestor_msgs,
      rmf_lift_msgs,
      rmf_obstacle_msgs,
      rmf_robot_sim_common,
      rmf_robot_sim_gz_plugins,
      rmf_scheduler_msgs,
      rmf_site_map_msgs,
      rmf_task,
      rmf_task_msgs,
      rmf_task_ros2,
      rmf_task_sequence,
      rmf_traffic,
      rmf_traffic_editor,
      rmf_traffic_editor_assets,
      rmf_traffic_editor_test_maps,
      rmf_traffic_examples,
      rmf_traffic_msgs,
      rmf_traffic_ros2,
      rmf_utils,
      rmf_visualization,
      rmf_visualization_building_systems,
      rmf_visualization_fleet_states,
      rmf_visualization_floorplans,
      rmf_visualization_msgs,
      rmf_visualization_navgraphs,
      rmf_visualization_obstacles,
      rmf_visualization_rviz2_plugins,
      rmf_visualization_schedule,
      rmf_websocket,
      rmf_workcell_msgs,
    }:
    buildRosPackage {
      pname = "rmf_dev";
      version = "0.1.0-1";
      src = sources.rmf_dev;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake_catch2 menge_vendor nlohmann_json_schema_validator_vendor pybind11_json_vendor rmf_api_msgs rmf_battery rmf_building_map_msgs rmf_building_map_tools rmf_building_sim_gz_plugins rmf_charger_msgs rmf_dispenser_msgs rmf_door_msgs rmf_fleet_adapter rmf_fleet_adapter_python rmf_fleet_msgs rmf_ingestor_msgs rmf_lift_msgs rmf_obstacle_msgs rmf_robot_sim_common rmf_robot_sim_gz_plugins rmf_scheduler_msgs rmf_site_map_msgs rmf_task rmf_task_msgs rmf_task_ros2 rmf_task_sequence rmf_traffic rmf_traffic_editor rmf_traffic_editor_assets rmf_traffic_editor_test_maps rmf_traffic_examples rmf_traffic_msgs rmf_traffic_ros2 rmf_utils rmf_visualization rmf_visualization_building_systems rmf_visualization_fleet_states rmf_visualization_floorplans rmf_visualization_msgs rmf_visualization_navgraphs rmf_visualization_obstacles rmf_visualization_rviz2_plugins rmf_visualization_schedule rmf_websocket rmf_workcell_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_dispenser_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rmf_dispenser_msgs";
      version = "3.3.1-1";
      src = sources.rmf_dispenser_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_door_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rmf_door_msgs";
      version = "3.3.1-1";
      src = sources.rmf_door_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_fleet_adapter = self.callPackage (
    {
      ament_cmake,
      ament_cmake_catch2,
      ament_cmake_uncrustify,
      backward_ros,
      buildRosPackage,
      eigen,
      libyamlcpp,
      nlohmann_json,
      nlohmann_json_schema_validator_vendor,
      rclcpp,
      rclcpp_components,
      rmf_api_msgs,
      rmf_battery,
      rmf_building_map_msgs,
      rmf_dispenser_msgs,
      rmf_door_msgs,
      rmf_fleet_msgs,
      rmf_ingestor_msgs,
      rmf_lift_msgs,
      rmf_task,
      rmf_task_msgs,
      rmf_task_ros2,
      rmf_task_sequence,
      rmf_traffic,
      rmf_traffic_ros2,
      rmf_utils,
      rmf_websocket,
      std_msgs,
    }:
    buildRosPackage {
      pname = "rmf_fleet_adapter";
      version = "2.7.2-1";
      src = sources.rmf_fleet_adapter;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ eigen libyamlcpp ];
      propagatedBuildInputs = [ backward_ros nlohmann_json nlohmann_json_schema_validator_vendor rclcpp rclcpp_components rmf_api_msgs rmf_battery rmf_building_map_msgs rmf_dispenser_msgs rmf_door_msgs rmf_fleet_msgs rmf_ingestor_msgs rmf_lift_msgs rmf_task rmf_task_msgs rmf_task_ros2 rmf_task_sequence rmf_traffic rmf_traffic_ros2 rmf_utils rmf_websocket std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_fleet_adapter_python = self.callPackage (
    {
      ament_cmake_pytest,
      buildRosPackage,
      pybind11_json_vendor,
      pybind11_vendor,
      rclpy,
      rmf_fleet_adapter,
    }:
    buildRosPackage {
      pname = "rmf_fleet_adapter_python";
      version = "2.7.2-1";
      src = sources.rmf_fleet_adapter_python;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ pybind11_json_vendor pybind11_vendor rclpy rmf_fleet_adapter ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_fleet_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rmf_fleet_msgs";
      version = "3.3.1-1";
      src = sources.rmf_fleet_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_ingestor_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rmf_dispenser_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rmf_ingestor_msgs";
      version = "3.3.1-1";
      src = sources.rmf_ingestor_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rmf_dispenser_msgs rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_lift_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rmf_lift_msgs";
      version = "3.3.1-1";
      src = sources.rmf_lift_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_obstacle_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "rmf_obstacle_msgs";
      version = "3.3.1-1";
      src = sources.rmf_obstacle_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_robot_sim_common = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      eigen,
      eigen3_cmake_module,
      geometry_msgs,
      rclcpp,
      rmf_building_map_msgs,
      rmf_dispenser_msgs,
      rmf_fleet_msgs,
      rmf_ingestor_msgs,
      std_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "rmf_robot_sim_common";
      version = "2.3.2-1";
      src = sources.rmf_robot_sim_common;
      nativeBuildInputs = [ ament_cmake eigen3_cmake_module ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen geometry_msgs rclcpp rmf_building_map_msgs rmf_dispenser_msgs rmf_fleet_msgs rmf_ingestor_msgs std_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_robot_sim_gz_plugins = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      eigen,
      gz_gui_vendor,
      gz_msgs_vendor,
      gz_plugin_vendor,
      gz_rendering_vendor,
      gz_sim_vendor,
      gz_transport_vendor,
      qt5,
      rclcpp,
      rmf_building_map_msgs,
      rmf_building_sim_gz_plugins,
      rmf_fleet_msgs,
      rmf_robot_sim_common,
    }:
    buildRosPackage {
      pname = "rmf_robot_sim_gz_plugins";
      version = "2.3.2-1";
      src = sources.rmf_robot_sim_gz_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen gz_gui_vendor gz_msgs_vendor gz_plugin_vendor gz_rendering_vendor gz_sim_vendor gz_transport_vendor qt5.qtbase qt5.qtdeclarative rclcpp rmf_building_map_msgs rmf_building_sim_gz_plugins rmf_fleet_msgs rmf_robot_sim_common ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_scheduler_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rmf_scheduler_msgs";
      version = "3.3.1-1";
      src = sources.rmf_scheduler_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_site_map_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rmf_site_map_msgs";
      version = "3.3.1-1";
      src = sources.rmf_site_map_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_task = self.callPackage (
    {
      ament_cmake_catch2,
      ament_cmake_uncrustify,
      buildRosPackage,
      cmake,
      eigen,
      rmf_battery,
      rmf_utils,
    }:
    buildRosPackage {
      pname = "rmf_task";
      version = "2.5.1-1";
      src = sources.rmf_task;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen rmf_battery rmf_utils ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_task_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rmf_dispenser_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rmf_task_msgs";
      version = "3.3.1-1";
      src = sources.rmf_task_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rmf_dispenser_msgs rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_task_ros2 = self.callPackage (
    {
      ament_cmake,
      ament_cmake_catch2,
      ament_cmake_uncrustify,
      backward_ros,
      buildRosPackage,
      eigen,
      nlohmann_json,
      nlohmann_json_schema_validator_vendor,
      rclcpp,
      rmf_api_msgs,
      rmf_task_msgs,
      rmf_traffic,
      rmf_traffic_ros2,
      rmf_utils,
      rmf_websocket,
    }:
    buildRosPackage {
      pname = "rmf_task_ros2";
      version = "2.7.2-1";
      src = sources.rmf_task_ros2;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ eigen ];
      propagatedBuildInputs = [ backward_ros nlohmann_json nlohmann_json_schema_validator_vendor rclcpp rmf_api_msgs rmf_task_msgs rmf_traffic rmf_traffic_ros2 rmf_utils rmf_websocket ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_task_sequence = self.callPackage (
    {
      ament_cmake_catch2,
      ament_cmake_uncrustify,
      buildRosPackage,
      cmake,
      nlohmann_json,
      nlohmann_json_schema_validator_vendor,
      rmf_api_msgs,
      rmf_task,
    }:
    buildRosPackage {
      pname = "rmf_task_sequence";
      version = "2.5.1-1";
      src = sources.rmf_task_sequence;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ nlohmann_json nlohmann_json_schema_validator_vendor rmf_api_msgs rmf_task ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_traffic = self.callPackage (
    {
      ament_cmake_catch2,
      ament_cmake_uncrustify,
      buildRosPackage,
      cmake,
      eigen,
      eigen3_cmake_module,
      libccd,
      rmf_utils,
    }:
    buildRosPackage {
      pname = "rmf_traffic";
      version = "3.3.3-1";
      src = sources.rmf_traffic;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [ eigen3_cmake_module ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen libccd rmf_utils ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_traffic_editor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_uncrustify,
      ament_index_cpp,
      buildRosPackage,
      ceres-solver,
      eigen,
      glog,
      libyamlcpp,
      proj,
      qt5,
      rmf_utils,
    }:
    buildRosPackage {
      pname = "rmf_traffic_editor";
      version = "1.9.1-1";
      src = sources.rmf_traffic_editor;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ament_index_cpp eigen libyamlcpp qt5.qtbase rmf_utils ];
      propagatedBuildInputs = [ ceres-solver glog proj ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_traffic_editor_assets = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "rmf_traffic_editor_assets";
      version = "1.9.1-1";
      src = sources.rmf_traffic_editor_assets;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_traffic_editor_test_maps = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rmf_building_map_tools,
      ros2run,
    }:
    buildRosPackage {
      pname = "rmf_traffic_editor_test_maps";
      version = "1.9.1-1";
      src = sources.rmf_traffic_editor_test_maps;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ rmf_building_map_tools ros2run ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_traffic_examples = self.callPackage (
    {
      buildRosPackage,
      cmake,
      rmf_traffic,
    }:
    buildRosPackage {
      pname = "rmf_traffic_examples";
      version = "3.3.3-1";
      src = sources.rmf_traffic_examples;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rmf_traffic ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_traffic_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rmf_traffic_msgs";
      version = "3.3.1-1";
      src = sources.rmf_traffic_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_traffic_ros2 = self.callPackage (
    {
      ament_cmake,
      ament_cmake_catch2,
      ament_cmake_uncrustify,
      backward_ros,
      buildRosPackage,
      eigen,
      libyamlcpp,
      nlohmann_json,
      proj,
      rclcpp,
      rmf_building_map_msgs,
      rmf_fleet_msgs,
      rmf_site_map_msgs,
      rmf_traffic,
      rmf_traffic_msgs,
      rmf_utils,
      util-linux,
      zlib,
    }:
    buildRosPackage {
      pname = "rmf_traffic_ros2";
      version = "2.7.2-1";
      src = sources.rmf_traffic_ros2;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ eigen ];
      propagatedBuildInputs = [ backward_ros libyamlcpp nlohmann_json proj rclcpp rmf_building_map_msgs rmf_fleet_msgs rmf_site_map_msgs rmf_traffic rmf_traffic_msgs rmf_utils util-linux zlib ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_utils = self.callPackage (
    {
      ament_cmake_catch2,
      ament_cmake_uncrustify,
      buildRosPackage,
      cmake,
    }:
    buildRosPackage {
      pname = "rmf_utils";
      version = "1.6.2-1";
      src = sources.rmf_utils;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_visualization = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      launch_xml,
      rmf_visualization_building_systems,
      rmf_visualization_fleet_states,
      rmf_visualization_floorplans,
      rmf_visualization_navgraphs,
      rmf_visualization_obstacles,
      rmf_visualization_rviz2_plugins,
      rmf_visualization_schedule,
    }:
    buildRosPackage {
      pname = "rmf_visualization";
      version = "2.3.2-1";
      src = sources.rmf_visualization;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ launch_xml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rmf_visualization_building_systems rmf_visualization_fleet_states rmf_visualization_floorplans rmf_visualization_navgraphs rmf_visualization_obstacles rmf_visualization_rviz2_plugins rmf_visualization_schedule ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_visualization_building_systems = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      geometry_msgs,
      python3Packages,
      rmf_building_map_msgs,
      rmf_door_msgs,
      rmf_lift_msgs,
      rmf_visualization_msgs,
    }:
    buildRosPackage {
      pname = "rmf_visualization_building_systems";
      version = "2.3.2-1";
      src = sources.rmf_visualization_building_systems;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rmf_building_map_msgs rmf_door_msgs rmf_lift_msgs rmf_visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_visualization_fleet_states = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      rclcpp_components,
      rmf_fleet_msgs,
      rmf_utils,
      rmf_visualization_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "rmf_visualization_fleet_states";
      version = "2.3.2-1";
      src = sources.rmf_visualization_fleet_states;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rclcpp_components rmf_fleet_msgs rmf_visualization_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_visualization_floorplans = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      eigen,
      eigen3_cmake_module,
      geometry_msgs,
      nav_msgs,
      opencv,
      rclcpp,
      rclcpp_components,
      rmf_building_map_msgs,
      rmf_utils,
      rmf_visualization_msgs,
    }:
    buildRosPackage {
      pname = "rmf_visualization_floorplans";
      version = "2.3.2-1";
      src = sources.rmf_visualization_floorplans;
      nativeBuildInputs = [ ament_cmake eigen3_cmake_module ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen geometry_msgs nav_msgs opencv rclcpp rclcpp_components rmf_building_map_msgs rmf_visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_visualization_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rmf_visualization_msgs";
      version = "1.4.1-1";
      src = sources.rmf_visualization_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_visualization_navgraphs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      rclcpp,
      rclcpp_components,
      rmf_building_map_msgs,
      rmf_fleet_msgs,
      rmf_traffic,
      rmf_traffic_ros2,
      rmf_utils,
      rmf_visualization_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "rmf_visualization_navgraphs";
      version = "2.3.2-1";
      src = sources.rmf_visualization_navgraphs;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rclcpp rclcpp_components rmf_building_map_msgs rmf_fleet_msgs rmf_traffic rmf_traffic_ros2 rmf_visualization_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_visualization_obstacles = self.callPackage (
    {
      ament_cmake,
      ament_cmake_uncrustify,
      buildRosPackage,
      geometry_msgs,
      rclcpp,
      rclcpp_components,
      rmf_obstacle_msgs,
      rmf_utils,
      rmf_visualization_msgs,
      vision_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "rmf_visualization_obstacles";
      version = "2.3.2-1";
      src = sources.rmf_visualization_obstacles;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rclcpp rclcpp_components rmf_obstacle_msgs rmf_visualization_msgs vision_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_visualization_rviz2_plugins = self.callPackage (
    {
      ament_cmake,
      ament_cmake_uncrustify,
      buildRosPackage,
      eigen,
      pluginlib,
      qt5,
      rclcpp,
      resource_retriever,
      rmf_door_msgs,
      rmf_lift_msgs,
      rmf_traffic_ros2,
      rmf_utils,
      rmf_visualization_msgs,
      rviz_common,
      rviz_default_plugins,
      rviz_rendering,
    }:
    buildRosPackage {
      pname = "rmf_visualization_rviz2_plugins";
      version = "2.3.2-1";
      src = sources.rmf_visualization_rviz2_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ eigen qt5.qtbase ];
      propagatedBuildInputs = [ pluginlib qt5.qtbase rclcpp resource_retriever rmf_door_msgs rmf_lift_msgs rmf_traffic_ros2 rmf_visualization_msgs rviz_common rviz_default_plugins rviz_rendering ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_visualization_schedule = self.callPackage (
    {
      ament_cmake,
      ament_cmake_uncrustify,
      ament_lint_auto,
      ament_lint_common,
      boost,
      buildRosPackage,
      builtin_interfaces,
      eigen,
      geometry_msgs,
      openssl,
      rclcpp,
      rclcpp_components,
      rmf_traffic,
      rmf_traffic_msgs,
      rmf_traffic_ros2,
      rmf_utils,
      rmf_visualization_msgs,
      rosidl_default_generators,
      visualization_msgs,
      websocketpp,
    }:
    buildRosPackage {
      pname = "rmf_visualization_schedule";
      version = "2.3.2-1";
      src = sources.rmf_visualization_schedule;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rosidl_default_generators ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost builtin_interfaces eigen geometry_msgs openssl rclcpp rclcpp_components rmf_traffic rmf_traffic_msgs rmf_traffic_ros2 rmf_visualization_msgs visualization_msgs websocketpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_websocket = self.callPackage (
    {
      ament_cmake,
      ament_cmake_catch2,
      ament_cmake_uncrustify,
      boost,
      buildRosPackage,
      eigen,
      nlohmann_json,
      nlohmann_json_schema_validator_vendor,
      rclcpp,
      rmf_utils,
      websocketpp,
    }:
    buildRosPackage {
      pname = "rmf_websocket";
      version = "2.7.2-1";
      src = sources.rmf_websocket;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ eigen ];
      propagatedBuildInputs = [ boost nlohmann_json nlohmann_json_schema_validator_vendor rclcpp rmf_utils websocketpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmf_workcell_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rmf_workcell_msgs";
      version = "3.3.1-1";
      src = sources.rmf_workcell_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmw = self.callPackage (
    {
      ament_cmake_gmock,
      ament_cmake_ros,
      ament_cmake_version,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      osrf_testing_tools_cpp,
      rcutils,
      rosidl_dynamic_typesupport,
      rosidl_runtime_c,
    }:
    buildRosPackage {
      pname = "rmw";
      version = "7.3.1-1";
      src = sources.rmw;
      nativeBuildInputs = [ ament_cmake_ros ament_cmake_version ];
      propagatedNativeBuildInputs = [ rcutils rosidl_dynamic_typesupport ];
      buildInputs = [ ament_cmake_ros ament_cmake_version ];
      propagatedBuildInputs = [ rcutils rosidl_dynamic_typesupport ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [ rosidl_runtime_c ];
    }
  ) {};
  rmw_connextdds = self.callPackage (
    {
      ament_cmake,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rmw_connextdds_common,
    }:
    buildRosPackage {
      pname = "rmw_connextdds";
      version = "0.22.0-2";
      src = sources.rmw_connextdds;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ ament_cmake ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rmw_connextdds_common ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmw_connextdds_common = self.callPackage (
    {
      ament_cmake,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      fastcdr,
      rcpputils,
      rcutils,
      rmw,
      rmw_dds_common,
      rosidl_runtime_c,
      rosidl_runtime_cpp,
      rosidl_typesupport_fastrtps_c,
      rosidl_typesupport_fastrtps_cpp,
      rosidl_typesupport_introspection_c,
      rosidl_typesupport_introspection_cpp,
      rti_connext_dds_cmake_module,
      tracetools,
    }:
    buildRosPackage {
      pname = "rmw_connextdds_common";
      version = "0.22.0-2";
      src = sources.rmw_connextdds_common;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ ament_cmake rcutils rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ fastcdr rcpputils rmw_dds_common rosidl_runtime_c rosidl_runtime_cpp rosidl_typesupport_fastrtps_c rosidl_typesupport_fastrtps_cpp rosidl_typesupport_introspection_c rosidl_typesupport_introspection_cpp rti_connext_dds_cmake_module tracetools ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmw_cyclonedds_cpp = self.callPackage (
    {
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cyclonedds,
      iceoryx_binding_c,
      rcpputils,
      rcutils,
      rmw,
      rmw_dds_common,
      rosidl_runtime_c,
      rosidl_typesupport_introspection_c,
      rosidl_typesupport_introspection_cpp,
      tracetools,
    }:
    buildRosPackage {
      pname = "rmw_cyclonedds_cpp";
      version = "2.2.2-1";
      src = sources.rmw_cyclonedds_cpp;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ rcutils rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cyclonedds iceoryx_binding_c rcpputils rmw_dds_common rosidl_runtime_c rosidl_typesupport_introspection_c rosidl_typesupport_introspection_cpp tracetools ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmw_dds_common = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      osrf_testing_tools_cpp,
      performance_test_fixture,
      rcpputils,
      rcutils,
      rmw,
      rosidl_default_generators,
      rosidl_default_runtime,
      rosidl_runtime_c,
      rosidl_runtime_cpp,
    }:
    buildRosPackage {
      pname = "rmw_dds_common";
      version = "3.1.0-2";
      src = sources.rmw_dds_common;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [ rcutils rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rcpputils rosidl_default_runtime rosidl_runtime_c rosidl_runtime_cpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmw_fastrtps_cpp = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      fastcdr,
      fastrtps,
      fastrtps_cmake_module,
      osrf_testing_tools_cpp,
      rcpputils,
      rcutils,
      rmw,
      rmw_dds_common,
      rmw_fastrtps_shared_cpp,
      rosidl_dynamic_typesupport,
      rosidl_dynamic_typesupport_fastrtps,
      rosidl_runtime_c,
      rosidl_runtime_cpp,
      rosidl_typesupport_fastrtps_c,
      rosidl_typesupport_fastrtps_cpp,
      test_msgs,
      tracetools,
    }:
    buildRosPackage {
      pname = "rmw_fastrtps_cpp";
      version = "8.4.1-1";
      src = sources.rmw_fastrtps_cpp;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ ament_cmake fastrtps_cmake_module rcutils rmw rosidl_dynamic_typesupport ];
      buildInputs = [  ];
      propagatedBuildInputs = [ fastcdr fastrtps rcpputils rmw_dds_common rmw_fastrtps_shared_cpp rosidl_dynamic_typesupport_fastrtps rosidl_runtime_c rosidl_runtime_cpp rosidl_typesupport_fastrtps_c rosidl_typesupport_fastrtps_cpp tracetools ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmw_fastrtps_dynamic_cpp = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      fastcdr,
      fastrtps,
      fastrtps_cmake_module,
      osrf_testing_tools_cpp,
      rcpputils,
      rcutils,
      rmw,
      rmw_dds_common,
      rmw_fastrtps_shared_cpp,
      rosidl_runtime_c,
      rosidl_typesupport_introspection_c,
      rosidl_typesupport_introspection_cpp,
      test_msgs,
    }:
    buildRosPackage {
      pname = "rmw_fastrtps_dynamic_cpp";
      version = "8.4.1-1";
      src = sources.rmw_fastrtps_dynamic_cpp;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ ament_cmake fastrtps_cmake_module rcutils rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ fastcdr fastrtps rcpputils rmw_dds_common rmw_fastrtps_shared_cpp rosidl_runtime_c rosidl_typesupport_introspection_c rosidl_typesupport_introspection_cpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmw_fastrtps_shared_cpp = self.callPackage (
    {
      ament_cmake,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      fastcdr,
      fastrtps,
      fastrtps_cmake_module,
      osrf_testing_tools_cpp,
      rcpputils,
      rcutils,
      rmw,
      rmw_dds_common,
      rosidl_dynamic_typesupport,
      rosidl_runtime_c,
      rosidl_typesupport_introspection_c,
      rosidl_typesupport_introspection_cpp,
      tracetools,
    }:
    buildRosPackage {
      pname = "rmw_fastrtps_shared_cpp";
      version = "8.4.1-1";
      src = sources.rmw_fastrtps_shared_cpp;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ ament_cmake fastrtps_cmake_module rcutils rmw rosidl_dynamic_typesupport ];
      buildInputs = [ rosidl_runtime_c ];
      propagatedBuildInputs = [ fastcdr fastrtps rcpputils rmw_dds_common rosidl_typesupport_introspection_c rosidl_typesupport_introspection_cpp tracetools ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmw_implementation = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_index_cpp,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      performance_test_fixture,
      rcpputils,
      rcutils,
      rmw,
      rmw_connextdds,
      rmw_cyclonedds_cpp,
      rmw_fastrtps_cpp,
      rmw_fastrtps_dynamic_cpp,
      rmw_implementation_cmake,
    }:
    buildRosPackage {
      pname = "rmw_implementation";
      version = "2.15.3-1";
      src = sources.rmw_implementation;
      nativeBuildInputs = [ ament_cmake rmw ];
      propagatedNativeBuildInputs = [ rcutils rmw_implementation_cmake ];
      buildInputs = [ rmw_connextdds rmw_cyclonedds_cpp rmw_fastrtps_cpp rmw_fastrtps_dynamic_cpp ];
      propagatedBuildInputs = [ ament_index_cpp rcpputils ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rmw_implementation_cmake = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "rmw_implementation_cmake";
      version = "7.3.1-1";
      src = sources.rmw_implementation_cmake;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  robot_calibration = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      boost,
      buildRosPackage,
      camera_calibration_parsers,
      ceres-solver,
      control_msgs,
      cv_bridge,
      eigen,
      geometric_shapes,
      geometry_msgs,
      gflags,
      kdl_parser,
      launch,
      launch_ros,
      launch_testing,
      libyamlcpp,
      moveit_msgs,
      nav_msgs,
      orocos-kdl,
      pluginlib,
      protobuf,
      rclcpp,
      rclcpp_action,
      robot_calibration_msgs,
      rosbag2_cpp,
      sensor_msgs,
      std_msgs,
      suitesparse,
      tf2_geometry_msgs,
      tf2_ros,
      tinyxml-2,
      tinyxml2_vendor,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "robot_calibration";
      version = "0.9.0-1";
      src = sources.robot_calibration;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ boost eigen ];
      propagatedBuildInputs = [ camera_calibration_parsers ceres-solver control_msgs cv_bridge geometric_shapes geometry_msgs gflags kdl_parser libyamlcpp moveit_msgs nav_msgs orocos-kdl pluginlib protobuf rclcpp rclcpp_action robot_calibration_msgs rosbag2_cpp sensor_msgs std_msgs suitesparse tf2_geometry_msgs tf2_ros tinyxml-2 tinyxml2_vendor visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  robot_calibration_msgs = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "robot_calibration_msgs";
      version = "0.9.0-1";
      src = sources.robot_calibration_msgs;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rosidl_default_generators ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs builtin_interfaces rosidl_default_runtime sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  robot_localization = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      angles,
      boost,
      buildRosPackage,
      builtin_interfaces,
      diagnostic_msgs,
      diagnostic_updater,
      eigen,
      geographic_msgs,
      geographiclib,
      geometry_msgs,
      launch_ros,
      launch_testing_ament_cmake,
      message_filters,
      nav_msgs,
      rclcpp,
      rmw_implementation,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
      std_srvs,
      tf2,
      tf2_eigen,
      tf2_geometry_msgs,
      tf2_ros,
      yaml_cpp_vendor,
    }:
    buildRosPackage {
      pname = "robot_localization";
      version = "3.8.0-1";
      src = sources.robot_localization;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ builtin_interfaces ];
      propagatedBuildInputs = [ angles boost diagnostic_msgs diagnostic_updater eigen geographic_msgs geographiclib geometry_msgs message_filters nav_msgs rclcpp rmw_implementation rosidl_default_runtime sensor_msgs std_msgs std_srvs tf2 tf2_eigen tf2_geometry_msgs tf2_ros yaml_cpp_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  robot_state_publisher = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      kdl_parser,
      launch_ros,
      launch_testing_ament_cmake,
      orocos_kdl_vendor,
      rcl_interfaces,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      std_msgs,
      tf2_ros,
      urdf,
    }:
    buildRosPackage {
      pname = "robot_state_publisher";
      version = "3.3.3-3";
      src = sources.robot_state_publisher;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs kdl_parser orocos_kdl_vendor rcl_interfaces rclcpp rclcpp_components sensor_msgs std_msgs tf2_ros urdf ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  robotiq_controllers = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      controller_interface,
      std_srvs,
    }:
    buildRosPackage {
      pname = "robotiq_controllers";
      version = "0.0.1-3";
      src = sources.robotiq_controllers;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ controller_interface std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  robotiq_description = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      joint_state_publisher_gui,
      launch,
      launch_ros,
      robot_state_publisher,
      rviz2,
      urdf,
      xacro,
    }:
    buildRosPackage {
      pname = "robotiq_description";
      version = "0.0.1-3";
      src = sources.robotiq_description;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ joint_state_publisher_gui launch_ros robot_state_publisher rviz2 urdf xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2_control = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      controller_interface,
      controller_manager,
      controller_manager_msgs,
      hardware_interface,
      joint_limits,
      ros2_control_test_assets,
      ros2controlcli,
      transmission_interface,
    }:
    buildRosPackage {
      pname = "ros2_control";
      version = "4.13.0-1";
      src = sources.ros2_control;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ controller_interface controller_manager controller_manager_msgs hardware_interface joint_limits ros2_control_test_assets ros2controlcli transmission_interface ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2_control_test_assets = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ros2_control_test_assets";
      version = "4.13.0-1";
      src = sources.ros2_control_test_assets;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2_controllers = self.callPackage (
    {
      ackermann_steering_controller,
      admittance_controller,
      ament_cmake,
      bicycle_steering_controller,
      buildRosPackage,
      diff_drive_controller,
      effort_controllers,
      force_torque_sensor_broadcaster,
      forward_command_controller,
      imu_sensor_broadcaster,
      joint_state_broadcaster,
      joint_trajectory_controller,
      pid_controller,
      position_controllers,
      range_sensor_broadcaster,
      steering_controllers_library,
      tricycle_controller,
      tricycle_steering_controller,
      velocity_controllers,
    }:
    buildRosPackage {
      pname = "ros2_controllers";
      version = "4.11.0-1";
      src = sources.ros2_controllers;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ackermann_steering_controller admittance_controller bicycle_steering_controller diff_drive_controller effort_controllers force_torque_sensor_broadcaster forward_command_controller imu_sensor_broadcaster joint_state_broadcaster joint_trajectory_controller pid_controller position_controllers range_sensor_broadcaster steering_controllers_library tricycle_controller tricycle_steering_controller velocity_controllers ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2_controllers_test_nodes = self.callPackage (
    {
      buildRosPackage,
      python3Packages,
      rclpy,
      std_msgs,
      trajectory_msgs,
    }:
    buildRosPackage {
      pname = "ros2_controllers_test_nodes";
      version = "4.11.0-1";
      src = sources.ros2_controllers_test_nodes;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy std_msgs trajectory_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2_socketcan = self.callPackage (
    {
      ament_cmake_auto,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      can_msgs,
      lifecycle_msgs,
      rclcpp,
      rclcpp_components,
      rclcpp_lifecycle,
      ros2_socketcan_msgs,
    }:
    buildRosPackage {
      pname = "ros2_socketcan";
      version = "1.3.0-1";
      src = sources.ros2_socketcan;
      nativeBuildInputs = [ ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ can_msgs lifecycle_msgs rclcpp rclcpp_components rclcpp_lifecycle ros2_socketcan_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2_socketcan_msgs = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "ros2_socketcan_msgs";
      version = "1.3.0-1";
      src = sources.ros2_socketcan_msgs;
      nativeBuildInputs = [ ament_cmake_auto rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2acceleration = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_xmllint,
      buildPackages,
      buildRosPackage,
      python3Packages,
      rclpy,
      ros2cli,
      rosidl_runtime_py,
      test_msgs,
    }:
    buildRosPackage {
      pname = "ros2acceleration";
      version = "0.5.1-4";
      src = sources.ros2acceleration;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy buildPackages.python3Packages.pyyaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy ros2cli rosidl_runtime_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2action = self.callPackage (
    {
      action_msgs,
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      launch,
      launch_testing,
      launch_testing_ros,
      python3Packages,
      rclpy,
      ros2cli,
      rosidl_runtime_py,
      test_msgs,
    }:
    buildRosPackage {
      pname = "ros2action";
      version = "0.32.1-1";
      src = sources.ros2action;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs rclpy ros2cli rosidl_runtime_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2bag = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_pep257,
      buildPackages,
      buildRosPackage,
      launch_testing,
      launch_testing_ros,
      python3Packages,
      rclpy,
      ros2cli,
      rosbag2_py,
      rosbag2_storage_default_plugins,
      rosbag2_test_common,
    }:
    buildRosPackage {
      pname = "ros2bag";
      version = "0.26.4-1";
      src = sources.ros2bag;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python buildPackages.python3Packages.pyyaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy ros2cli rosbag2_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2cli = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_xmllint,
      buildPackages,
      buildRosPackage,
      python3Packages,
      rclpy,
      test_msgs,
    }:
    buildRosPackage {
      pname = "ros2cli";
      version = "0.32.1-1";
      src = sources.ros2cli;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.argcomplete buildPackages.python3Packages.importlib-metadata ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.packaging python3Packages.psutil python3Packages.setuptools rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2cli_common_extensions = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      launch_xml,
      launch_yaml,
      ros2action,
      ros2cli,
      ros2component,
      ros2doctor,
      ros2interface,
      ros2launch,
      ros2lifecycle,
      ros2multicast,
      ros2node,
      ros2param,
      ros2pkg,
      ros2run,
      ros2service,
      ros2topic,
      sros2,
    }:
    buildRosPackage {
      pname = "ros2cli_common_extensions";
      version = "0.3.0-3";
      src = sources.ros2cli_common_extensions;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ launch_xml launch_yaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ros2action ros2cli ros2component ros2doctor ros2interface ros2launch ros2lifecycle ros2multicast ros2node ros2param ros2pkg ros2run ros2service ros2topic sros2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2cli_test_interfaces = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "ros2cli_test_interfaces";
      version = "0.32.1-1";
      src = sources.ros2cli_test_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2component = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      composition_interfaces,
      python3Packages,
      rcl_interfaces,
      rclcpp_components,
      rclpy,
      ros2cli,
      ros2node,
      ros2param,
      ros2pkg,
    }:
    buildRosPackage {
      pname = "ros2component";
      version = "0.32.1-1";
      src = sources.ros2component;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [  ];
      propagatedBuildInputs = [ composition_interfaces rcl_interfaces rclcpp_components rclpy ros2cli ros2node ros2param ros2pkg ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2controlcli = self.callPackage (
    {
      buildRosPackage,
      controller_manager,
      controller_manager_msgs,
      python3Packages,
      rcl_interfaces,
      rclpy,
      ros2cli,
      ros2node,
      ros2param,
      rosidl_runtime_py,
    }:
    buildRosPackage {
      pname = "ros2controlcli";
      version = "4.13.0-1";
      src = sources.ros2controlcli;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ controller_manager controller_manager_msgs python3Packages.pygraphviz rcl_interfaces rclpy ros2cli ros2node ros2param rosidl_runtime_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2doctor = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_pep257,
      ament_xmllint,
      buildPackages,
      buildRosPackage,
      launch,
      launch_ros,
      launch_testing,
      launch_testing_ros,
      python3Packages,
      rclpy,
      ros2cli,
      ros_environment,
      std_msgs,
    }:
    buildRosPackage {
      pname = "ros2doctor";
      version = "0.32.1-1";
      src = sources.ros2doctor;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python buildPackages.python3Packages.catkin-pkg buildPackages.python3Packages.importlib-metadata ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.psutil python3Packages.rosdistro rclpy ros2cli std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2interface = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      launch,
      launch_testing,
      launch_testing_ros,
      python3Packages,
      ros2cli,
      ros2cli_test_interfaces,
      rosidl_adapter,
      rosidl_runtime_py,
      test_msgs,
    }:
    buildRosPackage {
      pname = "ros2interface";
      version = "0.32.1-1";
      src = sources.ros2interface;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python rosidl_adapter ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ros2cli rosidl_runtime_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2launch = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_pep257,
      buildRosPackage,
      launch,
      launch_ros,
      launch_xml,
      launch_yaml,
      python3Packages,
      ros2cli,
      ros2pkg,
    }:
    buildRosPackage {
      pname = "ros2launch";
      version = "0.26.5-2";
      src = sources.ros2launch;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python launch launch_xml launch_yaml ];
      buildInputs = [ launch_xml launch_yaml ];
      propagatedBuildInputs = [ launch_ros ros2cli ros2pkg ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2launch_security = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_pep257,
      buildRosPackage,
      demo_nodes_py,
      launch_ros,
      nodl_python,
      python3Packages,
      ros2launch,
      sros2,
    }:
    buildRosPackage {
      pname = "ros2launch_security";
      version = "1.0.0-5";
      src = sources.ros2launch_security;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [  ];
      propagatedBuildInputs = [ nodl_python ros2launch sros2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2launch_security_examples = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      ament_nodl,
      buildRosPackage,
      example_interfaces,
      launch_testing,
      launch_testing_ament_cmake,
      launch_testing_ros,
      nodl_python,
      nodl_to_policy,
      rclcpp,
      rclcpp_components,
      rclpy,
      ros2launch_security,
      sensor_msgs,
      sros2,
    }:
    buildRosPackage {
      pname = "ros2launch_security_examples";
      version = "1.0.0-5";
      src = sources.ros2launch_security_examples;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_nodl example_interfaces rclcpp rclcpp_components rclpy ros2launch_security sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2lifecycle = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      launch,
      launch_ros,
      launch_testing,
      launch_testing_ros,
      lifecycle_msgs,
      python3Packages,
      rclpy,
      ros2cli,
      ros2lifecycle_test_fixtures,
      ros2node,
      ros2service,
    }:
    buildRosPackage {
      pname = "ros2lifecycle";
      version = "0.32.1-1";
      src = sources.ros2lifecycle;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ lifecycle_msgs rclpy ros2cli ros2node ros2service ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2lifecycle_test_fixtures = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      rclcpp_lifecycle,
    }:
    buildRosPackage {
      pname = "ros2lifecycle_test_fixtures";
      version = "0.32.1-1";
      src = sources.ros2lifecycle_test_fixtures;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rclcpp_lifecycle ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2multicast = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      python3Packages,
      ros2cli,
    }:
    buildRosPackage {
      pname = "ros2multicast";
      version = "0.32.1-1";
      src = sources.ros2multicast;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ros2cli ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2node = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      launch,
      launch_ros,
      launch_testing,
      launch_testing_ros,
      python3Packages,
      rclpy,
      ros2cli,
      test_msgs,
    }:
    buildRosPackage {
      pname = "ros2node";
      version = "0.32.1-1";
      src = sources.ros2node;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy ros2cli ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2nodl = self.callPackage (
    {
      ament_flake8,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      ament_mypy,
      buildPackages,
      buildRosPackage,
      nodl_python,
      python3Packages,
      ros2cli,
      ros2pkg,
      ros2run,
    }:
    buildRosPackage {
      pname = "ros2nodl";
      version = "0.3.1-5";
      src = sources.ros2nodl;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python buildPackages.python3Packages.argcomplete ];
      buildInputs = [  ];
      propagatedBuildInputs = [ nodl_python ros2cli ros2pkg ros2run ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2param = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      launch,
      launch_ros,
      launch_testing,
      launch_testing_ros,
      python3Packages,
      rcl_interfaces,
      rclpy,
      ros2cli,
      ros2node,
      ros2service,
    }:
    buildRosPackage {
      pname = "ros2param";
      version = "0.32.1-1";
      src = sources.ros2param;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rcl_interfaces rclpy ros2cli ros2node ros2service ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2pkg = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_pep257,
      ament_xmllint,
      buildPackages,
      buildRosPackage,
      launch,
      launch_testing,
      launch_testing_ros,
      python3Packages,
      ros2cli,
    }:
    buildRosPackage {
      pname = "ros2pkg";
      version = "0.32.1-1";
      src = sources.ros2pkg;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_copyright ament_index_python buildPackages.python3Packages.catkin-pkg buildPackages.python3Packages.empy buildPackages.python3Packages.importlib-resources ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.setuptools ros2cli ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2run = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      python3Packages,
      ros2cli,
      ros2pkg,
    }:
    buildRosPackage {
      pname = "ros2run";
      version = "0.32.1-1";
      src = sources.ros2run;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ros2cli ros2pkg ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2service = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_xmllint,
      buildPackages,
      buildRosPackage,
      launch,
      launch_ros,
      launch_testing,
      launch_testing_ros,
      python3Packages,
      rclpy,
      ros2cli,
      rosidl_runtime_py,
      test_msgs,
    }:
    buildRosPackage {
      pname = "ros2service";
      version = "0.32.1-1";
      src = sources.ros2service;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.pyyaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy ros2cli rosidl_runtime_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2test = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      domain_coordinator,
      launch,
      launch_ros,
      launch_testing,
      launch_testing_ros,
      python3Packages,
      ros2cli,
    }:
    buildRosPackage {
      pname = "ros2test";
      version = "0.6.0-3";
      src = sources.ros2test;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ domain_coordinator launch launch_testing ];
      buildInputs = [  ];
      propagatedBuildInputs = [ launch_ros launch_testing_ros ros2cli ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2topic = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_xmllint,
      buildPackages,
      buildRosPackage,
      geometry_msgs,
      launch,
      launch_ros,
      launch_testing,
      launch_testing_ros,
      python3Packages,
      rclpy,
      ros2cli,
      rosgraph_msgs,
      rosidl_runtime_py,
      std_msgs,
      test_msgs,
    }:
    buildRosPackage {
      pname = "ros2topic";
      version = "0.32.1-1";
      src = sources.ros2topic;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy buildPackages.python3Packages.pyyaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy ros2cli rosidl_runtime_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2trace = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_mypy,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      python3Packages,
      ros2cli,
      tracetools_trace,
    }:
    buildRosPackage {
      pname = "ros2trace";
      version = "8.2.1-1";
      src = sources.ros2trace;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ros2cli tracetools_trace ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros2trace_analysis = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_mypy,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      python3Packages,
      ros2cli,
      tracetools_analysis,
    }:
    buildRosPackage {
      pname = "ros2trace_analysis";
      version = "3.0.0-6";
      src = sources.ros2trace_analysis;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ros2cli tracetools_analysis ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros_base = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      geometry2,
      kdl_parser,
      robot_state_publisher,
      ros_core,
      rosbag2,
      urdf,
    }:
    buildRosPackage {
      pname = "ros_base";
      version = "0.11.0-1";
      src = sources.ros_base;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry2 kdl_parser robot_state_publisher ros_core rosbag2 urdf ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros_core = self.callPackage (
    {
      ament_cmake,
      ament_cmake_auto,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_cmake_ros,
      ament_index_cpp,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      class_loader,
      common_interfaces,
      launch,
      launch_ros,
      launch_testing,
      launch_testing_ament_cmake,
      launch_testing_ros,
      launch_xml,
      launch_yaml,
      pluginlib,
      rcl_lifecycle,
      rclcpp,
      rclcpp_action,
      rclcpp_lifecycle,
      rclpy,
      ros2cli_common_extensions,
      ros2launch,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      sros2,
      sros2_cmake,
    }:
    buildRosPackage {
      pname = "ros_core";
      version = "0.11.0-1";
      src = sources.ros_core;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake ament_cmake_auto ament_cmake_gmock ament_cmake_gtest ament_cmake_pytest ament_cmake_ros ament_index_python ament_lint_auto launch launch_testing launch_testing_ament_cmake launch_xml launch_yaml ros_environment rosidl_default_generators ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp ament_lint_common class_loader common_interfaces launch_ros launch_testing_ros pluginlib rcl_lifecycle rclcpp rclcpp_action rclcpp_lifecycle rclpy ros2cli_common_extensions ros2launch rosidl_default_runtime sros2 sros2_cmake ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros_environment = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ros_environment";
      version = "4.2.1-1";
      src = sources.ros_environment;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ament_cmake_core ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros_gz = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ros_gz_bridge,
      ros_gz_image,
      ros_gz_sim,
      ros_gz_sim_demos,
    }:
    buildRosPackage {
      pname = "ros_gz";
      version = "1.0.2-1";
      src = sources.ros_gz;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ros_gz_bridge ros_gz_image ros_gz_sim ros_gz_sim_demos ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros_gz_bridge = self.callPackage (
    {
      actuator_msgs,
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      gps_msgs,
      gz_msgs_vendor,
      gz_transport_vendor,
      launch_ros,
      launch_testing,
      launch_testing_ament_cmake,
      nav_msgs,
      pkg-config,
      rclcpp,
      rclcpp_components,
      ros_gz_interfaces,
      rosgraph_msgs,
      rosidl_pycommon,
      sensor_msgs,
      std_msgs,
      tf2_msgs,
      trajectory_msgs,
      vision_msgs,
      yaml_cpp_vendor,
    }:
    buildRosPackage {
      pname = "ros_gz_bridge";
      version = "1.0.2-1";
      src = sources.ros_gz_bridge;
      nativeBuildInputs = [ ament_cmake pkg-config rosidl_pycommon ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ actuator_msgs geometry_msgs gps_msgs gz_msgs_vendor gz_transport_vendor nav_msgs rclcpp rclcpp_components ros_gz_interfaces rosgraph_msgs sensor_msgs std_msgs tf2_msgs trajectory_msgs vision_msgs yaml_cpp_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros_gz_image = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      gz_msgs_vendor,
      gz_transport_vendor,
      image_transport,
      pkg-config,
      rclcpp,
      ros_gz_bridge,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "ros_gz_image";
      version = "1.0.2-1";
      src = sources.ros_gz_image;
      nativeBuildInputs = [ ament_cmake pkg-config ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gz_msgs_vendor gz_transport_vendor image_transport rclcpp ros_gz_bridge sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros_gz_interfaces = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rcl_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "ros_gz_interfaces";
      version = "1.0.2-1";
      src = sources.ros_gz_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rcl_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros_gz_sim = self.callPackage (
    {
      ament_cmake,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      gflags,
      gz_math_vendor,
      gz_msgs_vendor,
      gz_sim_vendor,
      gz_transport_vendor,
      launch_ros,
      launch_testing,
      launch_testing_ament_cmake,
      pkg-config,
      rclcpp,
      std_msgs,
    }:
    buildRosPackage {
      pname = "ros_gz_sim";
      version = "1.0.2-1";
      src = sources.ros_gz_sim;
      nativeBuildInputs = [ ament_cmake pkg-config ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gflags gz_math_vendor gz_msgs_vendor gz_sim_vendor gz_transport_vendor rclcpp std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros_gz_sim_demos = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      gz_sim_vendor,
      image_transport_plugins,
      robot_state_publisher,
      ros_gz_bridge,
      ros_gz_image,
      ros_gz_sim,
      rqt_image_view,
      rqt_plot,
      rqt_topic,
      rviz2,
      sdformat_urdf,
      xacro,
    }:
    buildRosPackage {
      pname = "ros_gz_sim_demos";
      version = "1.0.2-1";
      src = sources.ros_gz_sim_demos;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gz_sim_vendor image_transport_plugins robot_state_publisher ros_gz_bridge ros_gz_image ros_gz_sim rqt_image_view rqt_plot rqt_topic rviz2 sdformat_urdf xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros_image_to_qimage = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cv_bridge,
      python_qt_binding,
      qt5,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "ros_image_to_qimage";
      version = "0.4.1-4";
      src = sources.ros_image_to_qimage;
      nativeBuildInputs = [ ament_cmake ament_cmake_pytest ament_cmake_python ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge python_qt_binding qt5.qtbase sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros_industrial_cmake_boilerplate = self.callPackage (
    {
      buildRosPackage,
      clang,
      cmake,
      cppcheck,
      gtest,
      include-what-you-use,
      lcov,
    }:
    buildRosPackage {
      pname = "ros_industrial_cmake_boilerplate";
      version = "0.5.4-3";
      src = sources.ros_industrial_cmake_boilerplate;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros_testing = self.callPackage (
    {
      ament_cmake,
      ament_cmake_core,
      ament_cmake_export_dependencies,
      buildRosPackage,
      launch_testing,
      launch_testing_ament_cmake,
      launch_testing_ros,
      ros2test,
    }:
    buildRosPackage {
      pname = "ros_testing";
      version = "0.6.0-3";
      src = sources.ros_testing;
      nativeBuildInputs = [ ament_cmake ament_cmake_core ament_cmake_export_dependencies ];
      propagatedNativeBuildInputs = [ launch_testing launch_testing_ament_cmake ];
      buildInputs = [  ];
      propagatedBuildInputs = [ launch_testing_ros ros2test ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ros_workspace = self.callPackage (
    {
      ament_cmake_core,
      ament_package,
      buildRosPackage,
      cmake,
    }:
    buildRosPackage {
      pname = "ros_workspace";
      version = "1.0.3-6";
      src = sources.ros_workspace;
      nativeBuildInputs = [ ament_cmake_core ament_package cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosapi = self.callPackage (
    {
      ament_cmake_pytest,
      ament_cmake_ros,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rcl_interfaces,
      rclpy,
      rmw_dds_common,
      ros2node,
      ros2param,
      ros2pkg,
      ros2service,
      ros2topic,
      rosapi_msgs,
      rosbridge_library,
      sensor_msgs,
      shape_msgs,
    }:
    buildRosPackage {
      pname = "rosapi";
      version = "1.3.2-3";
      src = sources.rosapi;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rcl_interfaces rclpy ros2node ros2param ros2pkg ros2service ros2topic rosapi_msgs rosbridge_library ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosapi_msgs = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      builtin_interfaces,
      rcl_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rosapi_msgs";
      version = "1.3.2-3";
      src = sources.rosapi_msgs;
      nativeBuildInputs = [ ament_cmake_ros rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rcl_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2 = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      ros2bag,
      rosbag2_compression,
      rosbag2_compression_zstd,
      rosbag2_cpp,
      rosbag2_py,
      rosbag2_storage,
      rosbag2_storage_default_plugins,
      rosbag2_test_common,
      rosbag2_tests,
      rosbag2_transport,
      shared_queues_vendor,
    }:
    buildRosPackage {
      pname = "rosbag2";
      version = "0.26.4-1";
      src = sources.rosbag2;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ros2bag rosbag2_compression rosbag2_compression_zstd rosbag2_cpp rosbag2_py rosbag2_storage rosbag2_storage_default_plugins rosbag2_transport shared_queues_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2_compression = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      rcpputils,
      rcutils,
      rosbag2_cpp,
      rosbag2_storage,
      rosbag2_test_common,
      test_msgs,
    }:
    buildRosPackage {
      pname = "rosbag2_compression";
      version = "0.26.4-1";
      src = sources.rosbag2_compression;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rcpputils rosbag2_cpp rosbag2_storage ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2_compression_zstd = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      pluginlib,
      rclcpp,
      rcutils,
      rosbag2_compression,
      rosbag2_test_common,
      zstd_vendor,
    }:
    buildRosPackage {
      pname = "rosbag2_compression_zstd";
      version = "0.26.4-1";
      src = sources.rosbag2_compression_zstd;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ pluginlib rosbag2_compression zstd_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2_cpp = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_index_cpp,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      pluginlib,
      rclcpp,
      rcpputils,
      rcutils,
      rmw,
      rmw_implementation,
      rosbag2_storage,
      rosbag2_storage_default_plugins,
      rosbag2_test_common,
      rosbag2_test_msgdefs,
      rosidl_runtime_c,
      rosidl_runtime_cpp,
      rosidl_typesupport_cpp,
      rosidl_typesupport_introspection_cpp,
      shared_queues_vendor,
      std_msgs,
      test_msgs,
    }:
    buildRosPackage {
      pname = "rosbag2_cpp";
      version = "0.26.4-1";
      src = sources.rosbag2_cpp;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rcutils rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp pluginlib rclcpp rcpputils rmw_implementation rosbag2_storage rosidl_runtime_c rosidl_runtime_cpp rosidl_typesupport_cpp rosidl_typesupport_introspection_cpp shared_queues_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2_examples_cpp = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      example_interfaces,
      rclcpp,
      rosbag2_cpp,
    }:
    buildRosPackage {
      pname = "rosbag2_examples_cpp";
      version = "0.26.4-1";
      src = sources.rosbag2_examples_cpp;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ example_interfaces rclcpp rosbag2_cpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2_examples_py = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      example_interfaces,
      python3Packages,
      rclpy,
      rosbag2_py,
      std_msgs,
    }:
    buildRosPackage {
      pname = "rosbag2_examples_py";
      version = "0.26.4-1";
      src = sources.rosbag2_examples_py;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ example_interfaces rclpy rosbag2_py std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2_interfaces = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rosbag2_interfaces";
      version = "0.26.4-1";
      src = sources.rosbag2_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2_performance_benchmarking = self.callPackage (
    {
      ament_cmake,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      launch,
      launch_ros,
      python3Packages,
      rclcpp,
      rmw,
      ros2bag,
      ros2launch,
      ros_testing,
      rosbag2_compression,
      rosbag2_cpp,
      rosbag2_performance_benchmarking_msgs,
      rosbag2_py,
      rosbag2_storage,
      rosbag2_storage_default_plugins,
      rosbag2_test_common,
      sensor_msgs,
      yaml_cpp_vendor,
    }:
    buildRosPackage {
      pname = "rosbag2_performance_benchmarking";
      version = "0.26.4-1";
      src = sources.rosbag2_performance_benchmarking;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_index_python launch rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ launch_ros python3Packages.psutil rclcpp rosbag2_compression rosbag2_cpp rosbag2_performance_benchmarking_msgs rosbag2_py rosbag2_storage sensor_msgs yaml_cpp_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2_performance_benchmarking_msgs = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_cmake,
      rosidl_default_generators,
      rosidl_default_runtime,
      rosidl_typesupport_cpp,
    }:
    buildRosPackage {
      pname = "rosbag2_performance_benchmarking_msgs";
      version = "0.26.4-1";
      src = sources.rosbag2_performance_benchmarking_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2_py = self.callPackage (
    {
      ament_cmake_python,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      pybind11_vendor,
      python3Packages,
      python_cmake_module,
      rcl_interfaces,
      rclpy,
      rosbag2_compression,
      rosbag2_compression_zstd,
      rosbag2_cpp,
      rosbag2_storage,
      rosbag2_storage_default_plugins,
      rosbag2_test_common,
      rosbag2_test_msgdefs,
      rosbag2_transport,
      rosidl_runtime_py,
      rpyutils,
      std_msgs,
    }:
    buildRosPackage {
      pname = "rosbag2_py";
      version = "0.26.4-1";
      src = sources.rosbag2_py;
      nativeBuildInputs = [ ament_cmake_python ament_cmake_ros python_cmake_module ];
      propagatedNativeBuildInputs = [ rpyutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ pybind11_vendor rclpy rosbag2_compression rosbag2_cpp rosbag2_storage rosbag2_transport ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2_storage = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      pluginlib,
      rclcpp,
      rcutils,
      rmw,
      rosbag2_test_common,
      yaml_cpp_vendor,
    }:
    buildRosPackage {
      pname = "rosbag2_storage";
      version = "0.26.4-1";
      src = sources.rosbag2_storage;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rcutils rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ pluginlib rclcpp yaml_cpp_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2_storage_default_plugins = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rosbag2_storage_mcap,
      rosbag2_storage_sqlite3,
    }:
    buildRosPackage {
      pname = "rosbag2_storage_default_plugins";
      version = "0.26.4-1";
      src = sources.rosbag2_storage_default_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosbag2_storage_mcap rosbag2_storage_sqlite3 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2_storage_mcap = self.callPackage (
    {
      ament_cmake,
      ament_cmake_clang_format,
      ament_cmake_gmock,
      ament_cmake_python,
      ament_index_cpp,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      mcap_vendor,
      pluginlib,
      rcutils,
      rosbag2_storage,
      rosbag2_test_common,
      std_msgs,
      yaml_cpp_vendor,
    }:
    buildRosPackage {
      pname = "rosbag2_storage_mcap";
      version = "0.26.4-1";
      src = sources.rosbag2_storage_mcap;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp mcap_vendor pluginlib rosbag2_storage yaml_cpp_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2_storage_sqlite3 = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      pluginlib,
      rcpputils,
      rcutils,
      rosbag2_storage,
      rosbag2_test_common,
      sqlite3_vendor,
      std_msgs,
      yaml_cpp_vendor,
    }:
    buildRosPackage {
      pname = "rosbag2_storage_sqlite3";
      version = "0.26.4-1";
      src = sources.rosbag2_storage_sqlite3;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ pluginlib rcpputils rosbag2_storage sqlite3_vendor yaml_cpp_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2_test_common = self.callPackage (
    {
      ament_cmake,
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      python_cmake_module,
      rclcpp,
      rcutils,
    }:
    buildRosPackage {
      pname = "rosbag2_test_common";
      version = "0.26.4-1";
      src = sources.rosbag2_test_common;
      nativeBuildInputs = [ ament_cmake ament_cmake_python python_cmake_module ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2_test_msgdefs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
    }:
    buildRosPackage {
      pname = "rosbag2_test_msgdefs";
      version = "0.26.4-1";
      src = sources.rosbag2_test_msgdefs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2_tests = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_index_cpp,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      rcpputils,
      ros2bag,
      rosbag2_compression,
      rosbag2_compression_zstd,
      rosbag2_cpp,
      rosbag2_interfaces,
      rosbag2_storage,
      rosbag2_storage_default_plugins,
      rosbag2_test_common,
      rosbag2_transport,
      std_msgs,
      test_msgs,
    }:
    buildRosPackage {
      pname = "rosbag2_tests";
      version = "0.26.4-1";
      src = sources.rosbag2_tests;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbag2_transport = self.callPackage (
    {
      ament_cmake_gmock,
      ament_cmake_ros,
      ament_index_cpp,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      composition_interfaces,
      keyboard_handler,
      rclcpp,
      rclcpp_components,
      rmw,
      rmw_implementation_cmake,
      rosbag2_compression,
      rosbag2_compression_zstd,
      rosbag2_cpp,
      rosbag2_interfaces,
      rosbag2_storage,
      rosbag2_storage_default_plugins,
      rosbag2_test_common,
      shared_queues_vendor,
      test_msgs,
      yaml_cpp_vendor,
    }:
    buildRosPackage {
      pname = "rosbag2_transport";
      version = "0.26.4-1";
      src = sources.rosbag2_transport;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ keyboard_handler rclcpp rclcpp_components rosbag2_compression rosbag2_cpp rosbag2_interfaces rosbag2_storage shared_queues_vendor yaml_cpp_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbridge_library = self.callPackage (
    {
      actionlib_msgs,
      ament_cmake,
      ament_cmake_pytest,
      ament_cmake_ros,
      buildRosPackage,
      builtin_interfaces,
      diagnostic_msgs,
      example_interfaces,
      geometry_msgs,
      nav_msgs,
      python3Packages,
      rclpy,
      rosbridge_test_msgs,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
      std_srvs,
      stereo_msgs,
      tf2_msgs,
      trajectory_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "rosbridge_library";
      version = "1.3.2-3";
      src = sources.rosbridge_library;
      nativeBuildInputs = [ ament_cmake ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.pillow python3Packages.pymongo rclpy rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbridge_msgs = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rosbridge_msgs";
      version = "1.3.2-3";
      src = sources.rosbridge_msgs;
      nativeBuildInputs = [ ament_cmake_ros rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ builtin_interfaces ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbridge_server = self.callPackage (
    {
      ament_cmake,
      ament_cmake_ros,
      buildRosPackage,
      launch,
      launch_ros,
      launch_testing,
      launch_testing_ament_cmake,
      launch_testing_ros,
      python3Packages,
      rclpy,
      rosapi,
      rosbridge_library,
      rosbridge_msgs,
      std_srvs,
    }:
    buildRosPackage {
      pname = "rosbridge_server";
      version = "1.3.2-3";
      src = sources.rosbridge_server;
      nativeBuildInputs = [ ament_cmake ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.tornado python3Packages.twisted rclpy rosapi rosbridge_library rosbridge_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbridge_suite = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rosapi,
      rosbridge_library,
      rosbridge_server,
    }:
    buildRosPackage {
      pname = "rosbridge_suite";
      version = "1.3.2-3";
      src = sources.rosbridge_suite;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosapi rosbridge_library rosbridge_server ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosbridge_test_msgs = self.callPackage (
    {
      actionlib_msgs,
      ament_cmake,
      ament_cmake_pytest,
      buildRosPackage,
      builtin_interfaces,
      diagnostic_msgs,
      example_interfaces,
      geometry_msgs,
      nav_msgs,
      rclpy,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
      std_srvs,
      stereo_msgs,
      tf2_msgs,
      trajectory_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "rosbridge_test_msgs";
      version = "1.3.2-3";
      src = sources.rosbridge_test_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rclpy rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosgraph_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rosgraph_msgs";
      version = "2.0.2-2";
      src = sources.rosgraph_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_adapter = self.callPackage (
    {
      ament_cmake,
      ament_cmake_core,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildPackages,
      buildRosPackage,
      python3,
      python3Packages,
      rosidl_cli,
    }:
    buildRosPackage {
      pname = "rosidl_adapter";
      version = "4.6.3-1";
      src = sources.rosidl_adapter;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_cmake_core python3 buildPackages.python3Packages.empy rosidl_cli ];
      buildInputs = [ ament_cmake ];
      propagatedBuildInputs = [ ament_cmake_core python3Packages.empy rosidl_cli ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_cli = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_xmllint,
      buildPackages,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "rosidl_cli";
      version = "4.6.3-1";
      src = sources.rosidl_cli;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.argcomplete buildPackages.python3Packages.importlib-metadata ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.argcomplete python3Packages.importlib-metadata ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_cmake = self.callPackage (
    {
      ament_cmake,
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_common,
      buildPackages,
      buildRosPackage,
      python3Packages,
      rosidl_pycommon,
    }:
    buildRosPackage {
      pname = "rosidl_cmake";
      version = "4.6.3-1";
      src = sources.rosidl_cmake;
      nativeBuildInputs = [ ament_cmake_python ];
      propagatedNativeBuildInputs = [ ament_cmake buildPackages.python3Packages.empy rosidl_pycommon ];
      buildInputs = [ ament_cmake_python ];
      propagatedBuildInputs = [ ament_cmake python3Packages.empy rosidl_pycommon ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_core_generators = self.callPackage (
    {
      ament_cmake,
      ament_cmake_core,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_cmake,
      rosidl_generator_c,
      rosidl_generator_cpp,
      rosidl_generator_py,
      rosidl_generator_type_description,
      rosidl_typesupport_c,
      rosidl_typesupport_cpp,
      rosidl_typesupport_fastrtps_c,
      rosidl_typesupport_fastrtps_cpp,
      rosidl_typesupport_introspection_c,
      rosidl_typesupport_introspection_cpp,
    }:
    buildRosPackage {
      pname = "rosidl_core_generators";
      version = "0.2.0-3";
      src = sources.rosidl_core_generators;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_cmake_core rosidl_cmake rosidl_generator_c rosidl_generator_cpp rosidl_generator_py ];
      buildInputs = [ ament_cmake rosidl_generator_type_description rosidl_typesupport_fastrtps_c rosidl_typesupport_fastrtps_cpp rosidl_typesupport_introspection_c rosidl_typesupport_introspection_cpp ];
      propagatedBuildInputs = [ ament_cmake_core rosidl_cmake rosidl_generator_c rosidl_generator_cpp rosidl_generator_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [ rosidl_typesupport_c rosidl_typesupport_cpp rosidl_typesupport_fastrtps_c rosidl_typesupport_fastrtps_cpp rosidl_typesupport_introspection_c rosidl_typesupport_introspection_cpp ];
    }
  ) {};
  rosidl_core_runtime = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_generator_py,
      rosidl_runtime_c,
      rosidl_runtime_cpp,
      rosidl_typesupport_c,
      rosidl_typesupport_cpp,
      rosidl_typesupport_fastrtps_c,
      rosidl_typesupport_fastrtps_cpp,
      rosidl_typesupport_introspection_c,
      rosidl_typesupport_introspection_cpp,
    }:
    buildRosPackage {
      pname = "rosidl_core_runtime";
      version = "0.2.0-3";
      src = sources.rosidl_core_runtime;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rosidl_generator_py ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_runtime_c rosidl_runtime_cpp rosidl_typesupport_c rosidl_typesupport_cpp rosidl_typesupport_fastrtps_c rosidl_typesupport_fastrtps_cpp rosidl_typesupport_introspection_c rosidl_typesupport_introspection_cpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_default_generators = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      ament_cmake_core,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_core_generators,
      service_msgs,
    }:
    buildRosPackage {
      pname = "rosidl_default_generators";
      version = "1.6.0-3";
      src = sources.rosidl_default_generators;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_cmake_core rosidl_core_generators ];
      buildInputs = [ ament_cmake ];
      propagatedBuildInputs = [ ament_cmake_core rosidl_core_generators ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [ action_msgs service_msgs ];
    }
  ) {};
  rosidl_default_runtime = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_core_runtime,
      service_msgs,
    }:
    buildRosPackage {
      pname = "rosidl_default_runtime";
      version = "1.6.0-3";
      src = sources.rosidl_default_runtime;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs rosidl_core_runtime service_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_dynamic_typesupport = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      rcutils,
      rosidl_runtime_c,
    }:
    buildRosPackage {
      pname = "rosidl_dynamic_typesupport";
      version = "0.1.2-3";
      src = sources.rosidl_dynamic_typesupport;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [ ament_cmake_ros ];
      propagatedBuildInputs = [ rcutils ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [ rosidl_runtime_c ];
    }
  ) {};
  rosidl_dynamic_typesupport_fastrtps = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      fastcdr,
      fastrtps,
      fastrtps_cmake_module,
      rcutils,
      rosidl_dynamic_typesupport,
    }:
    buildRosPackage {
      pname = "rosidl_dynamic_typesupport_fastrtps";
      version = "0.1.0-3";
      src = sources.rosidl_dynamic_typesupport_fastrtps;
      nativeBuildInputs = [ ament_cmake_ros fastrtps_cmake_module ];
      propagatedNativeBuildInputs = [ rcutils rosidl_dynamic_typesupport ];
      buildInputs = [  ];
      propagatedBuildInputs = [ fastcdr fastrtps ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_generator_c = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_python,
      ament_cmake_ros,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      python3,
      rcutils,
      rosidl_cli,
      rosidl_cmake,
      rosidl_generator_type_description,
      rosidl_parser,
      rosidl_pycommon,
      rosidl_typesupport_interface,
    }:
    buildRosPackage {
      pname = "rosidl_generator_c";
      version = "4.6.3-1";
      src = sources.rosidl_generator_c;
      nativeBuildInputs = [ ament_cmake_python ament_cmake_ros ];
      propagatedNativeBuildInputs = [ ament_cmake_core ament_index_python python3 rcutils rosidl_cli rosidl_cmake rosidl_generator_type_description rosidl_parser rosidl_pycommon ];
      buildInputs = [ ament_cmake_python ament_cmake_ros ];
      propagatedBuildInputs = [ ament_cmake_core ament_index_python rcutils rosidl_cli rosidl_cmake rosidl_generator_type_description rosidl_parser rosidl_pycommon ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [ rosidl_typesupport_interface ];
    }
  ) {};
  rosidl_generator_cpp = self.callPackage (
    {
      ament_cmake,
      ament_cmake_core,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      python3,
      rosidl_cli,
      rosidl_cmake,
      rosidl_generator_c,
      rosidl_generator_type_description,
      rosidl_parser,
      rosidl_pycommon,
      rosidl_runtime_cpp,
    }:
    buildRosPackage {
      pname = "rosidl_generator_cpp";
      version = "4.6.3-1";
      src = sources.rosidl_generator_cpp;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_cmake_core ament_index_python python3 rosidl_cli rosidl_cmake rosidl_generator_c rosidl_generator_type_description rosidl_parser rosidl_pycommon ];
      buildInputs = [ ament_cmake ];
      propagatedBuildInputs = [ ament_cmake_core ament_index_python rosidl_cli rosidl_cmake rosidl_generator_c rosidl_generator_type_description rosidl_parser rosidl_pycommon ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [ rosidl_runtime_cpp ];
    }
  ) {};
  rosidl_generator_dds_idl = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_cli,
      rosidl_pycommon,
    }:
    buildRosPackage {
      pname = "rosidl_generator_dds_idl";
      version = "0.11.1-3";
      src = sources.rosidl_generator_dds_idl;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake ament_index_python rosidl_cli rosidl_pycommon ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_generator_py = self.callPackage (
    {
      ament_cmake,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_flake8,
      ament_cmake_pep257,
      ament_cmake_pytest,
      ament_cmake_uncrustify,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildPackages,
      buildRosPackage,
      python3Packages,
      python_cmake_module,
      rmw,
      rosidl_cli,
      rosidl_cmake,
      rosidl_generator_c,
      rosidl_generator_cpp,
      rosidl_parser,
      rosidl_pycommon,
      rosidl_runtime_c,
      rosidl_typesupport_c,
      rosidl_typesupport_fastrtps_c,
      rosidl_typesupport_interface,
      rosidl_typesupport_introspection_c,
      rpyutils,
      test_interface_files,
    }:
    buildRosPackage {
      pname = "rosidl_generator_py";
      version = "0.22.0-2";
      src = sources.rosidl_generator_py;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake ament_cmake_cppcheck ament_cmake_cpplint ament_cmake_flake8 ament_cmake_pep257 ament_cmake_uncrustify ament_index_python buildPackages.python3Packages.numpy python_cmake_module rmw rosidl_cli rosidl_generator_c rosidl_parser rosidl_pycommon rpyutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_cmake ament_cmake_cppcheck ament_cmake_cpplint ament_cmake_flake8 ament_cmake_pep257 ament_cmake_uncrustify ament_index_python python3Packages.numpy python_cmake_module rmw rosidl_cli rosidl_generator_c rosidl_parser rosidl_pycommon rpyutils ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [ rosidl_runtime_c rosidl_typesupport_c rosidl_typesupport_interface ];
    }
  ) {};
  rosidl_generator_type_description = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_python,
      ament_cmake_ros,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      python3,
      rosidl_cli,
      rosidl_parser,
    }:
    buildRosPackage {
      pname = "rosidl_generator_type_description";
      version = "4.6.3-1";
      src = sources.rosidl_generator_type_description;
      nativeBuildInputs = [ ament_cmake_python ament_cmake_ros ];
      propagatedNativeBuildInputs = [ ament_cmake_core ament_index_python python3 rosidl_cli rosidl_parser ];
      buildInputs = [ ament_cmake_python ament_cmake_ros ];
      propagatedBuildInputs = [ ament_cmake_core ament_index_python rosidl_cli rosidl_parser ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_parser = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildPackages,
      buildRosPackage,
      python3Packages,
      rosidl_adapter,
    }:
    buildRosPackage {
      pname = "rosidl_parser";
      version = "4.6.3-1";
      src = sources.rosidl_parser;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.lark rosidl_adapter ];
      buildInputs = [ ament_cmake ];
      propagatedBuildInputs = [ python3Packages.lark rosidl_adapter ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_pycommon = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
      rosidl_parser,
    }:
    buildRosPackage {
      pname = "rosidl_pycommon";
      version = "4.6.3-1";
      src = sources.rosidl_pycommon;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ rosidl_parser ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_parser ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_runtime_c = self.callPackage (
    {
      ament_cmake,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      performance_test_fixture,
      rcutils,
      rosidl_typesupport_interface,
    }:
    buildRosPackage {
      pname = "rosidl_runtime_c";
      version = "4.6.3-1";
      src = sources.rosidl_runtime_c;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ ament_cmake rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_typesupport_interface ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_runtime_cpp = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      performance_test_fixture,
      rosidl_runtime_c,
    }:
    buildRosPackage {
      pname = "rosidl_runtime_cpp";
      version = "4.6.3-1";
      src = sources.rosidl_runtime_cpp;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_runtime_c ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_runtime_py = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_xmllint,
      buildPackages,
      buildRosPackage,
      python3Packages,
      rosidl_parser,
      std_msgs,
      std_srvs,
      test_msgs,
    }:
    buildRosPackage {
      pname = "rosidl_runtime_py";
      version = "0.13.1-2";
      src = sources.rosidl_runtime_py;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy buildPackages.python3Packages.pyyaml rosidl_parser ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_typesupport_c = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_ros,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      mimick_vendor,
      performance_test_fixture,
      python3,
      rcpputils,
      rcutils,
      rosidl_cli,
      rosidl_generator_c,
      rosidl_pycommon,
      rosidl_runtime_c,
      rosidl_typesupport_fastrtps_c,
      rosidl_typesupport_interface,
      rosidl_typesupport_introspection_c,
    }:
    buildRosPackage {
      pname = "rosidl_typesupport_c";
      version = "3.2.2-1";
      src = sources.rosidl_typesupport_c;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ ament_cmake_core ament_index_python python3 rcutils rosidl_cli rosidl_generator_c rosidl_pycommon ];
      buildInputs = [ rosidl_typesupport_fastrtps_c rosidl_typesupport_introspection_c ];
      propagatedBuildInputs = [ rcpputils rosidl_runtime_c rosidl_typesupport_interface ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_typesupport_cpp = self.callPackage (
    {
      ament_cmake_core,
      ament_cmake_ros,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      performance_test_fixture,
      python3,
      rcpputils,
      rcutils,
      rosidl_cli,
      rosidl_generator_c,
      rosidl_generator_type_description,
      rosidl_pycommon,
      rosidl_runtime_c,
      rosidl_runtime_cpp,
      rosidl_typesupport_c,
      rosidl_typesupport_fastrtps_cpp,
      rosidl_typesupport_interface,
      rosidl_typesupport_introspection_cpp,
    }:
    buildRosPackage {
      pname = "rosidl_typesupport_cpp";
      version = "3.2.2-1";
      src = sources.rosidl_typesupport_cpp;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ ament_cmake_core ament_index_python python3 rcutils rosidl_cli rosidl_generator_c rosidl_generator_type_description rosidl_pycommon ];
      buildInputs = [ rosidl_typesupport_fastrtps_cpp rosidl_typesupport_introspection_cpp ];
      propagatedBuildInputs = [ rcpputils rosidl_runtime_c rosidl_runtime_cpp rosidl_typesupport_c rosidl_typesupport_interface ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_typesupport_fastrtps_c = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_cmake_python,
      ament_cmake_ros,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      fastcdr,
      fastrtps_cmake_module,
      osrf_testing_tools_cpp,
      performance_test_fixture,
      python3,
      rcutils,
      rmw,
      rosidl_cli,
      rosidl_generator_c,
      rosidl_pycommon,
      rosidl_runtime_c,
      rosidl_runtime_cpp,
      rosidl_typesupport_fastrtps_cpp,
      rosidl_typesupport_interface,
    }:
    buildRosPackage {
      pname = "rosidl_typesupport_fastrtps_c";
      version = "3.6.0-2";
      src = sources.rosidl_typesupport_fastrtps_c;
      nativeBuildInputs = [ ament_cmake_python ];
      propagatedNativeBuildInputs = [ ament_cmake_ros ament_index_python fastrtps_cmake_module python3 rmw rosidl_cli rosidl_generator_c rosidl_pycommon ];
      buildInputs = [  ];
      propagatedBuildInputs = [ fastcdr rosidl_runtime_c rosidl_runtime_cpp rosidl_typesupport_fastrtps_cpp rosidl_typesupport_interface ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_typesupport_fastrtps_cpp = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_cmake_python,
      ament_cmake_ros,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      fastcdr,
      fastrtps_cmake_module,
      osrf_testing_tools_cpp,
      performance_test_fixture,
      python3,
      rcutils,
      rmw,
      rosidl_cli,
      rosidl_generator_c,
      rosidl_generator_cpp,
      rosidl_pycommon,
      rosidl_runtime_c,
      rosidl_runtime_cpp,
      rosidl_typesupport_interface,
    }:
    buildRosPackage {
      pname = "rosidl_typesupport_fastrtps_cpp";
      version = "3.6.0-2";
      src = sources.rosidl_typesupport_fastrtps_cpp;
      nativeBuildInputs = [ ament_cmake_python ];
      propagatedNativeBuildInputs = [ ament_cmake_ros ament_index_python fastrtps_cmake_module python3 rmw rosidl_cli rosidl_generator_c rosidl_generator_cpp rosidl_pycommon ];
      buildInputs = [  ];
      propagatedBuildInputs = [ fastcdr rosidl_runtime_c rosidl_runtime_cpp rosidl_typesupport_interface ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_typesupport_interface = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "rosidl_typesupport_interface";
      version = "4.6.3-1";
      src = sources.rosidl_typesupport_interface;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_typesupport_introspection_c = self.callPackage (
    {
      ament_cmake,
      ament_cmake_ros,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      python3,
      rosidl_cli,
      rosidl_cmake,
      rosidl_generator_c,
      rosidl_parser,
      rosidl_pycommon,
      rosidl_runtime_c,
      rosidl_typesupport_interface,
    }:
    buildRosPackage {
      pname = "rosidl_typesupport_introspection_c";
      version = "4.6.3-1";
      src = sources.rosidl_typesupport_introspection_c;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ ament_cmake ament_index_python python3 rosidl_cli rosidl_cmake rosidl_generator_c rosidl_parser rosidl_pycommon ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_runtime_c rosidl_typesupport_interface ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosidl_typesupport_introspection_cpp = self.callPackage (
    {
      ament_cmake,
      ament_cmake_ros,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      python3,
      rosidl_cli,
      rosidl_cmake,
      rosidl_generator_c,
      rosidl_generator_cpp,
      rosidl_parser,
      rosidl_pycommon,
      rosidl_runtime_c,
      rosidl_runtime_cpp,
      rosidl_typesupport_interface,
      rosidl_typesupport_introspection_c,
    }:
    buildRosPackage {
      pname = "rosidl_typesupport_introspection_cpp";
      version = "4.6.3-1";
      src = sources.rosidl_typesupport_introspection_cpp;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ ament_cmake ament_index_python python3 rosidl_cli rosidl_cmake rosidl_generator_c rosidl_generator_cpp rosidl_parser rosidl_pycommon ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_runtime_c rosidl_runtime_cpp rosidl_typesupport_interface rosidl_typesupport_introspection_c ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rosx_introspection = self.callPackage (
    {
      ament_cmake,
      ament_index_cpp,
      buildRosPackage,
      fastcdr,
      geometry_msgs,
      rapidjson,
      rclcpp,
      rosbag2_cpp,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "rosx_introspection";
      version = "1.0.1-1";
      src = sources.rosx_introspection;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp fastcdr rapidjson rclcpp rosbag2_cpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rot_conv = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      eigen,
      eigen3_cmake_module,
    }:
    buildRosPackage {
      pname = "rot_conv";
      version = "1.1.0-4";
      src = sources.rot_conv;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ eigen3_cmake_module ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rplidar_ros = self.callPackage (
    {
      ament_cmake_auto,
      ament_cmake_ros,
      buildRosPackage,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      std_srvs,
    }:
    buildRosPackage {
      pname = "rplidar_ros";
      version = "2.1.0-4";
      src = sources.rplidar_ros;
      nativeBuildInputs = [ ament_cmake_auto ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rclcpp_components sensor_msgs std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rpyutils = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "rpyutils";
      version = "0.4.1-3";
      src = sources.rpyutils;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt = self.callPackage (
    {
      buildRosPackage,
      python3Packages,
      rqt_gui,
      rqt_gui_cpp,
      rqt_gui_py,
      rqt_py_common,
    }:
    buildRosPackage {
      pname = "rqt";
      version = "1.6.0-2";
      src = sources.rqt;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rqt_gui rqt_gui_cpp rqt_gui_py rqt_py_common ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_action = self.callPackage (
    {
      ament_flake8,
      ament_xmllint,
      buildRosPackage,
      rqt_gui,
      rqt_gui_py,
      rqt_msg,
      rqt_py_common,
    }:
    buildRosPackage {
      pname = "rqt_action";
      version = "2.2.0-3";
      src = sources.rqt_action;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rqt_gui rqt_gui_py rqt_msg rqt_py_common ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_bag = self.callPackage (
    {
      ament_copyright,
      buildRosPackage,
      python3Packages,
      python_qt_binding,
      rclpy,
      rosbag2_py,
      rqt_gui,
      rqt_gui_py,
    }:
    buildRosPackage {
      pname = "rqt_bag";
      version = "1.5.3-1";
      src = sources.rqt_bag;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python_qt_binding rclpy rosbag2_py rqt_gui rqt_gui_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_bag_plugins = self.callPackage (
    {
      buildRosPackage,
      geometry_msgs,
      python3Packages,
      rclpy,
      rosbag2,
      rqt_bag,
      rqt_gui,
      rqt_gui_py,
      rqt_plot,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "rqt_bag_plugins";
      version = "1.5.3-1";
      src = sources.rqt_bag_plugins;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs python3Packages.pillow python3Packages.pycairo rclpy rosbag2 rqt_bag rqt_gui rqt_gui_py rqt_plot sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_common_plugins = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rqt_action,
      rqt_bag,
      rqt_bag_plugins,
      rqt_console,
      rqt_graph,
      rqt_image_view,
      rqt_msg,
      rqt_plot,
      rqt_publisher,
      rqt_py_common,
      rqt_py_console,
      rqt_reconfigure,
      rqt_service_caller,
      rqt_shell,
      rqt_srv,
      rqt_topic,
    }:
    buildRosPackage {
      pname = "rqt_common_plugins";
      version = "1.2.0-4";
      src = sources.rqt_common_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rqt_action rqt_bag rqt_bag_plugins rqt_console rqt_graph rqt_image_view rqt_msg rqt_plot rqt_publisher rqt_py_common rqt_py_console rqt_reconfigure rqt_service_caller rqt_shell rqt_srv rqt_topic ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_console = self.callPackage (
    {
      ament_index_python,
      buildRosPackage,
      python3Packages,
      python_qt_binding,
      rcl_interfaces,
      rclpy,
      rqt_gui,
      rqt_gui_py,
      rqt_py_common,
    }:
    buildRosPackage {
      pname = "rqt_console";
      version = "2.2.1-3";
      src = sources.rqt_console;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python_qt_binding rcl_interfaces rclpy rqt_gui rqt_gui_py rqt_py_common ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_controller_manager = self.callPackage (
    {
      buildRosPackage,
      controller_manager,
      controller_manager_msgs,
      rclpy,
      rqt_gui,
      rqt_gui_py,
    }:
    buildRosPackage {
      pname = "rqt_controller_manager";
      version = "4.13.0-1";
      src = sources.rqt_controller_manager;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ controller_manager controller_manager_msgs rclpy rqt_gui rqt_gui_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_gauges = self.callPackage (
    {
      ament_flake8,
      ament_index_python,
      ament_xmllint,
      buildRosPackage,
      qt_gui,
      qt_gui_py_common,
      rclpy,
      rqt_gui,
      rqt_gui_py,
    }:
    buildRosPackage {
      pname = "rqt_gauges";
      version = "0.0.3-2";
      src = sources.rqt_gauges;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [  ];
      propagatedBuildInputs = [ qt_gui qt_gui_py_common rclpy rqt_gui rqt_gui_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_graph = self.callPackage (
    {
      ament_index_python,
      buildRosPackage,
      python3Packages,
      python_qt_binding,
      qt_dotgraph,
      rqt_gui,
      rqt_gui_py,
    }:
    buildRosPackage {
      pname = "rqt_graph";
      version = "1.5.4-1";
      src = sources.rqt_graph;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python_qt_binding qt_dotgraph rqt_gui rqt_gui_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_gui = self.callPackage (
    {
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildPackages,
      buildRosPackage,
      python_qt_binding,
      qt_gui,
      rclpy,
    }:
    buildRosPackage {
      pname = "rqt_gui";
      version = "1.6.0-2";
      src = sources.rqt_gui;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python buildPackages.python3Packages.catkin-pkg ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python_qt_binding qt_gui rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_gui_cpp = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      pluginlib,
      qt5,
      qt_gui_cpp,
      rclcpp,
    }:
    buildRosPackage {
      pname = "rqt_gui_cpp";
      version = "1.6.0-2";
      src = sources.rqt_gui_cpp;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ pluginlib qt_gui_cpp rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_gui_py = self.callPackage (
    {
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      qt_gui,
      rqt_gui,
    }:
    buildRosPackage {
      pname = "rqt_gui_py";
      version = "1.6.0-2";
      src = sources.rqt_gui_py;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ qt_gui rqt_gui ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_image_overlay = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      compressed_image_transport,
      image_transport,
      pluginlib,
      qt5,
      rclcpp,
      ros_image_to_qimage,
      rqt_gui,
      rqt_gui_cpp,
      rqt_image_overlay_layer,
      std_msgs,
    }:
    buildRosPackage {
      pname = "rqt_image_overlay";
      version = "0.3.1-4";
      src = sources.rqt_image_overlay;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ image_transport pluginlib qt5.qtbase rclcpp ros_image_to_qimage rqt_gui rqt_gui_cpp rqt_image_overlay_layer ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_image_overlay_layer = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      message_filters,
      pluginlib,
      qt5,
      rclcpp,
      rcpputils,
      rosidl_runtime_cpp,
    }:
    buildRosPackage {
      pname = "rqt_image_overlay_layer";
      version = "0.3.1-4";
      src = sources.rqt_image_overlay_layer;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ message_filters pluginlib qt5.qtbase rclcpp rcpputils rosidl_runtime_cpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_image_view = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      cv_bridge,
      geometry_msgs,
      image_transport,
      qt5,
      qt_gui_cpp,
      rclcpp,
      rqt_gui,
      rqt_gui_cpp,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "rqt_image_view";
      version = "1.3.0-2";
      src = sources.rqt_image_view;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ cv_bridge geometry_msgs image_transport qt_gui_cpp rclcpp rqt_gui rqt_gui_cpp sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_joint_trajectory_controller = self.callPackage (
    {
      buildRosPackage,
      control_msgs,
      controller_manager_msgs,
      python_qt_binding,
      qt_gui,
      rclpy,
      rqt_gui,
      rqt_gui_py,
      trajectory_msgs,
    }:
    buildRosPackage {
      pname = "rqt_joint_trajectory_controller";
      version = "4.11.0-1";
      src = sources.rqt_joint_trajectory_controller;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ control_msgs controller_manager_msgs python_qt_binding qt_gui rclpy rqt_gui rqt_gui_py trajectory_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_moveit = self.callPackage (
    {
      buildPackages,
      buildRosPackage,
      python_qt_binding,
      rclpy,
      rosidl_default_generators,
      rqt_gui,
      rqt_gui_py,
      rqt_py_common,
      rqt_topic,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "rqt_moveit";
      version = "1.0.1-5";
      src = sources.rqt_moveit;
      nativeBuildInputs = [ buildPackages.python3Packages.setuptools rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python_qt_binding rclpy rqt_gui rqt_gui_py rqt_py_common rqt_topic sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_msg = self.callPackage (
    {
      ament_flake8,
      ament_index_python,
      ament_xmllint,
      buildRosPackage,
      python3Packages,
      python_qt_binding,
      rclpy,
      rosidl_runtime_py,
      rqt_console,
      rqt_gui,
      rqt_gui_py,
      rqt_py_common,
    }:
    buildRosPackage {
      pname = "rqt_msg";
      version = "1.5.1-3";
      src = sources.rqt_msg;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python_qt_binding rclpy rosidl_runtime_py rqt_console rqt_gui rqt_gui_py rqt_py_common ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_plot = self.callPackage (
    {
      ament_copyright,
      buildPackages,
      buildRosPackage,
      python3Packages,
      python_qt_binding,
      qt_gui_py_common,
      rclpy,
      rqt_gui,
      rqt_gui_py,
      rqt_py_common,
      std_msgs,
    }:
    buildRosPackage {
      pname = "rqt_plot";
      version = "1.4.0-2";
      src = sources.rqt_plot;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.catkin-pkg buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.matplotlib python_qt_binding qt_gui_py_common rclpy rqt_gui rqt_gui_py rqt_py_common std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_publisher = self.callPackage (
    {
      ament_index_python,
      buildPackages,
      buildRosPackage,
      python3Packages,
      python_qt_binding,
      qt_gui_py_common,
      rclpy,
      rosidl_runtime_py,
      rqt_gui,
      rqt_gui_py,
      rqt_py_common,
    }:
    buildRosPackage {
      pname = "rqt_publisher";
      version = "1.7.2-2";
      src = sources.rqt_publisher;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python_qt_binding qt_gui_py_common rclpy rosidl_runtime_py rqt_gui rqt_gui_py rqt_py_common ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_py_common = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      buildRosPackage,
      python_cmake_module,
      python_qt_binding,
      qt5,
      qt_gui,
      rclpy,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "rqt_py_common";
      version = "1.6.0-2";
      src = sources.rqt_py_common;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python_qt_binding qt5.qtbase qt_gui rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_py_console = self.callPackage (
    {
      ament_index_python,
      buildRosPackage,
      python3Packages,
      python_qt_binding,
      qt_gui,
      qt_gui_py_common,
      rclpy,
      rqt_gui,
      rqt_gui_py,
    }:
    buildRosPackage {
      pname = "rqt_py_console";
      version = "1.2.2-3";
      src = sources.rqt_py_console;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python_qt_binding qt_gui qt_gui_py_common rclpy rqt_gui rqt_gui_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_reconfigure = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_xmllint,
      buildPackages,
      buildRosPackage,
      python3Packages,
      python_qt_binding,
      qt_gui_py_common,
      rclpy,
      rqt_console,
      rqt_gui,
      rqt_gui_py,
      rqt_py_common,
    }:
    buildRosPackage {
      pname = "rqt_reconfigure";
      version = "1.6.2-3";
      src = sources.rqt_reconfigure;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python buildPackages.python3Packages.pyyaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python_qt_binding qt_gui_py_common rclpy rqt_console rqt_gui rqt_gui_py rqt_py_common ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_robot_dashboard = self.callPackage (
    {
      buildPackages,
      buildRosPackage,
      diagnostic_msgs,
      python_qt_binding,
      qt_gui,
      rclpy,
      rqt_console,
      rqt_gui,
      rqt_gui_py,
      rqt_robot_monitor,
    }:
    buildRosPackage {
      pname = "rqt_robot_dashboard";
      version = "0.6.1-5";
      src = sources.rqt_robot_dashboard;
      nativeBuildInputs = [ buildPackages.python3Packages.setuptools ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ diagnostic_msgs python_qt_binding qt_gui rclpy rqt_console rqt_gui rqt_gui_py rqt_robot_monitor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_robot_monitor = self.callPackage (
    {
      buildRosPackage,
      diagnostic_msgs,
      python_qt_binding,
      qt_gui,
      qt_gui_py_common,
      rclpy,
      rosidl_default_generators,
      rqt_gui,
      rqt_gui_py,
      rqt_py_common,
    }:
    buildRosPackage {
      pname = "rqt_robot_monitor";
      version = "1.0.6-1";
      src = sources.rqt_robot_monitor;
      nativeBuildInputs = [ rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ diagnostic_msgs python_qt_binding qt_gui qt_gui_py_common rclpy rqt_gui rqt_gui_py rqt_py_common ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_robot_steering = self.callPackage (
    {
      ament_index_python,
      buildRosPackage,
      geometry_msgs,
      python_qt_binding,
      rclpy,
      rqt_gui,
      rqt_gui_py,
    }:
    buildRosPackage {
      pname = "rqt_robot_steering";
      version = "1.0.0-6";
      src = sources.rqt_robot_steering;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs python_qt_binding rclpy rqt_gui rqt_gui_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_runtime_monitor = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_pep257,
      buildRosPackage,
      diagnostic_msgs,
      python3Packages,
      python_qt_binding,
      qt_gui,
      rclpy,
      rqt_gui,
      rqt_gui_py,
    }:
    buildRosPackage {
      pname = "rqt_runtime_monitor";
      version = "1.0.0-5";
      src = sources.rqt_runtime_monitor;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python ];
      buildInputs = [  ];
      propagatedBuildInputs = [ diagnostic_msgs python_qt_binding qt_gui rclpy rqt_gui rqt_gui_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_service_caller = self.callPackage (
    {
      buildRosPackage,
      python3Packages,
      rqt_gui,
      rqt_gui_py,
      rqt_py_common,
    }:
    buildRosPackage {
      pname = "rqt_service_caller";
      version = "1.2.1-3";
      src = sources.rqt_service_caller;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rqt_gui rqt_gui_py rqt_py_common ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_shell = self.callPackage (
    {
      buildPackages,
      buildRosPackage,
      python3Packages,
      python_qt_binding,
      qt_gui,
      qt_gui_py_common,
      rqt_gui,
      rqt_gui_py,
    }:
    buildRosPackage {
      pname = "rqt_shell";
      version = "1.2.2-2";
      src = sources.rqt_shell;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.catkin-pkg ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python_qt_binding qt_gui qt_gui_py_common rqt_gui rqt_gui_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_srv = self.callPackage (
    {
      ament_flake8,
      ament_xmllint,
      buildRosPackage,
      python3Packages,
      rqt_gui,
      rqt_gui_py,
      rqt_msg,
    }:
    buildRosPackage {
      pname = "rqt_srv";
      version = "1.2.2-3";
      src = sources.rqt_srv;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rqt_gui rqt_gui_py rqt_msg ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_tf_tree = self.callPackage (
    {
      buildRosPackage,
      python3Packages,
      python_qt_binding,
      qt_dotgraph,
      rclpy,
      rqt_graph,
      rqt_gui,
      rqt_gui_py,
      tf2_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "rqt_tf_tree";
      version = "1.0.5-1";
      src = sources.rqt_tf_tree;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python_qt_binding qt_dotgraph rclpy rqt_graph rqt_gui rqt_gui_py tf2_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rqt_topic = self.callPackage (
    {
      ament_flake8,
      ament_xmllint,
      buildRosPackage,
      python3Packages,
      python_qt_binding,
      rclpy,
      ros2topic,
      rqt_gui,
      rqt_gui_py,
      rqt_py_common,
    }:
    buildRosPackage {
      pname = "rqt_topic";
      version = "1.7.2-2";
      src = sources.rqt_topic;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python_qt_binding rclpy ros2topic rqt_gui rqt_gui_py rqt_py_common ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rsl = self.callPackage (
    {
      buildRosPackage,
      clang,
      doxygen,
      eigen,
      fmt,
      git,
      rclcpp,
      tcb_span,
      tl_expected,
    }:
    buildRosPackage {
      pname = "rsl";
      version = "1.1.0-3";
      src = sources.rsl;
      nativeBuildInputs = [ doxygen ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen fmt rclcpp tcb_span tl_expected ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rt_manipulators_cpp = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      dynamixel_sdk,
      eigen,
      eigen3_cmake_module,
      libyamlcpp,
      yaml_cpp_vendor,
    }:
    buildRosPackage {
      pname = "rt_manipulators_cpp";
      version = "1.0.0-4";
      src = sources.rt_manipulators_cpp;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ eigen3_cmake_module ];
      buildInputs = [  ];
      propagatedBuildInputs = [ dynamixel_sdk eigen libyamlcpp yaml_cpp_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rt_manipulators_examples = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      rt_manipulators_cpp,
    }:
    buildRosPackage {
      pname = "rt_manipulators_examples";
      version = "1.0.0-4";
      src = sources.rt_manipulators_examples;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rt_manipulators_cpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rtabmap = self.callPackage (
    {
      buildRosPackage,
      cmake,
      cv_bridge,
      libg2o,
      libpointmatcher,
      octomap,
      pcl,
      proj,
      qt_gui_cpp,
      sqlite,
      zlib,
    }:
    buildRosPackage {
      pname = "rtabmap";
      version = "0.21.5-2";
      src = sources.rtabmap;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ proj ];
      propagatedBuildInputs = [ cv_bridge libg2o libpointmatcher octomap pcl qt_gui_cpp sqlite zlib ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rtabmap_conversions = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      cv_bridge,
      geometry_msgs,
      image_geometry,
      laser_geometry,
      pcl_conversions,
      rclcpp,
      rclcpp_components,
      ros_environment,
      rtabmap,
      rtabmap_msgs,
      sensor_msgs,
      std_msgs,
      tf2,
      tf2_eigen,
      tf2_geometry_msgs,
    }:
    buildRosPackage {
      pname = "rtabmap_conversions";
      version = "0.21.5-3";
      src = sources.rtabmap_conversions;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge geometry_msgs image_geometry laser_geometry pcl_conversions rclcpp rclcpp_components rtabmap rtabmap_msgs sensor_msgs std_msgs tf2 tf2_eigen tf2_geometry_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rtabmap_demos = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rtabmap_odom,
      rtabmap_rviz_plugins,
      rtabmap_slam,
      rtabmap_util,
      rtabmap_viz,
    }:
    buildRosPackage {
      pname = "rtabmap_demos";
      version = "0.21.5-3";
      src = sources.rtabmap_demos;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rtabmap_odom rtabmap_rviz_plugins rtabmap_slam rtabmap_util rtabmap_viz ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rtabmap_examples = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      imu_filter_madgwick,
      rtabmap_odom,
      rtabmap_rviz_plugins,
      rtabmap_slam,
      rtabmap_util,
      rtabmap_viz,
      tf2_ros,
      velodyne,
    }:
    buildRosPackage {
      pname = "rtabmap_examples";
      version = "0.21.5-3";
      src = sources.rtabmap_examples;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ imu_filter_madgwick rtabmap_odom rtabmap_rviz_plugins rtabmap_slam rtabmap_util rtabmap_viz tf2_ros velodyne ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rtabmap_launch = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rtabmap_msgs,
      rtabmap_odom,
      rtabmap_rviz_plugins,
      rtabmap_slam,
      rtabmap_util,
      rtabmap_viz,
    }:
    buildRosPackage {
      pname = "rtabmap_launch";
      version = "0.21.5-3";
      src = sources.rtabmap_launch;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rtabmap_msgs rtabmap_odom rtabmap_rviz_plugins rtabmap_slam rtabmap_util rtabmap_viz ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rtabmap_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
      std_srvs,
    }:
    buildRosPackage {
      pname = "rtabmap_msgs";
      version = "0.21.5-3";
      src = sources.rtabmap_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime sensor_msgs std_msgs std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rtabmap_odom = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      cv_bridge,
      image_geometry,
      laser_geometry,
      message_filters,
      nav_msgs,
      pcl_conversions,
      pcl_ros,
      pluginlib,
      rclcpp,
      rclcpp_components,
      rtabmap_conversions,
      rtabmap_msgs,
      rtabmap_sync,
      rtabmap_util,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "rtabmap_odom";
      version = "0.21.5-3";
      src = sources.rtabmap_odom;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge image_geometry laser_geometry message_filters nav_msgs pcl_conversions pcl_ros pluginlib rclcpp rclcpp_components rtabmap_conversions rtabmap_msgs rtabmap_sync rtabmap_util sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rtabmap_python = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "rtabmap_python";
      version = "0.21.5-3";
      src = sources.rtabmap_python;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rtabmap_ros = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rtabmap_conversions,
      rtabmap_demos,
      rtabmap_examples,
      rtabmap_launch,
      rtabmap_msgs,
      rtabmap_odom,
      rtabmap_python,
      rtabmap_rviz_plugins,
      rtabmap_slam,
      rtabmap_sync,
      rtabmap_util,
      rtabmap_viz,
    }:
    buildRosPackage {
      pname = "rtabmap_ros";
      version = "0.21.5-3";
      src = sources.rtabmap_ros;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rtabmap_conversions rtabmap_demos rtabmap_examples rtabmap_launch rtabmap_msgs rtabmap_odom rtabmap_python rtabmap_rviz_plugins rtabmap_slam rtabmap_sync rtabmap_util rtabmap_viz ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rtabmap_rviz_plugins = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      pcl_conversions,
      pluginlib,
      rclcpp,
      rtabmap_conversions,
      rtabmap_msgs,
      rviz_common,
      rviz_default_plugins,
      rviz_rendering,
      sensor_msgs,
      std_msgs,
      tf2,
    }:
    buildRosPackage {
      pname = "rtabmap_rviz_plugins";
      version = "0.21.5-3";
      src = sources.rtabmap_rviz_plugins;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ pcl_conversions pluginlib rclcpp rtabmap_conversions rtabmap_msgs rviz_common rviz_default_plugins rviz_rendering sensor_msgs std_msgs tf2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rtabmap_slam = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      cv_bridge,
      geometry_msgs,
      nav_msgs,
      rclcpp,
      rclcpp_components,
      rtabmap_msgs,
      rtabmap_sync,
      rtabmap_util,
      sensor_msgs,
      std_msgs,
      std_srvs,
      tf2,
      tf2_ros,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "rtabmap_slam";
      version = "0.21.5-3";
      src = sources.rtabmap_slam;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge geometry_msgs nav_msgs rclcpp rclcpp_components rtabmap_msgs rtabmap_sync rtabmap_util sensor_msgs std_msgs std_srvs tf2 tf2_ros visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rtabmap_sync = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      cv_bridge,
      diagnostic_updater,
      image_transport,
      message_filters,
      nav_msgs,
      rclcpp,
      rclcpp_components,
      rtabmap_conversions,
      rtabmap_msgs,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "rtabmap_sync";
      version = "0.21.5-3";
      src = sources.rtabmap_sync;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge diagnostic_updater image_transport message_filters nav_msgs rclcpp rclcpp_components rtabmap_conversions rtabmap_msgs sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rtabmap_util = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      cv_bridge,
      image_transport,
      laser_geometry,
      message_filters,
      nav_msgs,
      octomap_msgs,
      pcl_conversions,
      pcl_ros,
      rclcpp,
      rclcpp_components,
      rtabmap_conversions,
      rtabmap_msgs,
      sensor_msgs,
      std_msgs,
      stereo_msgs,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "rtabmap_util";
      version = "0.21.5-3";
      src = sources.rtabmap_util;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge image_transport laser_geometry message_filters nav_msgs octomap_msgs pcl_conversions pcl_ros rclcpp rclcpp_components rtabmap_conversions rtabmap_msgs sensor_msgs std_msgs stereo_msgs tf2 tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rtabmap_viz = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      cv_bridge,
      geometry_msgs,
      nav_msgs,
      rclcpp,
      rtabmap_msgs,
      rtabmap_sync,
      std_msgs,
      std_srvs,
      tf2,
    }:
    buildRosPackage {
      pname = "rtabmap_viz";
      version = "0.21.5-3";
      src = sources.rtabmap_viz;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge geometry_msgs nav_msgs rclcpp rtabmap_msgs rtabmap_sync std_msgs std_srvs tf2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rtcm_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "rtcm_msgs";
      version = "1.1.6-4";
      src = sources.rtcm_msgs;
      nativeBuildInputs = [ ament_cmake ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ builtin_interfaces ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rti_connext_dds_cmake_module = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "rti_connext_dds_cmake_module";
      version = "0.22.0-2";
      src = sources.rti_connext_dds_cmake_module;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rttest = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "rttest";
      version = "0.17.0-3";
      src = sources.rttest;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ruckig = self.callPackage (
    {
      buildRosPackage,
      cmake,
    }:
    buildRosPackage {
      pname = "ruckig";
      version = "0.9.2-5";
      src = sources.ruckig;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rviz2 = self.callPackage (
    {
      ament_cmake,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_lint_cmake,
      ament_cmake_pytest,
      ament_cmake_uncrustify,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      geometry_msgs,
      python3,
      python3Packages,
      qt5,
      rclcpp,
      rviz_common,
      rviz_default_plugins,
      rviz_ogre_vendor,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "rviz2";
      version = "14.1.2-1";
      src = sources.rviz2;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ python3 rviz_common rviz_default_plugins rviz_ogre_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rviz_2d_overlay_msgs = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "rviz_2d_overlay_msgs";
      version = "1.3.0-3";
      src = sources.rviz_2d_overlay_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rviz_2d_overlay_plugins = self.callPackage (
    {
      ament_cmake,
      boost,
      buildRosPackage,
      rviz_2d_overlay_msgs,
      rviz_common,
      rviz_ogre_vendor,
      rviz_rendering,
      std_msgs,
    }:
    buildRosPackage {
      pname = "rviz_2d_overlay_plugins";
      version = "1.3.0-3";
      src = sources.rviz_2d_overlay_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost rviz_2d_overlay_msgs rviz_common rviz_ogre_vendor rviz_rendering std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rviz_assimp_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_lint_cmake,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      ament_lint_auto,
      assimp,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "rviz_assimp_vendor";
      version = "14.1.2-1";
      src = sources.rviz_assimp_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ assimp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rviz_common = self.callPackage (
    {
      ament_cmake,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_lint_cmake,
      ament_cmake_uncrustify,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      geometry_msgs,
      message_filters,
      pluginlib,
      qt5,
      rclcpp,
      resource_retriever,
      rviz_ogre_vendor,
      rviz_rendering,
      sensor_msgs,
      std_msgs,
      std_srvs,
      tf2,
      tf2_ros,
      tinyxml2_vendor,
      urdf,
      yaml_cpp_vendor,
    }:
    buildRosPackage {
      pname = "rviz_common";
      version = "14.1.2-1";
      src = sources.rviz_common;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ qt5.qtsvg ];
      propagatedBuildInputs = [ geometry_msgs message_filters pluginlib qt5.qtbase rclcpp resource_retriever rviz_ogre_vendor rviz_rendering sensor_msgs std_msgs std_srvs tf2 tf2_ros tinyxml2_vendor urdf yaml_cpp_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rviz_default_plugins = self.callPackage (
    {
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_lint_cmake,
      ament_cmake_ros,
      ament_cmake_uncrustify,
      ament_cmake_xmllint,
      ament_index_cpp,
      ament_lint_auto,
      buildRosPackage,
      geometry_msgs,
      gz_math_vendor,
      image_transport,
      interactive_markers,
      laser_geometry,
      map_msgs,
      nav_msgs,
      pluginlib,
      point_cloud_transport,
      qt5,
      rclcpp,
      resource_retriever,
      rviz_common,
      rviz_ogre_vendor,
      rviz_rendering,
      rviz_rendering_tests,
      rviz_visual_testing_framework,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
      urdf,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "rviz_default_plugins";
      version = "14.1.2-1";
      src = sources.rviz_default_plugins;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ geometry_msgs gz_math_vendor image_transport interactive_markers laser_geometry map_msgs nav_msgs pluginlib point_cloud_transport qt5.qtbase rclcpp resource_retriever rviz_common rviz_ogre_vendor rviz_rendering tf2 tf2_geometry_msgs tf2_ros urdf visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rviz_imu_plugin = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      message_filters,
      pluginlib,
      qt5,
      rclcpp,
      rviz_common,
      rviz_ogre_vendor,
      rviz_rendering,
      sensor_msgs,
      tf2,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "rviz_imu_plugin";
      version = "2.1.3-4";
      src = sources.rviz_imu_plugin;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ message_filters pluginlib qt5.qtbase rclcpp rviz_common rviz_ogre_vendor rviz_rendering sensor_msgs tf2 tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rviz_ogre_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      freetype,
      libGL,
      libGLU,
      xorg,
    }:
    buildRosPackage {
      pname = "rviz_ogre_vendor";
      version = "14.1.2-1";
      src = sources.rviz_ogre_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ freetype libGL libGLU xorg.libX11 xorg.libXaw xorg.libXrandr ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rviz_rendering = self.callPackage (
    {
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_lint_cmake,
      ament_cmake_ros,
      ament_cmake_uncrustify,
      ament_cmake_xmllint,
      ament_index_cpp,
      ament_lint_auto,
      buildRosPackage,
      eigen,
      eigen3_cmake_module,
      qt5,
      resource_retriever,
      rviz_assimp_vendor,
      rviz_ogre_vendor,
    }:
    buildRosPackage {
      pname = "rviz_rendering";
      version = "14.1.2-1";
      src = sources.rviz_rendering;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [ eigen3_cmake_module ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp eigen qt5.qtbase resource_retriever rviz_assimp_vendor rviz_ogre_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rviz_rendering_tests = self.callPackage (
    {
      ament_cmake,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_lint_cmake,
      ament_cmake_uncrustify,
      ament_cmake_xmllint,
      ament_index_cpp,
      ament_lint_auto,
      buildRosPackage,
      qt5,
      resource_retriever,
      rviz_rendering,
    }:
    buildRosPackage {
      pname = "rviz_rendering_tests";
      version = "14.1.2-1";
      src = sources.rviz_rendering_tests;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ resource_retriever rviz_rendering ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rviz_satellite = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      angles,
      buildRosPackage,
      qt5,
      rclcpp,
      rcpputils,
      rviz_common,
      rviz_default_plugins,
      sensor_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "rviz_satellite";
      version = "4.0.0-1";
      src = sources.rviz_satellite;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ angles rclcpp rcpputils rviz_common rviz_default_plugins sensor_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rviz_visual_testing_framework = self.callPackage (
    {
      ament_cmake,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_lint_cmake,
      ament_cmake_uncrustify,
      ament_cmake_xmllint,
      ament_lint_auto,
      buildRosPackage,
      geometry_msgs,
      qt5,
      rclcpp,
      rcutils,
      rviz_common,
      rviz_ogre_vendor,
      rviz_rendering,
      std_msgs,
      tf2,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "rviz_visual_testing_framework";
      version = "14.1.2-1";
      src = sources.rviz_visual_testing_framework;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_cmake_gtest rcutils ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ geometry_msgs rclcpp rviz_common rviz_ogre_vendor rviz_rendering std_msgs tf2 tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  rviz_visual_tools = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_index_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      eigen,
      eigen3_cmake_module,
      eigen_stl_containers,
      geometry_msgs,
      interactive_markers,
      launch,
      launch_ros,
      pluginlib,
      qt5,
      rclcpp,
      rclcpp_components,
      rviz2,
      rviz_common,
      rviz_default_plugins,
      rviz_ogre_vendor,
      rviz_rendering,
      sensor_msgs,
      shape_msgs,
      std_msgs,
      tf2,
      tf2_eigen,
      tf2_geometry_msgs,
      trajectory_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "rviz_visual_tools";
      version = "4.1.4-4";
      src = sources.rviz_visual_tools;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_index_python eigen3_cmake_module launch ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ eigen eigen_stl_containers geometry_msgs interactive_markers launch_ros pluginlib qt5.qtbase rclcpp rclcpp_components rviz2 rviz_common rviz_default_plugins rviz_ogre_vendor rviz_rendering sensor_msgs shape_msgs std_msgs tf2 tf2_eigen tf2_geometry_msgs trajectory_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  sdformat_test_files = self.callPackage (
    {
      buildRosPackage,
      cmake,
    }:
    buildRosPackage {
      pname = "sdformat_test_files";
      version = "1.0.2-1";
      src = sources.sdformat_test_files;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ cmake ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  sdformat_urdf = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      pluginlib,
      rcutils,
      sdformat_test_files,
      sdformat_vendor,
      tinyxml2_vendor,
      urdf,
      urdf_parser_plugin,
      urdfdom-headers,
    }:
    buildRosPackage {
      pname = "sdformat_urdf";
      version = "1.0.2-1";
      src = sources.sdformat_urdf;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake_ros rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ pluginlib sdformat_vendor tinyxml2_vendor urdf urdf_parser_plugin urdfdom-headers ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  sdformat_vendor = self.callPackage (
    {
      ament_cmake_copyright,
      ament_cmake_core,
      ament_cmake_lint_cmake,
      ament_cmake_test,
      ament_cmake_vendor_package,
      ament_cmake_xmllint,
      buildRosPackage,
      gz_cmake_vendor,
      gz_math_vendor,
      gz_tools_vendor,
      gz_utils_vendor,
      libxml2,
      python3Packages,
      tinyxml-2,
      urdfdom,
    }:
    buildRosPackage {
      pname = "sdformat_vendor";
      version = "0.0.5-1";
      src = sources.sdformat_vendor;
      nativeBuildInputs = [ ament_cmake_core ament_cmake_test ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gz_cmake_vendor gz_math_vendor gz_tools_vendor gz_utils_vendor python3Packages.pybind11 tinyxml-2 urdfdom ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  sdl2_vendor = self.callPackage (
    {
      SDL2,
      ament_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "sdl2_vendor";
      version = "3.3.0-3";
      src = sources.sdl2_vendor;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ SDL2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  self_test = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      diagnostic_msgs,
      diagnostic_updater,
      rclcpp,
      ros_environment,
    }:
    buildRosPackage {
      pname = "self_test";
      version = "4.2.0-1";
      src = sources.self_test;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ diagnostic_msgs diagnostic_updater rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  sensor_msgs = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_cmake,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "sensor_msgs";
      version = "5.3.5-1";
      src = sources.sensor_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  sensor_msgs_py = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildPackages,
      buildRosPackage,
      python3Packages,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "sensor_msgs_py";
      version = "5.3.5-1";
      src = sources.sensor_msgs_py;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  septentrio_gnss_driver = self.callPackage (
    {
      ament_cmake,
      boost,
      buildRosPackage,
      diagnostic_msgs,
      geographiclib,
      geometry_msgs,
      gps_msgs,
      libpcap,
      nav_msgs,
      nmea_msgs,
      rclcpp,
      rclcpp_components,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      tf2,
      tf2_eigen,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "septentrio_gnss_driver";
      version = "1.4.0-3";
      src = sources.septentrio_gnss_driver;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost diagnostic_msgs geographiclib geometry_msgs gps_msgs libpcap nav_msgs nmea_msgs rclcpp rclcpp_components rosidl_default_runtime sensor_msgs tf2 tf2_eigen tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  serial_driver = self.callPackage (
    {
      ament_cmake_auto,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      asio,
      asio_cmake_module,
      buildRosPackage,
      io_context,
      rclcpp,
      rclcpp_components,
      rclcpp_lifecycle,
      std_msgs,
    }:
    buildRosPackage {
      pname = "serial_driver";
      version = "1.2.0-4";
      src = sources.serial_driver;
      nativeBuildInputs = [ ament_cmake_auto asio_cmake_module ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ asio io_context rclcpp rclcpp_components rclcpp_lifecycle std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  service_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_core_generators,
      rosidl_core_runtime,
    }:
    buildRosPackage {
      pname = "service_msgs";
      version = "2.0.2-2";
      src = sources.service_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_core_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_core_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  shape_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "shape_msgs";
      version = "5.3.5-1";
      src = sources.shape_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  shared_queues_vendor = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "shared_queues_vendor";
      version = "0.26.4-1";
      src = sources.shared_queues_vendor;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  sick_safevisionary_base = self.callPackage (
    {
      buildRosPackage,
      cmake,
    }:
    buildRosPackage {
      pname = "sick_safevisionary_base";
      version = "1.0.1-3";
      src = sources.sick_safevisionary_base;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  sick_safevisionary_driver = self.callPackage (
    {
      ament_cmake,
      boost,
      buildRosPackage,
      cv_bridge,
      lifecycle_msgs,
      rclcpp,
      rclcpp_lifecycle,
      sensor_msgs,
      sick_safevisionary_base,
      sick_safevisionary_interfaces,
    }:
    buildRosPackage {
      pname = "sick_safevisionary_driver";
      version = "1.0.3-3";
      src = sources.sick_safevisionary_driver;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost cv_bridge lifecycle_msgs rclcpp rclcpp_lifecycle sensor_msgs sick_safevisionary_base sick_safevisionary_interfaces ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  sick_safevisionary_interfaces = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "sick_safevisionary_interfaces";
      version = "1.0.3-3";
      src = sources.sick_safevisionary_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  sick_safevisionary_tests = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      launch,
      launch_ros,
      launch_testing_ament_cmake,
      sick_safevisionary_driver,
    }:
    buildRosPackage {
      pname = "sick_safevisionary_tests";
      version = "1.0.3-3";
      src = sources.sick_safevisionary_tests;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  sick_scan_xd = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      diagnostic_msgs,
      diagnostic_updater,
      geometry_msgs,
      nav_msgs,
      rcl_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
      tf2,
      tf2_ros,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "sick_scan_xd";
      version = "3.4.0-1";
      src = sources.sick_scan_xd;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ diagnostic_msgs diagnostic_updater geometry_msgs nav_msgs rcl_interfaces rosidl_default_runtime sensor_msgs std_msgs tf2 tf2_ros visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  simple_actions = self.callPackage (
    {
      action_msgs,
      action_tutorials_interfaces,
      ament_cmake,
      ament_cmake_clang_format,
      ament_cmake_cppcheck,
      ament_cmake_flake8,
      ament_cmake_lint_cmake,
      ament_cmake_pep257,
      ament_cmake_python,
      buildRosPackage,
      rclcpp,
      rclcpp_action,
      rclpy,
    }:
    buildRosPackage {
      pname = "simple_actions";
      version = "0.3.0-3";
      src = sources.simple_actions;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs rclcpp rclcpp_action rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  simple_launch = self.callPackage (
    {
      ament_cmake_python,
      ament_index_python,
      buildRosPackage,
      launch,
      launch_ros,
      xacro,
    }:
    buildRosPackage {
      pname = "simple_launch";
      version = "1.10.1-1";
      src = sources.simple_launch;
      nativeBuildInputs = [ ament_cmake_python ];
      propagatedNativeBuildInputs = [ ament_index_python launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ launch_ros xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  simulation = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      ros_base,
      ros_gz_bridge,
      ros_gz_image,
      ros_gz_interfaces,
      ros_gz_sim,
    }:
    buildRosPackage {
      pname = "simulation";
      version = "0.11.0-1";
      src = sources.simulation;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ros_base ros_gz_bridge ros_gz_image ros_gz_interfaces ros_gz_sim ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  slam_toolbox = self.callPackage (
    {
      ament_cmake,
      ament_cmake_cpplint,
      ament_cmake_flake8,
      ament_cmake_gtest,
      ament_cmake_uncrustify,
      ament_lint_auto,
      bond,
      bondcpp,
      boost,
      buildRosPackage,
      builtin_interfaces,
      ceres-solver,
      eigen,
      interactive_markers,
      launch,
      launch_testing,
      liblapack,
      lifecycle_msgs,
      message_filters,
      nav_msgs,
      pluginlib,
      qt5,
      rclcpp,
      rclcpp_lifecycle,
      rosidl_default_generators,
      rviz_common,
      rviz_default_plugins,
      rviz_ogre_vendor,
      rviz_rendering,
      sensor_msgs,
      std_msgs,
      std_srvs,
      suitesparse,
      tbb,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
      tf2_sensor_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "slam_toolbox";
      version = "2.8.1-2";
      src = sources.slam_toolbox;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rosidl_default_generators ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ bond bondcpp boost builtin_interfaces ceres-solver eigen interactive_markers liblapack lifecycle_msgs message_filters nav_msgs pluginlib qt5.qtbase rclcpp rclcpp_lifecycle rviz_common rviz_default_plugins rviz_ogre_vendor rviz_rendering sensor_msgs std_msgs std_srvs suitesparse tbb tf2 tf2_geometry_msgs tf2_ros tf2_sensor_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  slider_publisher = self.callPackage (
    {
      ament_cmake,
      buildPackages,
      buildRosPackage,
      python3Packages,
      rqt_gui_py,
    }:
    buildRosPackage {
      pname = "slider_publisher";
      version = "2.3.1-3";
      src = sources.slider_publisher;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.scipy rqt_gui_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  smach = self.callPackage (
    {
      ament_cmake,
      ament_cmake_python,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "smach";
      version = "3.0.3-3";
      src = sources.smach;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  smach_msgs = self.callPackage (
    {
      ament_cmake,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_flake8,
      ament_cmake_pep257,
      ament_cmake_uncrustify,
      ament_lint,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "smach_msgs";
      version = "3.0.3-3";
      src = sources.smach_msgs;
      nativeBuildInputs = [ ament_cmake ament_cmake_cppcheck ament_cmake_flake8 ament_cmake_pep257 rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  smach_ros = self.callPackage (
    {
      ament_cmake,
      ament_cmake_python,
      buildRosPackage,
      rclpy,
      smach,
      smach_msgs,
      std_msgs,
      std_srvs,
    }:
    buildRosPackage {
      pname = "smach_ros";
      version = "3.0.3-3";
      src = sources.smach_ros;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy smach smach_msgs std_msgs std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  smclib = self.callPackage (
    {
      ament_cmake,
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "smclib";
      version = "4.1.0-1";
      src = sources.smclib;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  snowbot_operating_system = self.callPackage (
    {
      ament_cmake,
      ament_cmake_clang_format,
      ament_cmake_ros,
      buildRosPackage,
      geometry_msgs,
      pluginlib,
      rviz_common,
      rviz_rendering,
    }:
    buildRosPackage {
      pname = "snowbot_operating_system";
      version = "0.1.2-5";
      src = sources.snowbot_operating_system;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ ament_cmake_ros ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs pluginlib rviz_common rviz_rendering ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  soccer_geometry_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "soccer_geometry_msgs";
      version = "1.0.0-2";
      src = sources.soccer_geometry_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  soccer_interfaces = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      soccer_vision_2d_msgs,
      soccer_vision_3d_msgs,
      soccer_vision_attribute_msgs,
    }:
    buildRosPackage {
      pname = "soccer_interfaces";
      version = "1.0.0-2";
      src = sources.soccer_interfaces;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ soccer_vision_2d_msgs soccer_vision_3d_msgs soccer_vision_attribute_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  soccer_model_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      soccer_geometry_msgs,
      soccer_vision_attribute_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "soccer_model_msgs";
      version = "1.0.0-2";
      src = sources.soccer_model_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime soccer_geometry_msgs soccer_vision_attribute_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  soccer_vision_2d_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      soccer_vision_attribute_msgs,
      vision_msgs,
    }:
    buildRosPackage {
      pname = "soccer_vision_2d_msgs";
      version = "1.0.0-2";
      src = sources.soccer_vision_2d_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime soccer_vision_attribute_msgs vision_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  soccer_vision_3d_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      soccer_vision_attribute_msgs,
      vision_msgs,
    }:
    buildRosPackage {
      pname = "soccer_vision_3d_msgs";
      version = "1.0.0-2";
      src = sources.soccer_vision_3d_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime soccer_vision_attribute_msgs vision_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  soccer_vision_3d_rviz_markers = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
      rclpy,
      soccer_vision_3d_msgs,
      soccer_vision_attribute_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "soccer_vision_3d_rviz_markers";
      version = "1.0.0-2";
      src = sources.soccer_vision_3d_rviz_markers;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclpy soccer_vision_3d_msgs soccer_vision_attribute_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  soccer_vision_attribute_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "soccer_vision_attribute_msgs";
      version = "1.0.0-2";
      src = sources.soccer_vision_attribute_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  sol_vendor = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      buildRosPackage,
      git,
      ouxt_lint_common,
    }:
    buildRosPackage {
      pname = "sol_vendor";
      version = "0.0.3-5";
      src = sources.sol_vendor;
      nativeBuildInputs = [ ament_cmake git ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  sophus = self.callPackage (
    {
      buildRosPackage,
      ceres-solver,
      cmake,
      eigen,
      fmt,
    }:
    buildRosPackage {
      pname = "sophus";
      version = "1.22.9102-2";
      src = sources.sophus;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ceres-solver eigen fmt ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  spacenav = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      libspnav,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      spacenavd,
    }:
    buildRosPackage {
      pname = "spacenav";
      version = "3.3.0-3";
      src = sources.spacenav;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs libspnav rclcpp rclcpp_components sensor_msgs spacenavd ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  spatio_temporal_voxel_layer = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      laser_geometry,
      message_filters,
      nav2_costmap_2d,
      openexr,
      openvdb_vendor,
      pcl,
      pcl_conversions,
      pluginlib,
      rclcpp,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
      std_srvs,
      tf2_geometry_msgs,
      tf2_ros,
      tf2_sensor_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "spatio_temporal_voxel_layer";
      version = "2.5.0-1";
      src = sources.spatio_temporal_voxel_layer;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs laser_geometry message_filters nav2_costmap_2d openexr openvdb_vendor pcl pcl_conversions pluginlib rclcpp rosidl_default_runtime sensor_msgs std_msgs std_srvs tf2_geometry_msgs tf2_ros tf2_sensor_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  spdlog_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      spdlog,
    }:
    buildRosPackage {
      pname = "spdlog_vendor";
      version = "1.6.1-1";
      src = sources.spdlog_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ spdlog ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  spinnaker_camera_driver = self.callPackage (
    {
      ament_cmake,
      ament_cmake_clang_format,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      camera_info_manager,
      curl,
      dpkg,
      ffmpeg,
      flir_camera_msgs,
      image_transport,
      libusb1,
      libyamlcpp,
      python3Packages,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "spinnaker_camera_driver";
      version = "2.0.20-1";
      src = sources.spinnaker_camera_driver;
      nativeBuildInputs = [ ament_cmake ament_cmake_ros curl ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ dpkg python3Packages.distro ];
      propagatedBuildInputs = [ camera_info_manager ffmpeg flir_camera_msgs image_transport libusb1 libyamlcpp rclcpp rclcpp_components sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  spinnaker_synchronized_camera_driver = self.callPackage (
    {
      ament_cmake,
      ament_cmake_black,
      ament_cmake_clang_format,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      rclcpp_components,
      spinnaker_camera_driver,
    }:
    buildRosPackage {
      pname = "spinnaker_synchronized_camera_driver";
      version = "2.0.20-1";
      src = sources.spinnaker_synchronized_camera_driver;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rclcpp_components spinnaker_camera_driver ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  splsm_7 = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "splsm_7";
      version = "3.0.1-4";
      src = sources.splsm_7;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  splsm_7_conversion = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
      splsm_7,
    }:
    buildRosPackage {
      pname = "splsm_7_conversion";
      version = "3.0.1-4";
      src = sources.splsm_7_conversion;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.construct splsm_7 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  sqlite3_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      buildRosPackage,
      sqlite,
    }:
    buildRosPackage {
      pname = "sqlite3_vendor";
      version = "0.26.4-1";
      src = sources.sqlite3_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ sqlite ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  srdfdom = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_cmake,
      boost,
      buildRosPackage,
      console-bridge,
      console_bridge_vendor,
      tinyxml2_vendor,
      urdf,
      urdfdom_headers,
      urdfdom_py,
    }:
    buildRosPackage {
      pname = "srdfdom";
      version = "2.0.4-4";
      src = sources.srdfdom;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ boost urdfdom_headers ];
      propagatedBuildInputs = [ console-bridge console_bridge_vendor tinyxml2_vendor urdf urdfdom_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  sros2 = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_index_python,
      ament_mypy,
      ament_pep257,
      buildPackages,
      buildRosPackage,
      python3Packages,
      rclpy,
      ros2cli,
      ros_testing,
      test_msgs,
    }:
    buildRosPackage {
      pname = "sros2";
      version = "0.13.2-1";
      src = sources.sros2;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_index_python buildPackages.python3Packages.argcomplete buildPackages.python3Packages.importlib-resources ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.cryptography python3Packages.lxml rclpy ros2cli ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  sros2_cmake = self.callPackage (
    {
      ament_cmake,
      ament_cmake_test,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ros2cli,
      sros2,
    }:
    buildRosPackage {
      pname = "sros2_cmake";
      version = "0.13.2-1";
      src = sources.sros2_cmake;
      nativeBuildInputs = [ ament_cmake ament_cmake_test ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ros2cli sros2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  statistics_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "statistics_msgs";
      version = "2.0.2-2";
      src = sources.statistics_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  std_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "std_msgs";
      version = "5.3.5-1";
      src = sources.std_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  std_srvs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "std_srvs";
      version = "5.3.5-1";
      src = sources.std_srvs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  steering_controllers_library = self.callPackage (
    {
      ackermann_msgs,
      ament_cmake,
      ament_cmake_gmock,
      backward_ros,
      buildRosPackage,
      control_msgs,
      controller_interface,
      controller_manager,
      generate_parameter_library,
      geometry_msgs,
      hardware_interface,
      nav_msgs,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      rcpputils,
      realtime_tools,
      ros2_control_test_assets,
      std_srvs,
      tf2,
      tf2_geometry_msgs,
      tf2_msgs,
    }:
    buildRosPackage {
      pname = "steering_controllers_library";
      version = "4.11.0-1";
      src = sources.steering_controllers_library;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ generate_parameter_library ];
      propagatedBuildInputs = [ ackermann_msgs backward_ros control_msgs controller_interface geometry_msgs hardware_interface nav_msgs pluginlib rclcpp rclcpp_lifecycle rcpputils realtime_tools std_srvs tf2 tf2_geometry_msgs tf2_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  steering_functions = self.callPackage (
    {
      buildRosPackage,
      cmake,
      eigen,
      ros_environment,
    }:
    buildRosPackage {
      pname = "steering_functions";
      version = "0.3.0-1";
      src = sources.steering_functions;
      nativeBuildInputs = [ cmake ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  stereo_image_proc = self.callPackage (
    {
      ament_cmake_auto,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cv_bridge,
      image_geometry,
      image_proc,
      image_transport,
      launch,
      launch_ros,
      launch_testing,
      launch_testing_ament_cmake,
      message_filters,
      python3Packages,
      python_cmake_module,
      rclcpp,
      rclcpp_components,
      rclpy,
      ros_testing,
      sensor_msgs,
      stereo_msgs,
    }:
    buildRosPackage {
      pname = "stereo_image_proc";
      version = "5.0.3-1";
      src = sources.stereo_image_proc;
      nativeBuildInputs = [ ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge image_geometry image_proc image_transport message_filters rclcpp rclcpp_components sensor_msgs stereo_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  stereo_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "stereo_msgs";
      version = "5.3.5-1";
      src = sources.stereo_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  stomp = self.callPackage (
    {
      buildRosPackage,
      cmake,
      console-bridge,
      eigen,
      gtest,
      ros_industrial_cmake_boilerplate,
    }:
    buildRosPackage {
      pname = "stomp";
      version = "0.1.2-4";
      src = sources.stomp;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ ros_industrial_cmake_boilerplate ];
      propagatedBuildInputs = [ console-bridge eigen ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  swri_cli_tools = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      marti_introspection_msgs,
      rcl_interfaces,
      rclpy,
      ros2cli,
    }:
    buildRosPackage {
      pname = "swri_cli_tools";
      version = "3.6.1-3";
      src = sources.swri_cli_tools;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ marti_introspection_msgs rcl_interfaces rclpy ros2cli ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  swri_console = self.callPackage (
    {
      ament_cmake,
      boost,
      buildRosPackage,
      qt5,
      rcl_interfaces,
      rclcpp,
      rosbag2_transport,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "swri_console";
      version = "2.0.5-1";
      src = sources.swri_console;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ boost qt5.qtbase rcl_interfaces rclcpp rosbag2_transport rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  swri_console_util = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      rclcpp,
    }:
    buildRosPackage {
      pname = "swri_console_util";
      version = "3.6.1-3";
      src = sources.swri_console_util;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  swri_dbw_interface = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "swri_dbw_interface";
      version = "3.6.1-3";
      src = sources.swri_dbw_interface;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  swri_geometry_util = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      buildRosPackage,
      cv_bridge,
      eigen,
      geos,
      pkg-config,
      rclcpp,
      tf2,
    }:
    buildRosPackage {
      pname = "swri_geometry_util";
      version = "3.6.1-3";
      src = sources.swri_geometry_util;
      nativeBuildInputs = [ ament_cmake pkg-config ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge eigen geos rclcpp tf2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  swri_image_util = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_index_cpp,
      boost,
      buildRosPackage,
      camera_calibration_parsers,
      cv_bridge,
      eigen,
      geometry_msgs,
      image_geometry,
      image_transport,
      message_filters,
      nav_msgs,
      pkg-config,
      rclcpp,
      rclcpp_components,
      rclpy,
      std_msgs,
      swri_geometry_util,
      swri_math_util,
      swri_opencv_util,
      swri_roscpp,
      tf2,
    }:
    buildRosPackage {
      pname = "swri_image_util";
      version = "3.6.1-3";
      src = sources.swri_image_util;
      nativeBuildInputs = [ ament_cmake pkg-config ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ament_index_cpp boost camera_calibration_parsers cv_bridge eigen geometry_msgs image_geometry image_transport message_filters nav_msgs rclcpp rclcpp_components rclpy std_msgs swri_geometry_util swri_math_util swri_opencv_util swri_roscpp tf2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  swri_math_util = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      boost,
      buildRosPackage,
      rclcpp,
    }:
    buildRosPackage {
      pname = "swri_math_util";
      version = "3.6.1-3";
      src = sources.swri_math_util;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  swri_opencv_util = self.callPackage (
    {
      ament_cmake,
      boost,
      buildRosPackage,
      cv_bridge,
      swri_math_util,
    }:
    buildRosPackage {
      pname = "swri_opencv_util";
      version = "3.6.1-3";
      src = sources.swri_opencv_util;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost cv_bridge swri_math_util ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  swri_prefix_tools = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "swri_prefix_tools";
      version = "3.6.1-3";
      src = sources.swri_prefix_tools;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.psutil ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  swri_roscpp = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      boost,
      buildRosPackage,
      diagnostic_updater,
      gtest,
      marti_common_msgs,
      nav_msgs,
      rclcpp,
      ros_environment,
      rosidl_cmake,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
      std_srvs,
    }:
    buildRosPackage {
      pname = "swri_roscpp";
      version = "3.6.1-3";
      src = sources.swri_roscpp;
      nativeBuildInputs = [ ament_cmake ros_environment rosidl_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost diagnostic_updater marti_common_msgs nav_msgs rclcpp rosidl_default_runtime std_msgs std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  swri_route_util = self.callPackage (
    {
      ament_cmake,
      boost,
      buildRosPackage,
      marti_common_msgs,
      marti_nav_msgs,
      rclcpp,
      swri_geometry_util,
      swri_math_util,
      swri_roscpp,
      swri_transform_util,
      tf2_geometry_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "swri_route_util";
      version = "3.6.1-3";
      src = sources.swri_route_util;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost marti_common_msgs marti_nav_msgs rclcpp swri_geometry_util swri_math_util swri_roscpp swri_transform_util tf2_geometry_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  swri_serial_util = self.callPackage (
    {
      ament_cmake,
      boost,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "swri_serial_util";
      version = "3.6.1-3";
      src = sources.swri_serial_util;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  swri_system_util = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_index_cpp,
      boost,
      buildRosPackage,
      rclcpp,
    }:
    buildRosPackage {
      pname = "swri_system_util";
      version = "3.6.1-3";
      src = sources.swri_system_util;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  swri_transform_util = self.callPackage (
    {
      ament_cmake,
      ament_cmake_python,
      boost,
      buildPackages,
      buildRosPackage,
      cv_bridge,
      diagnostic_msgs,
      diagnostic_updater,
      geographic_msgs,
      geometry_msgs,
      geos,
      gps_msgs,
      libyamlcpp,
      marti_nav_msgs,
      pkg-config,
      proj,
      rcl_interfaces,
      rclcpp,
      rclcpp_components,
      rclpy,
      sensor_msgs,
      swri_math_util,
      swri_roscpp,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "swri_transform_util";
      version = "3.6.1-3";
      src = sources.swri_transform_util;
      nativeBuildInputs = [ ament_cmake ament_cmake_python pkg-config ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost cv_bridge diagnostic_msgs diagnostic_updater geographic_msgs geometry_msgs geos gps_msgs libyamlcpp marti_nav_msgs proj rcl_interfaces rclcpp rclcpp_components rclpy sensor_msgs swri_math_util swri_roscpp tf2 tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  system_fingerprint = self.callPackage (
    {
      buildRosPackage,
      python3Packages,
      rcl_interfaces,
      rclpy,
      ros2action,
      ros2cli,
      ros2node,
      ros2param,
      ros2topic,
    }:
    buildRosPackage {
      pname = "system_fingerprint";
      version = "0.7.0-4";
      src = sources.system_fingerprint;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.GitPython rcl_interfaces rclpy ros2action ros2cli ros2node ros2param ros2topic ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  system_modes = self.callPackage (
    {
      ament_cmake,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_flake8,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_pep257,
      ament_cmake_uncrustify,
      ament_index_python,
      ament_lint_auto,
      buildRosPackage,
      builtin_interfaces,
      launch_ros,
      launch_testing_ament_cmake,
      launch_testing_ros,
      rclcpp,
      rclcpp_lifecycle,
      ros2run,
      system_modes_msgs,
    }:
    buildRosPackage {
      pname = "system_modes";
      version = "0.9.0-6";
      src = sources.system_modes;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces launch_ros rclcpp rclcpp_lifecycle system_modes_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  system_modes_examples = self.callPackage (
    {
      ament_cmake,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_flake8,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_cmake_pep257,
      ament_cmake_uncrustify,
      ament_lint_auto,
      buildRosPackage,
      launch,
      launch_system_modes,
      rclcpp,
      rclcpp_lifecycle,
      ros2launch,
      system_modes,
      system_modes_msgs,
    }:
    buildRosPackage {
      pname = "system_modes_examples";
      version = "0.9.0-6";
      src = sources.system_modes_examples;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ launch_system_modes rclcpp rclcpp_lifecycle ros2launch system_modes system_modes_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  system_modes_msgs = self.callPackage (
    {
      ament_cmake,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "system_modes_msgs";
      version = "0.9.0-6";
      src = sources.system_modes_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tango_icons_vendor = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      tango-icon-theme,
    }:
    buildRosPackage {
      pname = "tango_icons_vendor";
      version = "0.3.0-3";
      src = sources.tango_icons_vendor;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ tango-icon-theme ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tcb_span = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "tcb_span";
      version = "1.0.2-5";
      src = sources.tcb_span;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  teleop_tools = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      joy_teleop,
      key_teleop,
      teleop_tools_msgs,
    }:
    buildRosPackage {
      pname = "teleop_tools";
      version = "1.5.0-3";
      src = sources.teleop_tools;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ joy_teleop key_teleop teleop_tools_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  teleop_tools_msgs = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "teleop_tools_msgs";
      version = "1.5.0-3";
      src = sources.teleop_tools_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  teleop_twist_joy = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      joy,
      launch_ros,
      launch_testing_ament_cmake,
      launch_testing_ros,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "teleop_twist_joy";
      version = "2.6.0-3";
      src = sources.teleop_twist_joy;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs joy rclcpp rclcpp_components sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  teleop_twist_keyboard = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      geometry_msgs,
      rclpy,
    }:
    buildRosPackage {
      pname = "teleop_twist_keyboard";
      version = "2.4.0-2";
      src = sources.teleop_twist_keyboard;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tensorrt_cmake_module = self.callPackage (
    {
      ament_cmake,
      ament_cmake_copyright,
      ament_cmake_lint_cmake,
      ament_cmake_xmllint,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "tensorrt_cmake_module";
      version = "0.0.3-4";
      src = sources.tensorrt_cmake_module;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  test_apex_test_tools = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      apex_test_tools,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "test_apex_test_tools";
      version = "0.0.2-9";
      src = sources.test_apex_test_tools;
      nativeBuildInputs = [ ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  test_interface_files = self.callPackage (
    {
      ament_cmake_core,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "test_interface_files";
      version = "0.11.0-3";
      src = sources.test_interface_files;
      nativeBuildInputs = [ ament_cmake_core ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  test_msgs = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      test_interface_files,
    }:
    buildRosPackage {
      pname = "test_msgs";
      version = "2.0.2-2";
      src = sources.test_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ test_interface_files ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  test_ros_gz_bridge = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      launch_ros,
      launch_testing,
      launch_testing_ament_cmake,
      ros_gz_bridge,
    }:
    buildRosPackage {
      pname = "test_ros_gz_bridge";
      version = "1.0.2-1";
      src = sources.test_ros_gz_bridge;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ros_gz_bridge ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tf2 = self.callPackage (
    {
      ament_cmake,
      ament_cmake_copyright,
      ament_cmake_cppcheck,
      ament_cmake_cpplint,
      ament_cmake_google_benchmark,
      ament_cmake_gtest,
      ament_cmake_lint_cmake,
      ament_cmake_ros,
      ament_cmake_uncrustify,
      ament_cmake_xmllint,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rcutils,
      rosidl_runtime_cpp,
    }:
    buildRosPackage {
      pname = "tf2";
      version = "0.36.4-1";
      src = sources.tf2;
      nativeBuildInputs = [ ament_cmake ament_cmake_ros ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_runtime_cpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tf2_2d = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      boost,
      buildRosPackage,
      eigen,
      rclcpp,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "tf2_2d";
      version = "1.0.1-4";
      src = sources.tf2_2d;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost eigen rclcpp tf2 tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tf2_bullet = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      bullet,
      geometry_msgs,
      tf2,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "tf2_bullet";
      version = "0.36.4-1";
      src = sources.tf2_bullet;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ bullet geometry_msgs tf2 tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tf2_eigen = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      eigen,
      geometry_msgs,
      tf2,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "tf2_eigen";
      version = "0.36.4-1";
      src = sources.tf2_eigen;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen geometry_msgs tf2 tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tf2_eigen_kdl = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      eigen,
      orocos_kdl_vendor,
      tf2,
    }:
    buildRosPackage {
      pname = "tf2_eigen_kdl";
      version = "0.36.4-1";
      src = sources.tf2_eigen_kdl;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen orocos_kdl_vendor tf2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tf2_geometry_msgs = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildPackages,
      buildRosPackage,
      geometry_msgs,
      orocos_kdl_vendor,
      python_cmake_module,
      rclcpp,
      tf2,
      tf2_ros,
      tf2_ros_py,
    }:
    buildRosPackage {
      pname = "tf2_geometry_msgs";
      version = "0.36.4-1";
      src = sources.tf2_geometry_msgs;
      nativeBuildInputs = [ ament_cmake python_cmake_module ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs orocos_kdl_vendor tf2 tf2_ros tf2_ros_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tf2_kdl = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      orocos_kdl_vendor,
      rclcpp,
      tf2,
      tf2_msgs,
      tf2_ros,
      tf2_ros_py,
    }:
    buildRosPackage {
      pname = "tf2_kdl";
      version = "0.36.4-1";
      src = sources.tf2_kdl;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs orocos_kdl_vendor tf2 tf2_ros tf2_ros_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tf2_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "tf2_msgs";
      version = "0.36.4-1";
      src = sources.tf2_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tf2_py = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      python_cmake_module,
      rclpy,
      rpyutils,
      tf2,
    }:
    buildRosPackage {
      pname = "tf2_py";
      version = "0.36.4-1";
      src = sources.tf2_py;
      nativeBuildInputs = [ ament_cmake python_cmake_module ];
      propagatedNativeBuildInputs = [ rpyutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rclpy tf2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tf2_ros = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      message_filters,
      rcl_interfaces,
      rclcpp,
      rclcpp_action,
      rclcpp_components,
      rosgraph_msgs,
      tf2,
      tf2_msgs,
    }:
    buildRosPackage {
      pname = "tf2_ros";
      version = "0.36.4-1";
      src = sources.tf2_ros;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs message_filters rcl_interfaces rclcpp rclcpp_action rclcpp_components tf2 tf2_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tf2_ros_py = self.callPackage (
    {
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      python3Packages,
      rclpy,
      sensor_msgs,
      std_msgs,
      tf2_msgs,
      tf2_py,
    }:
    buildRosPackage {
      pname = "tf2_ros_py";
      version = "0.36.4-1";
      src = sources.tf2_ros_py;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rclpy sensor_msgs std_msgs tf2_msgs tf2_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tf2_sensor_msgs = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_cmake_pytest,
      ament_lint_auto,
      ament_lint_common,
      buildPackages,
      buildRosPackage,
      eigen,
      eigen3_cmake_module,
      geometry_msgs,
      python_cmake_module,
      rclcpp,
      sensor_msgs,
      sensor_msgs_py,
      std_msgs,
      tf2,
      tf2_ros,
      tf2_ros_py,
    }:
    buildRosPackage {
      pname = "tf2_sensor_msgs";
      version = "0.36.4-1";
      src = sources.tf2_sensor_msgs;
      nativeBuildInputs = [ ament_cmake python_cmake_module ];
      propagatedNativeBuildInputs = [ eigen3_cmake_module buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen geometry_msgs sensor_msgs sensor_msgs_py std_msgs tf2 tf2_ros tf2_ros_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tf2_tools = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildPackages,
      buildRosPackage,
      graphviz,
      python3Packages,
      rclpy,
      tf2_msgs,
      tf2_py,
      tf2_ros_py,
    }:
    buildRosPackage {
      pname = "tf2_tools";
      version = "0.36.4-1";
      src = sources.tf2_tools;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.pyyaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ graphviz rclpy tf2_msgs tf2_py tf2_ros_py ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tf_transformations = self.callPackage (
    {
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "tf_transformations";
      version = "1.0.1-5";
      src = sources.tf_transformations;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  theora_image_transport = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      cv_bridge,
      image_transport,
      libogg,
      libtheora,
      pkg-config,
      pluginlib,
      rclcpp,
      rcutils,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "theora_image_transport";
      version = "4.0.0-2";
      src = sources.theora_image_transport;
      nativeBuildInputs = [ ament_cmake pkg-config rosidl_default_generators ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge image_transport libogg libtheora pluginlib rclcpp rosidl_default_runtime sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tile_map = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      glew,
      jsoncpp,
      libyamlcpp,
      mapviz,
      pluginlib,
      qt5,
      rclcpp,
      swri_math_util,
      swri_transform_util,
      tf2,
    }:
    buildRosPackage {
      pname = "tile_map";
      version = "2.3.0-3";
      src = sources.tile_map;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ jsoncpp qt5.qtbase ];
      propagatedBuildInputs = [ glew jsoncpp libyamlcpp mapviz pluginlib qt5.qtbase rclcpp swri_math_util swri_transform_util tf2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tinyspline_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      git,
    }:
    buildRosPackage {
      pname = "tinyspline_vendor";
      version = "0.6.1-1";
      src = sources.tinyspline_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package git ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tinyxml2_vendor = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      tinyxml-2,
    }:
    buildRosPackage {
      pname = "tinyxml2_vendor";
      version = "0.9.1-3";
      src = sources.tinyxml2_vendor;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ tinyxml-2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tinyxml_vendor = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      tinyxml,
    }:
    buildRosPackage {
      pname = "tinyxml_vendor";
      version = "0.10.0-3";
      src = sources.tinyxml_vendor;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ tinyxml ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tl_expected = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "tl_expected";
      version = "1.0.2-5";
      src = sources.tl_expected;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tlsf = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "tlsf";
      version = "0.9.0-3";
      src = sources.tlsf;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tlsf_cpp = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      rmw,
      rmw_implementation_cmake,
      std_msgs,
      tlsf,
    }:
    buildRosPackage {
      pname = "tlsf_cpp";
      version = "0.17.0-3";
      src = sources.tlsf_cpp;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake rmw ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp std_msgs tlsf ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  topic_based_ros2_control = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      angles,
      buildRosPackage,
      hardware_interface,
      picknik_ament_copyright,
      rclcpp,
      ros2_control_test_assets,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "topic_based_ros2_control";
      version = "0.2.0-3";
      src = sources.topic_based_ros2_control;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ angles hardware_interface rclcpp sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  topic_monitor = self.callPackage (
    {
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      launch,
      launch_ros,
      python3Packages,
      rclpy,
      std_msgs,
    }:
    buildRosPackage {
      pname = "topic_monitor";
      version = "0.33.4-1";
      src = sources.topic_monitor;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ launch_ros rclpy std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  topic_statistics_demo = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      rcutils,
      sensor_msgs,
      statistics_msgs,
    }:
    buildRosPackage {
      pname = "topic_statistics_demo";
      version = "0.33.4-1";
      src = sources.topic_statistics_demo;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp sensor_msgs statistics_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  topic_tools = self.callPackage (
    {
      ament_cmake_auto,
      ament_cmake_gtest,
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      rclcpp_components,
      rclpy,
      ros2cli,
      rosidl_default_generators,
      rosidl_runtime_py,
      std_msgs,
      topic_tools_interfaces,
    }:
    buildRosPackage {
      pname = "topic_tools";
      version = "1.3.0-3";
      src = sources.topic_tools;
      nativeBuildInputs = [ ament_cmake_auto ament_cmake_python rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rclcpp_components rclpy ros2cli rosidl_runtime_py topic_tools_interfaces ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  topic_tools_interfaces = self.callPackage (
    {
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "topic_tools_interfaces";
      version = "1.3.0-3";
      src = sources.topic_tools_interfaces;
      nativeBuildInputs = [ ament_cmake_auto rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  trac_ik = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      trac_ik_kinematics_plugin,
      trac_ik_lib,
    }:
    buildRosPackage {
      pname = "trac_ik";
      version = "2.0.1-1";
      src = sources.trac_ik;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ trac_ik_kinematics_plugin trac_ik_lib ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  trac_ik_kinematics_plugin = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      class_loader,
      generate_parameter_library,
      moveit_core,
      pluginlib,
      rclcpp,
      tf2_kdl,
      trac_ik_lib,
      urdf,
    }:
    buildRosPackage {
      pname = "trac_ik_kinematics_plugin";
      version = "2.0.1-1";
      src = sources.trac_ik_kinematics_plugin;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ class_loader generate_parameter_library moveit_core pluginlib rclcpp tf2_kdl trac_ik_lib urdf ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  trac_ik_lib = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      eigen,
      geometry_msgs,
      kdl_parser,
      nlopt,
      pkg-config,
      rclcpp,
      urdf,
    }:
    buildRosPackage {
      pname = "trac_ik_lib";
      version = "2.0.1-1";
      src = sources.trac_ik_lib;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ pkg-config ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen geometry_msgs kdl_parser nlopt rclcpp urdf ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tracetools = self.callPackage (
    {
      ament_cmake_gen_version_h,
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      lttng-tools,
      lttng-ust,
      pkg-config,
    }:
    buildRosPackage {
      pname = "tracetools";
      version = "8.2.1-1";
      src = sources.tracetools;
      nativeBuildInputs = [ ament_cmake_gen_version_h ament_cmake_ros pkg-config ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ lttng-tools lttng-ust ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tracetools_acceleration = self.callPackage (
    {
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      pkg-config,
    }:
    buildRosPackage {
      pname = "tracetools_acceleration";
      version = "0.4.1-4";
      src = sources.tracetools_acceleration;
      nativeBuildInputs = [ ament_cmake_ros pkg-config ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tracetools_analysis = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_mypy,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      jupyter,
      python3Packages,
      tracetools_read,
    }:
    buildRosPackage {
      pname = "tracetools_analysis";
      version = "3.0.0-6";
      src = sources.tracetools_analysis;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ jupyter python3Packages.pandas tracetools_read ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tracetools_image_pipeline = self.callPackage (
    {
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      pkg-config,
    }:
    buildRosPackage {
      pname = "tracetools_image_pipeline";
      version = "5.0.3-1";
      src = sources.tracetools_image_pipeline;
      nativeBuildInputs = [ ament_cmake_ros pkg-config ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tracetools_launch = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_mypy,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      launch,
      launch_ros,
      python3Packages,
      tracetools_trace,
    }:
    buildRosPackage {
      pname = "tracetools_launch";
      version = "8.2.1-1";
      src = sources.tracetools_launch;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ launch_ros tracetools_trace ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tracetools_read = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_mypy,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      python3Packages,
    }:
    buildRosPackage {
      pname = "tracetools_read";
      version = "8.2.1-1";
      src = sources.tracetools_read;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tracetools_test = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_mypy,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      launch,
      launch_ros,
      python3Packages,
      tracetools_launch,
      tracetools_read,
      tracetools_trace,
    }:
    buildRosPackage {
      pname = "tracetools_test";
      version = "8.2.1-1";
      src = sources.tracetools_test;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ launch_ros tracetools_launch tracetools_read tracetools_trace ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tracetools_trace = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_mypy,
      ament_pep257,
      ament_xmllint,
      buildRosPackage,
      lttngpy,
      python3Packages,
    }:
    buildRosPackage {
      pname = "tracetools_trace";
      version = "8.2.1-1";
      src = sources.tracetools_trace;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ lttngpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  trajectory_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "trajectory_msgs";
      version = "5.3.5-1";
      src = sources.trajectory_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  transmission_interface = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gen_version_h,
      ament_cmake_gmock,
      buildRosPackage,
      hardware_interface,
      pluginlib,
      ros2_control_test_assets,
    }:
    buildRosPackage {
      pname = "transmission_interface";
      version = "4.13.0-1";
      src = sources.transmission_interface;
      nativeBuildInputs = [ ament_cmake ament_cmake_gen_version_h ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ hardware_interface pluginlib ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tricycle_controller = self.callPackage (
    {
      ackermann_msgs,
      ament_cmake,
      ament_cmake_gmock,
      backward_ros,
      buildRosPackage,
      builtin_interfaces,
      controller_interface,
      controller_manager,
      generate_parameter_library,
      geometry_msgs,
      hardware_interface,
      hardware_interface_testing,
      nav_msgs,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      rcpputils,
      realtime_tools,
      ros2_control_test_assets,
      std_srvs,
      tf2,
      tf2_msgs,
    }:
    buildRosPackage {
      pname = "tricycle_controller";
      version = "4.11.0-1";
      src = sources.tricycle_controller;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ generate_parameter_library ];
      propagatedBuildInputs = [ ackermann_msgs backward_ros builtin_interfaces controller_interface geometry_msgs hardware_interface nav_msgs pluginlib rclcpp rclcpp_lifecycle rcpputils realtime_tools std_srvs tf2 tf2_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tricycle_steering_controller = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      backward_ros,
      buildRosPackage,
      control_msgs,
      controller_interface,
      controller_manager,
      generate_parameter_library,
      hardware_interface,
      hardware_interface_testing,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      ros2_control_test_assets,
      std_srvs,
      steering_controllers_library,
    }:
    buildRosPackage {
      pname = "tricycle_steering_controller";
      version = "4.11.0-1";
      src = sources.tricycle_steering_controller;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ generate_parameter_library ];
      propagatedBuildInputs = [ backward_ros control_msgs controller_interface hardware_interface pluginlib rclcpp rclcpp_lifecycle std_srvs steering_controllers_library ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  turbojpeg_compressed_image_transport = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cv_bridge,
      image_transport,
      libjpeg_turbo,
    }:
    buildRosPackage {
      pname = "turbojpeg_compressed_image_transport";
      version = "0.2.1-5";
      src = sources.turbojpeg_compressed_image_transport;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge image_transport libjpeg_turbo ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  turtle_tf2_cpp = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      launch,
      launch_ros,
      message_filters,
      rclcpp,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
      turtlesim,
    }:
    buildRosPackage {
      pname = "turtle_tf2_cpp";
      version = "0.5.0-1";
      src = sources.turtle_tf2_cpp;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs launch_ros message_filters rclcpp tf2 tf2_geometry_msgs tf2_ros turtlesim ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  turtle_tf2_py = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildPackages,
      buildRosPackage,
      geometry_msgs,
      launch,
      launch_ros,
      python3Packages,
      rclpy,
      tf2_ros,
      turtlesim,
    }:
    buildRosPackage {
      pname = "turtle_tf2_py";
      version = "0.5.0-1";
      src = sources.turtle_tf2_py;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ launch buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs launch_ros rclpy tf2_ros turtlesim ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  turtlebot3_fake_node = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      geometry_msgs,
      nav_msgs,
      rclcpp,
      robot_state_publisher,
      sensor_msgs,
      tf2,
      tf2_msgs,
      turtlebot3_msgs,
    }:
    buildRosPackage {
      pname = "turtlebot3_fake_node";
      version = "2.2.5-5";
      src = sources.turtlebot3_fake_node;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ ament_cmake ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs nav_msgs rclcpp robot_state_publisher sensor_msgs tf2 tf2_msgs turtlebot3_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  turtlebot3_gazebo = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      geometry_msgs,
      nav_msgs,
      rclcpp,
      sensor_msgs,
      tf2,
    }:
    buildRosPackage {
      pname = "turtlebot3_gazebo";
      version = "2.2.5-5";
      src = sources.turtlebot3_gazebo;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs nav_msgs rclcpp sensor_msgs tf2 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  turtlebot3_msgs = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "turtlebot3_msgs";
      version = "2.2.1-5";
      src = sources.turtlebot3_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  turtlebot3_simulations = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      turtlebot3_fake_node,
      turtlebot3_gazebo,
    }:
    buildRosPackage {
      pname = "turtlebot3_simulations";
      version = "2.2.5-5";
      src = sources.turtlebot3_simulations;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ turtlebot3_fake_node turtlebot3_gazebo ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  turtlesim = self.callPackage (
    {
      ament_cmake,
      ament_index_cpp,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      qt5,
      rcl_interfaces,
      rclcpp,
      rclcpp_action,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
      std_srvs,
    }:
    buildRosPackage {
      pname = "turtlesim";
      version = "1.8.3-1";
      src = sources.turtlesim;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ qt5.qtbase ];
      propagatedBuildInputs = [ ament_index_cpp geometry_msgs qt5.qtbase rcl_interfaces rclcpp rclcpp_action rosidl_default_runtime std_msgs std_srvs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tuw_geometry = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      opencv,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "tuw_geometry";
      version = "0.0.7-4";
      src = sources.tuw_geometry;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ opencv rclcpp rclcpp_components sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  tvm_vendor = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      git,
      libxml2,
      openblas,
      opencl-headers,
      ros_environment,
      spirv-headers,
      spirv-tools,
      vulkan-loader,
    }:
    buildRosPackage {
      pname = "tvm_vendor";
      version = "0.9.1-4";
      src = sources.tvm_vendor;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [ git ];
      buildInputs = [  ];
      propagatedBuildInputs = [ libxml2 openblas opencl-headers spirv-headers spirv-tools vulkan-loader ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  twist_mux = self.callPackage (
    {
      ament_cmake,
      ament_cmake_xmllint,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      diagnostic_updater,
      geometry_msgs,
      launch,
      launch_testing,
      launch_testing_ament_cmake,
      launch_testing_ros,
      rclcpp,
      std_msgs,
      twist_mux_msgs,
      visualization_msgs,
    }:
    buildRosPackage {
      pname = "twist_mux";
      version = "4.3.0-3";
      src = sources.twist_mux;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ diagnostic_updater geometry_msgs rclcpp std_msgs twist_mux_msgs visualization_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  twist_mux_msgs = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "twist_mux_msgs";
      version = "3.0.1-3";
      src = sources.twist_mux_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  twist_stamper = self.callPackage (
    {
      ament_copyright,
      ament_flake8,
      ament_pep257,
      buildRosPackage,
      geometry_msgs,
      python3Packages,
      rclpy,
      std_msgs,
    }:
    buildRosPackage {
      pname = "twist_stamper";
      version = "0.0.3-4";
      src = sources.twist_stamper;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rclpy std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  type_description_interfaces = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_core_generators,
      rosidl_core_runtime,
      service_msgs,
    }:
    buildRosPackage {
      pname = "type_description_interfaces";
      version = "2.0.2-2";
      src = sources.type_description_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_core_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_core_runtime service_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ublox = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      ublox_gps,
      ublox_msgs,
      ublox_serialization,
    }:
    buildRosPackage {
      pname = "ublox";
      version = "2.3.0-4";
      src = sources.ublox;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ublox_gps ublox_msgs ublox_serialization ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ublox_dgnss = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      ntrip_client_node,
      ublox_dgnss_node,
      ublox_nav_sat_fix_hp_node,
      ublox_ubx_interfaces,
      ublox_ubx_msgs,
    }:
    buildRosPackage {
      pname = "ublox_dgnss";
      version = "0.5.3-2";
      src = sources.ublox_dgnss;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ntrip_client_node ublox_dgnss_node ublox_nav_sat_fix_hp_node ublox_ubx_interfaces ublox_ubx_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ublox_dgnss_node = self.callPackage (
    {
      ament_cmake,
      ament_cmake_copyright,
      ament_cmake_cppcheck,
      ament_cmake_uncrustify,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      libusb1,
      pkg-config,
      rclcpp,
      rclcpp_components,
      rtcm_msgs,
      std_msgs,
      ublox_ubx_interfaces,
      ublox_ubx_msgs,
    }:
    buildRosPackage {
      pname = "ublox_dgnss_node";
      version = "0.5.3-2";
      src = sources.ublox_dgnss_node;
      nativeBuildInputs = [ ament_cmake pkg-config ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ libusb1 rclcpp rclcpp_components rtcm_msgs std_msgs ublox_ubx_interfaces ublox_ubx_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ublox_gps = self.callPackage (
    {
      ament_cmake_ros,
      asio,
      buildRosPackage,
      diagnostic_msgs,
      diagnostic_updater,
      geometry_msgs,
      rcl_interfaces,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      std_msgs,
      tf2,
      ublox_msgs,
      ublox_serialization,
    }:
    buildRosPackage {
      pname = "ublox_gps";
      version = "2.3.0-4";
      src = sources.ublox_gps;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ asio diagnostic_msgs diagnostic_updater geometry_msgs rcl_interfaces rclcpp rclcpp_components sensor_msgs std_msgs tf2 ublox_msgs ublox_serialization ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ublox_msgs = self.callPackage (
    {
      ament_cmake_ros,
      buildRosPackage,
      rosidl_default_generators,
      sensor_msgs,
      std_msgs,
      ublox_serialization,
    }:
    buildRosPackage {
      pname = "ublox_msgs";
      version = "2.3.0-4";
      src = sources.ublox_msgs;
      nativeBuildInputs = [ ament_cmake_ros rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ sensor_msgs std_msgs ublox_serialization ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ublox_nav_sat_fix_hp_node = self.callPackage (
    {
      ament_cmake,
      ament_cmake_copyright,
      ament_cmake_cppcheck,
      ament_cmake_uncrustify,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      std_msgs,
      ublox_ubx_interfaces,
      ublox_ubx_msgs,
    }:
    buildRosPackage {
      pname = "ublox_nav_sat_fix_hp_node";
      version = "0.5.3-2";
      src = sources.ublox_nav_sat_fix_hp_node;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rclcpp_components sensor_msgs std_msgs ublox_ubx_interfaces ublox_ubx_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ublox_serialization = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "ublox_serialization";
      version = "2.3.0-4";
      src = sources.ublox_serialization;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ublox_ubx_interfaces = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
    }:
    buildRosPackage {
      pname = "ublox_ubx_interfaces";
      version = "0.5.3-2";
      src = sources.ublox_ubx_interfaces;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rosidl_default_generators ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ublox_ubx_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      std_msgs,
    }:
    buildRosPackage {
      pname = "ublox_ubx_msgs";
      version = "0.5.3-2";
      src = sources.ublox_ubx_msgs;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rosidl_default_generators ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  udp_driver = self.callPackage (
    {
      ament_cmake_auto,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      asio,
      asio_cmake_module,
      buildRosPackage,
      io_context,
      lifecycle_msgs,
      rclcpp,
      rclcpp_components,
      rclcpp_lifecycle,
      std_msgs,
      udp_msgs,
    }:
    buildRosPackage {
      pname = "udp_driver";
      version = "1.2.0-4";
      src = sources.udp_driver;
      nativeBuildInputs = [ ament_cmake_auto asio_cmake_module ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ asio io_context lifecycle_msgs rclcpp rclcpp_components rclcpp_lifecycle std_msgs udp_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  udp_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "udp_msgs";
      version = "0.0.5-1";
      src = sources.udp_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [ ros_environment ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  uncrustify_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      buildRosPackage,
      uncrustify,
    }:
    buildRosPackage {
      pname = "uncrustify_vendor";
      version = "3.0.0-2";
      src = sources.uncrustify_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [ uncrustify ];
      buildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedBuildInputs = [ uncrustify ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  unique_identifier_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_core_generators,
      rosidl_core_runtime,
    }:
    buildRosPackage {
      pname = "unique_identifier_msgs";
      version = "2.5.0-3";
      src = sources.unique_identifier_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_core_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_core_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ur = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      ur_calibration,
      ur_controllers,
      ur_dashboard_msgs,
      ur_moveit_config,
      ur_robot_driver,
    }:
    buildRosPackage {
      pname = "ur";
      version = "2.4.8-1";
      src = sources.ur;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ur_calibration ur_controllers ur_dashboard_msgs ur_moveit_config ur_robot_driver ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ur_calibration = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      eigen,
      libyamlcpp,
      rclcpp,
      ur_client_library,
      ur_robot_driver,
    }:
    buildRosPackage {
      pname = "ur_calibration";
      version = "2.4.8-1";
      src = sources.ur_calibration;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ eigen libyamlcpp rclcpp ur_client_library ur_robot_driver ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ur_client_library = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      cmake,
    }:
    buildRosPackage {
      pname = "ur_client_library";
      version = "1.3.7-1";
      src = sources.ur_client_library;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [ ament_cmake ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ur_controllers = self.callPackage (
    {
      ament_cmake,
      angles,
      buildRosPackage,
      controller_interface,
      joint_trajectory_controller,
      lifecycle_msgs,
      pluginlib,
      rclcpp_lifecycle,
      rcutils,
      realtime_tools,
      std_msgs,
      std_srvs,
      ur_dashboard_msgs,
      ur_msgs,
    }:
    buildRosPackage {
      pname = "ur_controllers";
      version = "2.4.8-1";
      src = sources.ur_controllers;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rcutils ];
      buildInputs = [  ];
      propagatedBuildInputs = [ angles controller_interface joint_trajectory_controller lifecycle_msgs pluginlib rclcpp_lifecycle realtime_tools std_msgs std_srvs ur_dashboard_msgs ur_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ur_dashboard_msgs = self.callPackage (
    {
      action_msgs,
      ament_cmake,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "ur_dashboard_msgs";
      version = "2.4.8-1";
      src = sources.ur_dashboard_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ action_msgs rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ur_description = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      buildRosPackage,
      joint_state_publisher_gui,
      launch,
      launch_ros,
      launch_testing_ament_cmake,
      launch_testing_ros,
      robot_state_publisher,
      rviz2,
      urdf,
      urdfdom,
      xacro,
    }:
    buildRosPackage {
      pname = "ur_description";
      version = "2.4.0-1";
      src = sources.ur_description;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ joint_state_publisher_gui launch_ros robot_state_publisher rviz2 urdf xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ur_moveit_config = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      moveit_configs_utils,
      moveit_kinematics,
      moveit_planners,
      moveit_planners_chomp,
      moveit_ros_move_group,
      moveit_ros_visualization,
      moveit_servo,
      moveit_simple_controller_manager,
      ur_description,
      warehouse_ros_sqlite,
      xacro,
    }:
    buildRosPackage {
      pname = "ur_moveit_config";
      version = "2.4.8-1";
      src = sources.ur_moveit_config;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ moveit_configs_utils moveit_kinematics moveit_planners moveit_planners_chomp moveit_ros_move_group moveit_ros_visualization moveit_servo moveit_simple_controller_manager ur_description warehouse_ros_sqlite xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ur_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
    }:
    buildRosPackage {
      pname = "ur_msgs";
      version = "2.0.0-4";
      src = sources.ur_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  ur_robot_driver = self.callPackage (
    {
      ament_cmake,
      ament_cmake_python,
      backward_ros,
      buildRosPackage,
      controller_manager,
      controller_manager_msgs,
      force_torque_sensor_broadcaster,
      geometry_msgs,
      hardware_interface,
      joint_state_broadcaster,
      joint_state_publisher,
      joint_trajectory_controller,
      launch,
      launch_ros,
      launch_testing_ament_cmake,
      pluginlib,
      position_controllers,
      rclcpp,
      rclcpp_lifecycle,
      rclpy,
      robot_state_publisher,
      ros2_controllers_test_nodes,
      rviz2,
      socat,
      std_msgs,
      std_srvs,
      tf2_geometry_msgs,
      ur_client_library,
      ur_controllers,
      ur_dashboard_msgs,
      ur_description,
      ur_msgs,
      urdf,
      velocity_controllers,
      xacro,
    }:
    buildRosPackage {
      pname = "ur_robot_driver";
      version = "2.4.8-1";
      src = sources.ur_robot_driver;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [ launch ];
      buildInputs = [  ];
      propagatedBuildInputs = [ backward_ros controller_manager controller_manager_msgs force_torque_sensor_broadcaster geometry_msgs hardware_interface joint_state_broadcaster joint_state_publisher joint_trajectory_controller launch_ros pluginlib position_controllers rclcpp rclcpp_lifecycle rclpy robot_state_publisher ros2_controllers_test_nodes rviz2 socat std_msgs std_srvs tf2_geometry_msgs ur_client_library ur_controllers ur_dashboard_msgs ur_description ur_msgs urdf velocity_controllers xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  urdf = self.callPackage (
    {
      ament_cmake_google_benchmark,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      pluginlib,
      tinyxml2_vendor,
      urdf_parser_plugin,
      urdfdom,
      urdfdom_headers,
    }:
    buildRosPackage {
      pname = "urdf";
      version = "2.10.0-3";
      src = sources.urdf;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ pluginlib tinyxml2_vendor urdf_parser_plugin urdfdom urdfdom_headers ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  urdf_launch = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      joint_state_publisher,
      joint_state_publisher_gui,
      launch_ros,
      robot_state_publisher,
      rviz2,
      rviz_common,
      rviz_default_plugins,
      xacro,
    }:
    buildRosPackage {
      pname = "urdf_launch";
      version = "0.1.1-3";
      src = sources.urdf_launch;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ joint_state_publisher joint_state_publisher_gui launch_ros robot_state_publisher rviz2 rviz_common rviz_default_plugins xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  urdf_parser_plugin = self.callPackage (
    {
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      urdfdom_headers,
    }:
    buildRosPackage {
      pname = "urdf_parser_plugin";
      version = "2.10.0-3";
      src = sources.urdf_parser_plugin;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ urdfdom_headers ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  urdf_tutorial = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      buildRosPackage,
      urdf_launch,
    }:
    buildRosPackage {
      pname = "urdf_tutorial";
      version = "1.1.0-3";
      src = sources.urdf_tutorial;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ urdf_launch ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  urdfdom = self.callPackage (
    {
      buildRosPackage,
      cmake,
      console-bridge,
      console_bridge_vendor,
      python3,
      tinyxml-2,
      tinyxml2_vendor,
      urdfdom_headers,
    }:
    buildRosPackage {
      pname = "urdfdom";
      version = "4.0.0-3";
      src = sources.urdfdom;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ console-bridge console_bridge_vendor tinyxml-2 tinyxml2_vendor urdfdom_headers ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  urdfdom_headers = self.callPackage (
    {
      buildRosPackage,
      cmake,
    }:
    buildRosPackage {
      pname = "urdfdom_headers";
      version = "1.1.1-3";
      src = sources.urdfdom_headers;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  urdfdom_py = self.callPackage (
    {
      buildPackages,
      buildRosPackage,
      python3Packages,
      rclpy,
    }:
    buildRosPackage {
      pname = "urdfdom_py";
      version = "1.2.1-3";
      src = sources.urdfdom_py;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.pyyaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [ python3Packages.lxml rclpy ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  urg_c = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "urg_c";
      version = "1.0.4001-6";
      src = sources.urg_c;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  urg_node = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      boost,
      buildRosPackage,
      builtin_interfaces,
      diagnostic_updater,
      laser_proc,
      rclcpp,
      rclcpp_components,
      rosidl_default_generators,
      sensor_msgs,
      std_srvs,
      urdf,
      urg_c,
      urg_node_msgs,
    }:
    buildRosPackage {
      pname = "urg_node";
      version = "1.1.1-4";
      src = sources.urg_node;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rosidl_default_generators ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost builtin_interfaces diagnostic_updater laser_proc rclcpp rclcpp_components sensor_msgs std_srvs urdf urg_c urg_node_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  urg_node_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      std_msgs,
    }:
    buildRosPackage {
      pname = "urg_node_msgs";
      version = "1.0.1-9";
      src = sources.urg_node_msgs;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [ rosidl_default_generators ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  usb_cam = self.callPackage (
    {
      ament_cmake_auto,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      camera_info_manager,
      cv_bridge,
      ffmpeg,
      image_transport,
      image_transport_plugins,
      rclcpp,
      rclcpp_components,
      ros_environment,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
      std_srvs,
      v4l-utils,
    }:
    buildRosPackage {
      pname = "usb_cam";
      version = "0.8.1-1";
      src = sources.usb_cam;
      nativeBuildInputs = [ ament_cmake_auto ros_environment rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces camera_info_manager cv_bridge ffmpeg image_transport image_transport_plugins rclcpp rclcpp_components rosidl_default_runtime sensor_msgs std_msgs std_srvs v4l-utils ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  v4l2_camera = self.callPackage (
    {
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      camera_info_manager,
      cv_bridge,
      image_transport,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "v4l2_camera";
      version = "0.7.1-1";
      src = sources.v4l2_camera;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ camera_info_manager cv_bridge image_transport rclcpp rclcpp_components sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  velocity_controllers = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gmock,
      backward_ros,
      buildRosPackage,
      controller_manager,
      forward_command_controller,
      hardware_interface,
      hardware_interface_testing,
      pluginlib,
      rclcpp,
      ros2_control_test_assets,
    }:
    buildRosPackage {
      pname = "velocity_controllers";
      version = "4.11.0-1";
      src = sources.velocity_controllers;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ backward_ros forward_command_controller pluginlib rclcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  velodyne = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      velodyne_driver,
      velodyne_laserscan,
      velodyne_msgs,
      velodyne_pointcloud,
    }:
    buildRosPackage {
      pname = "velodyne";
      version = "2.3.0-4";
      src = sources.velodyne;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ velodyne_driver velodyne_laserscan velodyne_msgs velodyne_pointcloud ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  velodyne_description = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      urdf,
      xacro,
    }:
    buildRosPackage {
      pname = "velodyne_description";
      version = "2.0.3-4";
      src = sources.velodyne_description;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ urdf xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  velodyne_driver = self.callPackage (
    {
      ament_cmake_gtest,
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      diagnostic_msgs,
      diagnostic_updater,
      libpcap,
      rclcpp,
      rclcpp_components,
      tf2_ros,
      velodyne_msgs,
    }:
    buildRosPackage {
      pname = "velodyne_driver";
      version = "2.3.0-4";
      src = sources.velodyne_driver;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ diagnostic_msgs diagnostic_updater libpcap rclcpp rclcpp_components tf2_ros velodyne_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  velodyne_gazebo_plugins = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      gazebo_msgs,
      rclcpp,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "velodyne_gazebo_plugins";
      version = "2.0.3-4";
      src = sources.velodyne_gazebo_plugins;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ gazebo_msgs rclcpp sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  velodyne_laserscan = self.callPackage (
    {
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
    }:
    buildRosPackage {
      pname = "velodyne_laserscan";
      version = "2.3.0-4";
      src = sources.velodyne_laserscan;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rclcpp rclcpp_components sensor_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  velodyne_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "velodyne_msgs";
      version = "2.3.0-4";
      src = sources.velodyne_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  velodyne_pointcloud = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      angles,
      buildRosPackage,
      diagnostic_updater,
      geometry_msgs,
      libyamlcpp,
      message_filters,
      pcl,
      rclcpp,
      rclcpp_components,
      sensor_msgs,
      tf2,
      tf2_ros,
      velodyne_msgs,
    }:
    buildRosPackage {
      pname = "velodyne_pointcloud";
      version = "2.3.0-4";
      src = sources.velodyne_pointcloud;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ angles diagnostic_updater geometry_msgs libyamlcpp message_filters pcl rclcpp rclcpp_components sensor_msgs tf2 tf2_ros velodyne_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  velodyne_simulator = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      velodyne_description,
      velodyne_gazebo_plugins,
    }:
    buildRosPackage {
      pname = "velodyne_simulator";
      version = "2.0.3-4";
      src = sources.velodyne_simulator;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ velodyne_description velodyne_gazebo_plugins ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  vision_msgs = self.callPackage (
    {
      ament_cmake,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "vision_msgs";
      version = "4.1.1-3";
      src = sources.vision_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  vision_msgs_layers = self.callPackage (
    {
      ament_cmake_ros,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rqt_image_overlay_layer,
      vision_msgs,
    }:
    buildRosPackage {
      pname = "vision_msgs_layers";
      version = "0.2.0-4";
      src = sources.vision_msgs_layers;
      nativeBuildInputs = [ ament_cmake_ros ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rqt_image_overlay_layer vision_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  vision_msgs_rviz_plugins = self.callPackage (
    {
      ament_cmake,
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_common,
      buildPackages,
      buildRosPackage,
      pluginlib,
      rclcpp,
      rclpy,
      rviz2,
      rviz_common,
      rviz_default_plugins,
      rviz_rendering,
      vision_msgs,
      yaml_cpp_vendor,
    }:
    buildRosPackage {
      pname = "vision_msgs_rviz_plugins";
      version = "4.1.1-3";
      src = sources.vision_msgs_rviz_plugins;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ pluginlib rclcpp rclpy rviz2 rviz_common rviz_default_plugins rviz_rendering vision_msgs yaml_cpp_vendor ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  vision_opencv = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      cv_bridge,
      image_geometry,
    }:
    buildRosPackage {
      pname = "vision_opencv";
      version = "4.1.0-1";
      src = sources.vision_opencv;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge image_geometry ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  visp = self.callPackage (
    {
      buildRosPackage,
      bzip2,
      cmake,
      doxygen,
      eigen,
      libjpeg,
      liblapack,
      libpng,
      libv4l,
      libxml2,
      opencv,
      xorg,
    }:
    buildRosPackage {
      pname = "visp";
      version = "3.5.0-4";
      src = sources.visp;
      nativeBuildInputs = [ cmake doxygen ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ bzip2 ];
      propagatedBuildInputs = [ eigen libjpeg liblapack libpng libv4l libxml2 opencv xorg.libX11 ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  visualization_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      sensor_msgs,
      std_msgs,
    }:
    buildRosPackage {
      pname = "visualization_msgs";
      version = "5.3.5-1";
      src = sources.visualization_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime sensor_msgs std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  vitis_common = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      ament_vitis,
      buildRosPackage,
      opencl-headers,
    }:
    buildRosPackage {
      pname = "vitis_common";
      version = "0.4.2-4";
      src = sources.vitis_common;
      nativeBuildInputs = [ ament_cmake ament_vitis ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ opencl-headers ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  vrpn = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      cmake,
    }:
    buildRosPackage {
      pname = "vrpn";
      version = "7.35.0-18";
      src = sources.vrpn;
      nativeBuildInputs = [ cmake ];
      propagatedNativeBuildInputs = [ ament_cmake ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  vrpn_mocap = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      eigen,
      eigen3_cmake_module,
      geometry_msgs,
      rclcpp,
      std_msgs,
      tf2,
      vrpn,
    }:
    buildRosPackage {
      pname = "vrpn_mocap";
      version = "1.1.0-4";
      src = sources.vrpn_mocap;
      nativeBuildInputs = [ ament_cmake eigen3_cmake_module ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ eigen ];
      propagatedBuildInputs = [ geometry_msgs rclcpp std_msgs tf2 vrpn ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  warehouse_ros = self.callPackage (
    {
      ament_cmake,
      ament_cmake_copyright,
      ament_lint_auto,
      boost,
      buildRosPackage,
      geometry_msgs,
      openssl,
      pluginlib,
      rclcpp,
      std_msgs,
      tf2,
      tf2_geometry_msgs,
      tf2_ros,
    }:
    buildRosPackage {
      pname = "warehouse_ros";
      version = "2.0.4-5";
      src = sources.warehouse_ros;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ boost geometry_msgs openssl pluginlib rclcpp std_msgs tf2 tf2_geometry_msgs tf2_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  warehouse_ros_sqlite = self.callPackage (
    {
      ament_cmake,
      ament_cmake_copyright,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      boost,
      buildRosPackage,
      class_loader,
      geometry_msgs,
      rclcpp,
      sqlite,
      sqlite3_vendor,
      warehouse_ros,
    }:
    buildRosPackage {
      pname = "warehouse_ros_sqlite";
      version = "1.0.3-4";
      src = sources.warehouse_ros_sqlite;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ boost sqlite sqlite3_vendor ];
      propagatedBuildInputs = [ class_loader rclcpp sqlite warehouse_ros ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  webots_ros2 = self.callPackage (
    {
      ament_copyright,
      buildRosPackage,
      builtin_interfaces,
      python3Packages,
      rclpy,
      std_msgs,
      webots_ros2_control,
      webots_ros2_driver,
      webots_ros2_epuck,
      webots_ros2_importer,
      webots_ros2_mavic,
      webots_ros2_msgs,
      webots_ros2_tesla,
      webots_ros2_tests,
      webots_ros2_tiago,
      webots_ros2_turtlebot,
      webots_ros2_universal_robot,
    }:
    buildRosPackage {
      pname = "webots_ros2";
      version = "2023.1.2-4";
      src = sources.webots_ros2;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rclpy std_msgs webots_ros2_control webots_ros2_driver webots_ros2_epuck webots_ros2_importer webots_ros2_mavic webots_ros2_msgs webots_ros2_tesla webots_ros2_tiago webots_ros2_turtlebot webots_ros2_universal_robot ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  webots_ros2_control = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      controller_manager,
      hardware_interface,
      pluginlib,
      rclcpp,
      rclcpp_lifecycle,
      ros_environment,
      webots_ros2_driver,
    }:
    buildRosPackage {
      pname = "webots_ros2_control";
      version = "2023.1.2-4";
      src = sources.webots_ros2_control;
      nativeBuildInputs = [ ament_cmake ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ controller_manager hardware_interface pluginlib rclcpp rclcpp_lifecycle webots_ros2_driver ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  webots_ros2_driver = self.callPackage (
    {
      ament_cmake,
      ament_cmake_python,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      geometry_msgs,
      libyamlcpp,
      pluginlib,
      python_cmake_module,
      rclcpp,
      rclpy,
      ros_environment,
      sensor_msgs,
      std_msgs,
      tf2_geometry_msgs,
      tf2_ros,
      tinyxml2_vendor,
      vision_msgs,
      webots_ros2_importer,
      webots_ros2_msgs,
    }:
    buildRosPackage {
      pname = "webots_ros2_driver";
      version = "2023.1.2-4";
      src = sources.webots_ros2_driver;
      nativeBuildInputs = [ ament_cmake ament_cmake_python python_cmake_module ros_environment ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ geometry_msgs libyamlcpp pluginlib rclcpp rclpy sensor_msgs std_msgs tf2_geometry_msgs tf2_ros tinyxml2_vendor vision_msgs webots_ros2_importer webots_ros2_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  webots_ros2_epuck = self.callPackage (
    {
      ament_copyright,
      buildRosPackage,
      builtin_interfaces,
      controller_manager,
      diff_drive_controller,
      geometry_msgs,
      joint_state_broadcaster,
      nav_msgs,
      python3Packages,
      rclpy,
      robot_state_publisher,
      rviz2,
      sensor_msgs,
      std_msgs,
      tf2_ros,
      webots_ros2_control,
      webots_ros2_driver,
      webots_ros2_msgs,
    }:
    buildRosPackage {
      pname = "webots_ros2_epuck";
      version = "2023.1.2-4";
      src = sources.webots_ros2_epuck;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces controller_manager diff_drive_controller geometry_msgs joint_state_broadcaster nav_msgs rclpy robot_state_publisher rviz2 sensor_msgs std_msgs tf2_ros webots_ros2_control webots_ros2_driver webots_ros2_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  webots_ros2_importer = self.callPackage (
    {
      ament_copyright,
      buildPackages,
      buildRosPackage,
      builtin_interfaces,
      python3Packages,
      xacro,
    }:
    buildRosPackage {
      pname = "webots_ros2_importer";
      version = "2023.1.2-4";
      src = sources.webots_ros2_importer;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.lark ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces python3Packages.pycollada xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  webots_ros2_mavic = self.callPackage (
    {
      ament_copyright,
      buildRosPackage,
      builtin_interfaces,
      python3Packages,
      rclpy,
      webots_ros2_driver,
    }:
    buildRosPackage {
      pname = "webots_ros2_mavic";
      version = "2023.1.2-4";
      src = sources.webots_ros2_mavic;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces rclpy webots_ros2_driver ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  webots_ros2_msgs = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
      vision_msgs,
    }:
    buildRosPackage {
      pname = "webots_ros2_msgs";
      version = "2023.1.2-4";
      src = sources.webots_ros2_msgs;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime std_msgs vision_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  webots_ros2_tesla = self.callPackage (
    {
      ackermann_msgs,
      ament_copyright,
      buildPackages,
      buildRosPackage,
      builtin_interfaces,
      python3Packages,
      rclpy,
      webots_ros2_driver,
    }:
    buildRosPackage {
      pname = "webots_ros2_tesla";
      version = "2023.1.2-4";
      src = sources.webots_ros2_tesla;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [ buildPackages.python3Packages.numpy ];
      buildInputs = [  ];
      propagatedBuildInputs = [ ackermann_msgs builtin_interfaces python3Packages.opencv3 rclpy webots_ros2_driver ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  webots_ros2_tests = self.callPackage (
    {
      ament_copyright,
      buildRosPackage,
      geometry_msgs,
      launch,
      launch_testing,
      launch_testing_ament_cmake,
      launch_testing_ros,
      python3Packages,
      rclpy,
      ros2bag,
      rosbag2_storage_default_plugins,
      sensor_msgs,
      std_msgs,
      std_srvs,
      tf2_ros,
      webots_ros2_driver,
      webots_ros2_epuck,
      webots_ros2_mavic,
      webots_ros2_tesla,
      webots_ros2_tiago,
      webots_ros2_turtlebot,
      webots_ros2_universal_robot,
    }:
    buildRosPackage {
      pname = "webots_ros2_tests";
      version = "2023.1.2-4";
      src = sources.webots_ros2_tests;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ rclpy ros2bag rosbag2_storage_default_plugins webots_ros2_driver ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  webots_ros2_tiago = self.callPackage (
    {
      ament_copyright,
      buildRosPackage,
      builtin_interfaces,
      controller_manager,
      diff_drive_controller,
      geometry_msgs,
      joint_state_broadcaster,
      python3Packages,
      rclpy,
      robot_state_publisher,
      rviz2,
      tf2_ros,
      webots_ros2_control,
      webots_ros2_driver,
    }:
    buildRosPackage {
      pname = "webots_ros2_tiago";
      version = "2023.1.2-4";
      src = sources.webots_ros2_tiago;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces controller_manager diff_drive_controller geometry_msgs joint_state_broadcaster rclpy robot_state_publisher rviz2 tf2_ros webots_ros2_control webots_ros2_driver ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  webots_ros2_turtlebot = self.callPackage (
    {
      ament_copyright,
      buildRosPackage,
      builtin_interfaces,
      controller_manager,
      diff_drive_controller,
      joint_state_broadcaster,
      python3Packages,
      rclpy,
      robot_state_publisher,
      rviz2,
      tf2_ros,
      webots_ros2_control,
      webots_ros2_driver,
    }:
    buildRosPackage {
      pname = "webots_ros2_turtlebot";
      version = "2023.1.2-4";
      src = sources.webots_ros2_turtlebot;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces controller_manager diff_drive_controller joint_state_broadcaster rclpy robot_state_publisher rviz2 tf2_ros webots_ros2_control webots_ros2_driver ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  webots_ros2_universal_robot = self.callPackage (
    {
      ament_copyright,
      buildRosPackage,
      builtin_interfaces,
      control_msgs,
      controller_manager,
      joint_state_broadcaster,
      joint_trajectory_controller,
      python3Packages,
      rclpy,
      robot_state_publisher,
      rviz2,
      trajectory_msgs,
      webots_ros2_control,
      webots_ros2_driver,
      xacro,
    }:
    buildRosPackage {
      pname = "webots_ros2_universal_robot";
      version = "2023.1.2-4";
      src = sources.webots_ros2_universal_robot;
      nativeBuildInputs = [  ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces control_msgs controller_manager joint_state_broadcaster joint_trajectory_controller rclpy robot_state_publisher rviz2 trajectory_msgs webots_ros2_control webots_ros2_driver xacro ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  wiimote = self.callPackage (
    {
      ament_cmake,
      ament_cmake_auto,
      ament_cmake_gtest,
      ament_lint_auto,
      ament_lint_common,
      bluez,
      buildRosPackage,
      cwiid,
      geometry_msgs,
      rclcpp,
      rclcpp_components,
      rclcpp_lifecycle,
      sensor_msgs,
      std_msgs,
      std_srvs,
      wiimote_msgs,
    }:
    buildRosPackage {
      pname = "wiimote";
      version = "3.3.0-3";
      src = sources.wiimote;
      nativeBuildInputs = [ ament_cmake ament_cmake_auto ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ bluez cwiid ];
      propagatedBuildInputs = [ bluez cwiid geometry_msgs rclcpp rclcpp_components rclcpp_lifecycle sensor_msgs std_msgs std_srvs wiimote_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  wiimote_msgs = self.callPackage (
    {
      ament_cmake,
      ament_cmake_auto,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      builtin_interfaces,
      geometry_msgs,
      rosidl_default_generators,
      rosidl_default_runtime,
      std_msgs,
    }:
    buildRosPackage {
      pname = "wiimote_msgs";
      version = "3.3.0-3";
      src = sources.wiimote_msgs;
      nativeBuildInputs = [ ament_cmake ament_cmake_auto rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ builtin_interfaces geometry_msgs rosidl_default_runtime std_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  xacro = self.callPackage (
    {
      ament_cmake,
      ament_cmake_pytest,
      ament_cmake_python,
      ament_index_python,
      ament_lint_auto,
      buildPackages,
      buildRosPackage,
    }:
    buildRosPackage {
      pname = "xacro";
      version = "2.0.11-2";
      src = sources.xacro;
      nativeBuildInputs = [ ament_cmake ament_cmake_python ];
      propagatedNativeBuildInputs = [ ament_index_python buildPackages.python3Packages.pyyaml ];
      buildInputs = [  ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  yaml_cpp_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      buildRosPackage,
      libyamlcpp,
    }:
    buildRosPackage {
      pname = "yaml_cpp_vendor";
      version = "9.0.0-2";
      src = sources.yaml_cpp_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ libyamlcpp ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  zbar_ros = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cv_bridge,
      rclcpp,
      sensor_msgs,
      std_msgs,
      zbar,
      zbar_ros_interfaces,
    }:
    buildRosPackage {
      pname = "zbar_ros";
      version = "0.6.0-1";
      src = sources.zbar_ros;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cv_bridge rclcpp sensor_msgs std_msgs zbar zbar_ros_interfaces ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  zbar_ros_interfaces = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      rosidl_default_generators,
      rosidl_default_runtime,
      vision_msgs,
    }:
    buildRosPackage {
      pname = "zbar_ros_interfaces";
      version = "0.6.0-1";
      src = sources.zbar_ros_interfaces;
      nativeBuildInputs = [ ament_cmake rosidl_default_generators ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ rosidl_default_runtime vision_msgs ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  zenoh_bridge_dds = self.callPackage (
    {
      ament_cmake,
      buildRosPackage,
      cargo,
      clang,
    }:
    buildRosPackage {
      pname = "zenoh_bridge_dds";
      version = "0.5.0-5";
      src = sources.zenoh_bridge_dds;
      nativeBuildInputs = [ ament_cmake clang ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [ cargo ];
      propagatedBuildInputs = [  ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  zlib_point_cloud_transport = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      pluginlib,
      point_cloud_interfaces,
      point_cloud_transport,
      rclcpp,
      zlib,
    }:
    buildRosPackage {
      pname = "zlib_point_cloud_transport";
      version = "4.0.0-1";
      src = sources.zlib_point_cloud_transport;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ pluginlib point_cloud_interfaces point_cloud_transport rclcpp zlib ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  zmqpp_vendor = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      cppzmq,
      git,
    }:
    buildRosPackage {
      pname = "zmqpp_vendor";
      version = "0.0.2-4";
      src = sources.zmqpp_vendor;
      nativeBuildInputs = [ ament_cmake git ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ cppzmq ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  zstd_image_transport = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      image_transport,
      zlib,
    }:
    buildRosPackage {
      pname = "zstd_image_transport";
      version = "4.0.0-2";
      src = sources.zstd_image_transport;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ image_transport zlib ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  zstd_point_cloud_transport = self.callPackage (
    {
      ament_cmake,
      ament_lint_auto,
      ament_lint_common,
      buildRosPackage,
      pluginlib,
      point_cloud_interfaces,
      point_cloud_transport,
      rclcpp,
      zstd,
    }:
    buildRosPackage {
      pname = "zstd_point_cloud_transport";
      version = "4.0.0-1";
      src = sources.zstd_point_cloud_transport;
      nativeBuildInputs = [ ament_cmake ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ pluginlib point_cloud_interfaces point_cloud_transport rclcpp zstd ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
  zstd_vendor = self.callPackage (
    {
      ament_cmake,
      ament_cmake_vendor_package,
      buildRosPackage,
      zstd,
    }:
    buildRosPackage {
      pname = "zstd_vendor";
      version = "0.26.4-1";
      src = sources.zstd_vendor;
      nativeBuildInputs = [ ament_cmake ament_cmake_vendor_package ];
      propagatedNativeBuildInputs = [  ];
      buildInputs = [  ];
      propagatedBuildInputs = [ zstd ];
      depsTargetTarget = [  ];
      depsTargetTargetPropagated = [  ];
    }
  ) {};
}
